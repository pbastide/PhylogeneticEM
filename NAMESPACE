# Generated by roxygen2: do not edit by hand

S3method(enlight,PhyloEM)
S3method(extract,enumerate_parsimony)
S3method(extract,equivalent_shifts)
S3method(extract,parsimonyCost)
S3method(extract,parsimonyNumber)
S3method(extract,partitionsNumber)
S3method(extract,simul_process)
S3method(imputed_traits,PhyloEM)
S3method(log_likelihood,PhyloEM)
S3method(log_likelihood,params_process)
S3method(model_selection,PhyloEM)
S3method(params_process,PhyloEM)
S3method(params_process,character)
S3method(plot,PhyloEM)
S3method(plot,enumerate_parsimony)
S3method(plot,equivalent_shifts)
S3method(plot,params_process)
S3method(print,PhyloEM)
S3method(print,enumerate_parsimony)
S3method(print,equivalent_shifts)
S3method(print,params_process)
S3method(print,parsimonyCost)
S3method(print,parsimonyNumber)
S3method(print,partitionsNumber)
S3method(residuals,PhyloEM)
S3method(simul_process,PhyloEM)
S3method(simul_process,params_process)
export(PhyloEM)
export(allocate_regimes_from_shifts)
export(allocate_shifts_from_regimes)
export(check_parsimony)
export(clusters_from_shifts)
export(compute_betas_from_shifts)
export(compute_dist_phy)
export(compute_shifts_from_betas)
export(compute_stationary_variance)
export(compute_times_ca)
export(correspondenceEdges)
export(enlight)
export(enumerate_parsimony)
export(enumerate_tips_under_edges)
export(equivalent_shifts)
export(estimateEM)
export(extract)
export(find_grid_alpha)
export(find_rotation)
export(get_criterion)
export(imputed_traits)
export(incidence.matrix)
export(incidence.matrix.full)
export(log_likelihood)
export(merge_alpha_grids)
export(merge_rotations)
export(model_selection)
export(node_optimal_values)
export(params_BM)
export(params_OU)
export(params_process)
export(parsimonyCost)
export(parsimonyNumber)
export(partitionsNumber)
export(plot_criterion)
export(shifts.list_to_matrix)
export(shifts.matrix_to_list)
export(shifts_to_simmap)
export(simul_process)
export(transform_branch_length)
import(Matrix)
import(ape)
import(methods)
importFrom(Rcpp,evalCpp)
importFrom(foreach,"%do%")
importFrom(foreach,"%dopar%")
importFrom(grDevices,col2rgb)
importFrom(grDevices,gray)
importFrom(grDevices,gray.colors)
importFrom(grDevices,palette)
importFrom(grDevices,rainbow)
importFrom(grDevices,rgb)
importFrom(graphics,axis)
importFrom(graphics,close.screen)
importFrom(graphics,legend)
importFrom(graphics,par)
importFrom(graphics,plot)
importFrom(graphics,rect)
importFrom(graphics,screen)
importFrom(graphics,segments)
importFrom(graphics,split.screen)
importFrom(graphics,strwidth)
importFrom(graphics,text)
importFrom(stats,coef)
importFrom(stats,cophenetic)
importFrom(stats,cov)
importFrom(stats,lm)
importFrom(stats,lm.fit)
importFrom(stats,mad)
importFrom(stats,median)
importFrom(stats,na.omit)
importFrom(stats,nls.control)
importFrom(stats,optimize)
importFrom(stats,quantile)
importFrom(stats,rbinom)
importFrom(stats,reorder)
importFrom(stats,residuals)
importFrom(stats,rnorm)
importFrom(stats,rt)
importFrom(stats,var)
importFrom(utils,capture.output)
importFrom(utils,combn)
importFrom(utils,setTxtProgressBar)
importFrom(utils,txtProgressBar)
useDynLib(PhylogeneticEM, .registration=TRUE)
