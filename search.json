[{"path":"/articles/monkeys.html","id":"dataset","dir":"Articles","previous_headings":"","what":"Dataset","title":"Analysis of the New World Monkeys dataset","text":"dataset taken Aristide et al.Â (2016)1, embedded package. can load plot easily.  plot function inherits optional arguments popular ape plot function (instance, optional argument show.tip.label used). Many graphical parameters can set user, control output function, see manual pages details. two traits (PCs) represented right, scale. Plotting data tree analyzing allows us spot potential errors outliers.","code":"library(PhylogeneticEM) data(monkeys)  plot(params_BM(p = 2),      data = monkeys$dat, phylo = monkeys$phy,      show.tip.label = TRUE, cex = 0.5, no.margin = TRUE)"},{"path":"/articles/monkeys.html","id":"inference","dir":"Articles","previous_headings":"","what":"Inference","title":"Analysis of the New World Monkeys dataset","text":"default, inference done automatically computed grid 10 alpha values. keep computations , ask custom grid 4 values, number raised real application. maximum number shifts considered 10, adapted considering size tree. result stored object class PhyloEM, several extractors available (see manual). plot function shows solution selected default model selection method, another one can selected needed. optional parameters can used control figure look like.  Function plot_criterion shows value default model selection criterion number shifts.  , solution selected three shifts. shown , criterion however bit flat around minimum, strange value four shifts. outlier actually due small grid alpha taken toy example, goes away finer analysis. try refine result, one solution use finer grid alpha values. grid 100 values used, solution K=5 shifts actually selected. can plot comparison.","code":"res <- PhyloEM(phylo = monkeys$phy,                Y_data = monkeys$dat,                process = \"scOU\",                   ## scalar OU model                random.root = TRUE,                 ## Root is stationary                stationary.root = TRUE,                nbr_alpha = 4,                      ## Number of alpha values tested (should be raised)                K_max = 10,                         ## Maximal number of shifts                parallel_alpha = TRUE,              ## This can be set to TRUE for                Ncores = 2)                         ## parallel computations res ##   |                                                                              |                                                                      |   0%  |                                                                              |======                                                                |   9%  |                                                                              |=============                                                         |  18%  |                                                                              |===================                                                   |  27%  |                                                                              |=========================                                             |  36%  |                                                                              |================================                                      |  45%  |                                                                              |======================================                                |  55%  |                                                                              |=============================================                         |  64%  |                                                                              |===================================================                   |  73%  |                                                                              |=========================================================             |  82%  |                                                                              |================================================================      |  91%  |                                                                              |======================================================================| 100% ##   |                                                                              |                                                                      |   0%  |                                                                              |======                                                                |   9%  |                                                                              |=============                                                         |  18%  |                                                                              |===================                                                   |  27%  |                                                                              |=========================                                             |  36%  |                                                                              |================================                                      |  45%  |                                                                              |======================================                                |  55%  |                                                                              |=============================================                         |  64%  |                                                                              |===================================================                   |  73%  |                                                                              |=========================================================             |  82%  |                                                                              |================================================================      |  91%  |                                                                              |======================================================================| 100% ##   |                                                                              |                                                                      |   0%  |                                                                              |======                                                                |   9%  |                                                                              |=============                                                         |  18%  |                                                                              |===================                                                   |  27%  |                                                                              |=========================                                             |  36%  |                                                                              |================================                                      |  45%  |                                                                              |======================================                                |  55%  |                                                                              |=============================================                         |  64%  |                                                                              |===================================================                   |  73%  |                                                                              |=========================================================             |  82%  |                                                                              |================================================================      |  91%  |                                                                              |======================================================================| 100% ##   |                                                                              |                                                                      |   0%  |                                                                              |======                                                                |   9%  |                                                                              |=============                                                         |  18%  |                                                                              |===================                                                   |  27%  |                                                                              |=========================                                             |  36%  |                                                                              |================================                                      |  45%  |                                                                              |======================================                                |  55%  |                                                                              |=============================================                         |  64%  |                                                                              |===================================================                   |  73%  |                                                                              |=========================================================             |  82%  |                                                                              |================================================================      |  91%  |                                                                              |======================================================================| 100% ## Result of the PhyloEM algorithm. ## Selected parameters by the default method: ## 2 dimensional scOU process with a random stationary root. ##  ## Root expectations: ##         PC1         PC2  ##  0.01552091 -0.01483439  ##  ## Root variance: ##               PC1           PC2 ## PC1  3.630764e-04 -9.029145e-05 ## PC2 -9.029145e-05  1.228925e-04 ##  ## Process variance: ##               PC1           PC2 ## PC1  1.475308e-04 -3.668861e-05 ## PC2 -3.668861e-05  4.993556e-05 ##  ## Process selection strength: ##           PC1       PC2 ## PC1 0.2031677 0.0000000 ## PC2 0.0000000 0.2031677 ##  ## Process root optimal values: ##         PC1         PC2  ##  0.01552091 -0.01483439  ##  ## Shifts positions on branches: 4, 63, 46  ## Shifts values: ##               4           63         46 ## PC1 -0.01812684 -0.093914264 0.08031859 ## PC2  0.05234025 -0.008148889 0.02527294 ##  ##  ##  ## See help to see all plotting and handling functions. plot(res) plot_criterion(res) plot(res, params = params_process(res, K = 5))"},{"path":"/articles/monkeys.html","id":"equivalent-solutions","dir":"Articles","previous_headings":"","what":"Equivalent Solutions","title":"Analysis of the New World Monkeys dataset","text":"plotting solution 5 shifts, following warning pops : Indeed, solution 5 shifts three equivalent shift allocations branches. solutions can found plotted thanks function equivalent_shifts.  , three solutions similar, just two shifts appearing two sister branches bottom tree. Note solutions 5 shifts, define clustering tips 6 groups. configurations likelihood, hence distinguished data.","code":"## Warning in params_process.PhyloEM(res, K = 5): There are several equivalent ## solutions for this shift position. plot(equivalent_shifts(monkeys$phy, params_process(res, K = 5)),      show_shifts_values = FALSE, shifts_cex = 0.5)"},{"path":"/articles/monkeys.html","id":"invariance-by-rotation","dir":"Articles","previous_headings":"","what":"Invariance by Rotation","title":"Analysis of the New World Monkeys dataset","text":"theory, method affected rotation dataset (see Adams & Collyer, 2018 2 review problem). However, numerical issues, possible results vary little bit. can explore behavior dataset.  first sight, solution looks different. Indeed, applied rotated dataset, PhyloEM selects solution 7 shifts, instead 3. , look solution obtained , say, 3 shifts, identical:  Looking bit closely outcome, can see log likelihoods actually similar, except places:  happens , numerical reasons, likelihood slightly better optimized cases one datasets. impact criterion used, based penalized likelihood. can see plot:  , two datasets equivalent, donât need choose two runs. number shifts, goal find maximum likelihood solution. Hence, number shifts, can just take best two solutions, one converged best. can done dedicated function: function takes first fit reference (, original data). given number shifts, second fit better likelihood, solution selected instead. Note parameters second fit expressed rotated space, , selected, need transformed back original space (done automatically function). resulting solution highest likelihood possible value K, model selection criterion can applied new solution path.  can see solution 3 shifts now selected . merge function can applied two fits, illustrated . , change result.","code":"# An arbitrary rotation theta <- pi/4 rot <- matrix(c(cos(theta), -sin(theta), sin(theta), cos(theta)),               nrow = 2, ncol = 2)  # Rotate data Yrot <- t(rot) %*% monkeys$dat rownames(Yrot) <- rownames(monkeys$dat)  # PhyloEM on rotated data res_rot <- PhyloEM(phylo = monkeys$phy,                    Y_data = Yrot,                      ## rotated data                    process = \"scOU\",                                       random.root = TRUE,                                     stationary.root = TRUE,                    nbr_alpha = 4,                    K_max = 10,                                             parallel_alpha = TRUE,                                  Ncores = 2) ##   |                                                                              |                                                                      |   0%  |                                                                              |======                                                                |   9%  |                                                                              |=============                                                         |  18%  |                                                                              |===================                                                   |  27%  |                                                                              |=========================                                             |  36%  |                                                                              |================================                                      |  45%  |                                                                              |======================================                                |  55%  |                                                                              |=============================================                         |  64%  |                                                                              |===================================================                   |  73%  |                                                                              |=========================================================             |  82%  |                                                                              |================================================================      |  91%  |                                                                              |======================================================================| 100% ##   |                                                                              |                                                                      |   0%  |                                                                              |======                                                                |   9%  |                                                                              |=============                                                         |  18%  |                                                                              |===================                                                   |  27%  |                                                                              |=========================                                             |  36%  |                                                                              |================================                                      |  45%  |                                                                              |======================================                                |  55%  |                                                                              |=============================================                         |  64%  |                                                                              |===================================================                   |  73%  |                                                                              |=========================================================             |  82%  |                                                                              |================================================================      |  91%  |                                                                              |======================================================================| 100% ##   |                                                                              |                                                                      |   0%  |                                                                              |======                                                                |   9%  |                                                                              |=============                                                         |  18%  |                                                                              |===================                                                   |  27%  |                                                                              |=========================                                             |  36%  |                                                                              |================================                                      |  45%  |                                                                              |======================================                                |  55%  |                                                                              |=============================================                         |  64%  |                                                                              |===================================================                   |  73%  |                                                                              |=========================================================             |  82%  |                                                                              |================================================================      |  91%  |                                                                              |======================================================================| 100% ##   |                                                                              |                                                                      |   0%  |                                                                              |======                                                                |   9%  |                                                                              |=============                                                         |  18%  |                                                                              |===================                                                   |  27%  |                                                                              |=========================                                             |  36%  |                                                                              |================================                                      |  45%  |                                                                              |======================================                                |  55%  |                                                                              |=============================================                         |  64%  |                                                                              |===================================================                   |  73%  |                                                                              |=========================================================             |  82%  |                                                                              |================================================================      |  91%  |                                                                              |======================================================================| 100% plot(res_rot) plot(res, params = params_process(res, K = 3), no.margin = TRUE) plot(res_rot, params = params_process(res, K = 3), no.margin = TRUE) plot_criterion(res, \"log_likelihood\") plot_criterion(res_rot, \"log_likelihood\", pch = \"+\", add = TRUE) plot_criterion(res) plot_criterion(res_rot, pch = \"+\", add = TRUE) res_merge <- merge_rotations(res, res_rot) plot_criterion(res_merge) # An other rotation theta <- pi/3 rot2 <- matrix(c(cos(theta), -sin(theta), sin(theta), cos(theta)),               nrow = 2, ncol = 2)  # Rotate data Yrot2 <- t(rot2) %*% monkeys$dat rownames(Yrot2) <- rownames(monkeys$dat)  # PhyloEM on rotated data res_rot2 <- PhyloEM(phylo = monkeys$phy,                    Y_data = Yrot2,                    process = \"scOU\",                                       random.root = TRUE,                                     stationary.root = TRUE,                    nbr_alpha = 2,           ## Note that this can also be different                    K_max = 10,                                            parallel_alpha = TRUE,                                Ncores = 2)                          # Merge res_merge2 <- merge_rotations(res, res_rot, res_rot2) ##   |                                                                              |                                                                      |   0%  |                                                                              |======                                                                |   9%  |                                                                              |=============                                                         |  18%  |                                                                              |===================                                                   |  27%  |                                                                              |=========================                                             |  36%  |                                                                              |================================                                      |  45%  |                                                                              |======================================                                |  55%  |                                                                              |=============================================                         |  64%  |                                                                              |===================================================                   |  73%  |                                                                              |=========================================================             |  82%  |                                                                              |================================================================      |  91%  |                                                                              |======================================================================| 100% ##   |                                                                              |                                                                      |   0%  |                                                                              |======                                                                |   9%  |                                                                              |=============                                                         |  18%  |                                                                              |===================                                                   |  27%  |                                                                              |=========================                                             |  36%  |                                                                              |================================                                      |  45%  |                                                                              |======================================                                |  55%  |                                                                              |=============================================                         |  64%  |                                                                              |===================================================                   |  73%  |                                                                              |=========================================================             |  82%  |                                                                              |================================================================      |  91%  |                                                                              |======================================================================| 100% plot_criterion(res_merge2)"},{"path":"/articles/monkeys.html","id":"lizard-dataset","dir":"Articles","previous_headings":"","what":"Lizard Dataset","title":"Analysis of the New World Monkeys dataset","text":"previous dataset, introduction rotations might appear bit artificial. However, highly correlated datasets, rotations might needed. instance, studying Anolis Lizard dataset (Mahler et al., 20133), application several pseudo-orthonormalization techniques original dataset needed get good maximum likelihood solution values K. See Bastide et al.Â (2018)4 details analysis.","code":""},{"path":"/articles/monkeys.html","id":"eb-model","dir":"Articles","previous_headings":"","what":"EB model","title":"Analysis of the New World Monkeys dataset","text":"can shown Early Burst model (EB) formally equivalent ultrametric tree non-shifted scOU negative alpha value. possible include model fit, allowing ânegative alphaâ values function PhyloEM. Note , although case shift clear interpretation (EB model), scOU shifts negative alpha can hard interpret, always appropriate. One hence careful using interpreting model, use functionality encouraged first analysis. can extract parameter fit shift, equivalent EB model: âselection strengthâ Î±\\alpha linked rate rr EB relation: r=2Î±r = 2\\alpha. can also plot criterion model selection. Empirically, found âBGHmlrawâ criterion behave bit better configuration.  , solution 7 shifts (positive alpha) selected. , keep computations minimum, used coarse grid 4 values alpha. finer grid, solution 5 shifts selected.","code":"res_neg <- PhyloEM(phylo = monkeys$phy,                    Y_data = monkeys$dat,                    process = \"scOU\",                    random.root = FALSE,      ## root needs to be fixed                    K_max = 10,                    parallel_alpha = TRUE,                    Ncores = 2,                    nbr_alpha = 4,            ## 2 negative, 2 positive (should be more)                    allow_negative = TRUE)    ## allow negative alpha in the grid ##   |                                                                              |                                                                      |   0%  |                                                                              |======                                                                |   9%  |                                                                              |=============                                                         |  18%  |                                                                              |===================                                                   |  27%  |                                                                              |=========================                                             |  36%  |                                                                              |================================                                      |  45%  |                                                                              |======================================                                |  55%  |                                                                              |=============================================                         |  64%  |                                                                              |===================================================                   |  73%  |                                                                              |=========================================================             |  82%  |                                                                              |================================================================      |  91%  |                                                                              |======================================================================| 100% ##   |                                                                              |                                                                      |   0%  |                                                                              |======                                                                |   9%  |                                                                              |=============                                                         |  18%  |                                                                              |===================                                                   |  27%  |                                                                              |=========================                                             |  36%  |                                                                              |================================                                      |  45%  |                                                                              |======================================                                |  55%  |                                                                              |=============================================                         |  64%  |                                                                              |===================================================                   |  73%  |                                                                              |=========================================================             |  82%  |                                                                              |================================================================      |  91%  |                                                                              |======================================================================| 100% ##   |                                                                              |                                                                      |   0%  |                                                                              |======                                                                |   9%  |                                                                              |=============                                                         |  18%  |                                                                              |===================                                                   |  27%  |                                                                              |=========================                                             |  36%  |                                                                              |================================                                      |  45%  |                                                                              |======================================                                |  55%  |                                                                              |=============================================                         |  64%  |                                                                              |===================================================                   |  73%  |                                                                              |=========================================================             |  82%  |                                                                              |================================================================      |  91%  |                                                                              |======================================================================| 100% ##   |                                                                              |                                                                      |   0%  |                                                                              |======                                                                |   9%  |                                                                              |=============                                                         |  18%  |                                                                              |===================                                                   |  27%  |                                                                              |=========================                                             |  36%  |                                                                              |================================                                      |  45%  |                                                                              |======================================                                |  55%  |                                                                              |=============================================                         |  64%  |                                                                              |===================================================                   |  73%  |                                                                              |=========================================================             |  82%  |                                                                              |================================================================      |  91%  |                                                                              |======================================================================| 100% ##   |                                                                              |                                                                      |   0%  |                                                                              |======                                                                |   9%  |                                                                              |=============                                                         |  18%  |                                                                              |===================                                                   |  27%  |                                                                              |=========================                                             |  36%  |                                                                              |================================                                      |  45%  |                                                                              |======================================                                |  55%  |                                                                              |=============================================                         |  64%  |                                                                              |===================================================                   |  73%  |                                                                              |=========================================================             |  82%  |                                                                              |================================================================      |  91%  |                                                                              |======================================================================| 100% params_process(res_neg, K = 0) ## Warning in params_process.PhyloEM(res_neg, K = 0): The 'selection strength' is ## negative. One should only look at the un-normalized values of the shifts. To do ## so, please call this function using 'rBM = TRUE'. ## Warning in check.selection.strength(process, ...): All the eigen values of the ## selection strengh do not have a strictly positive real part. That might cause ## some issue. Proceed with caution. ##  ## 2 dimensional scOU process with a fixed root. ##  ##  ## Root value: ##          PC1          PC2  ##  0.006507194 -0.003532184  ##  ## Process variance: ##               PC1           PC2 ## PC1  5.367696e-05 -5.648422e-06 ## PC2 -5.648422e-06  1.273209e-05 ##  ## Process selection strength: ##             PC1         PC2 ## PC1 -0.01316466  0.00000000 ## PC2  0.00000000 -0.01316466 ##  ## Process root optimal values: ##          PC1          PC2  ##  0.006507194 -0.003532184  ##  ## This process has no shift. plot_criterion(res_neg, \"BGHmlraw\")"},{"path":"/articles/tutorial.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"An Introduction to the PhylogeneticEM Package","text":"PhylogeneticEM package designed automatically detect shifts quantitative traits. Simply load package :","code":"library(PhylogeneticEM)"},{"path":"/articles/tutorial.html","id":"simulation-of-a-dataset","dir":"Articles","previous_headings":"","what":"Simulation of a dataset","title":"An Introduction to the PhylogeneticEM Package","text":"show functions work, letâs first simulate traits known parameters. use function sim.bd.taxa.age package TreeSim simulate phylogenetic tree. choose set parameters, using function params_process: Note , took selection strength scalar matrix, specify full matrix. Also, specified ancestral values optimum states: took 00 default. position shifts specified number edge occurs. can saw using standard plot package ape. parameters constructed, can check position shifts plotting :  can simulate process along tree parameters: can extract matrix simulated data object: column names matrix set tip labels tree. default, row names left blank, , sake demonstration, letâs assume two traits named ââ âBâ: Finally, can plot simulated process tree see looks like:","code":"set.seed(17920902) ntaxa = 80 tree <- TreeSim::sim.bd.taxa.age(n = ntaxa, numbsim = 1, lambda = 0.1, mu = 0,                                  age = 1, mrca = TRUE)[[1]] params <- params_process(\"OU\",                             ## Process                          p = 2,                            ## Dimension                          variance = diag(0.5, 2, 2) + 0.5, ## Rate matrix                          selection.strength = 3,           ## Selection Strength                          random = TRUE,                    ## Root is random                          stationary.root = TRUE,           ## Root is stationary                          edges = c(16, 81, 124),           ## Positions of the shifts                          values = cbind(c(5, 4),           ## Values of the shifts                                         c(-4, -5),                                         c(5, -3))) plot(params, phylo = tree, traits = 1, value_in_box = TRUE, shifts_bg = \"white\") plot(params, phylo = tree, traits = 2, value_in_box = TRUE, shifts_bg = \"white\") sim <- simul_process(params, tree) data <- extract(sim,             ## The simul_process object                 what = \"states\", ## We want the actual values                 where = \"tips\")  ## Only at the tips of the tree rownames(data) <- c(\"A\", \"B\") plot(params, phylo = tree, data = data)"},{"path":"/articles/tutorial.html","id":"inference","dir":"Articles","previous_headings":"","what":"Inference","title":"An Introduction to the PhylogeneticEM Package","text":"section, take traits simulated function simul_process, use function PhyloEM inference parameters. make things interesting, letâs assume missing data: default, inference done automatically computed grid alpha values. , keep computations minimum, use 22 values alpha, including true value. true application however, grid 1010 values Î±\\alpha automatically chosen. fitted object contains inferred parameters every values Î±\\alpha KK, well parameters selected various model selection criteria. , can see original shifts recovered model selection procedure. can plot obtained solution, shown . inferred states tips shown dotted lines. Notice coherent positions shifts found.  function automatically plots solution selected model selection criterion. can plot criterion, see whether solution selected clear minimum.  , criterion behaves rather well, solution K=3K=3 seems good choice. , plotted solution given LINselect method (default). might want see solution given another selection method, slope heuristic. case, just need run: extracted parameters method params_process. , results . can also extract solution given number shifts /given value alpha. instance, can see simple case, inferred position shifts robust value selection strength:  inferred shifts values however quite different:","code":"nMiss <- floor(ntaxa * 2 * 0.1)                       ## 10% of missing data miss <- sample(1:(2 * ntaxa), nMiss, replace = FALSE) ## sample missing randomly chars <- (miss - 1) %% 2 + 1                          ## Trace back rows and columns tips <- (miss - 1) %/% 2 + 1 for (i in 1:nMiss){   data[chars[i], tips[i]] <- NA                       ## Forget some values } ## Grid on alpha alpha_grid <- c(1, 3)  ## Run algorithm res <- PhyloEM(phylo = tree,                Y_data = data,                process = \"scOU\",                   ## scalar OU model                random.root = TRUE,                 ## Root is stationary (true model)                stationary.root = TRUE,                alpha = alpha_grid,                 ## On a grid of alpha                K_max = 10,                         ## Maximal number of shifts                parallel_alpha = TRUE,              ## This can be set to TRUE for                Ncores = 2)                         ## parallel computations res ## Alpha 1 ##   |                                                                              |                                                                      |   0%  |                                                                              |======                                                                |   9%  |                                                                              |=============                                                         |  18%  |                                                                              |===================                                                   |  27%  |                                                                              |=========================                                             |  36%  |                                                                              |================================                                      |  45%  |                                                                              |======================================                                |  55%  |                                                                              |=============================================                         |  64%  |                                                                              |===================================================                   |  73%  |                                                                              |=========================================================             |  82%  |                                                                              |================================================================      |  91%  |                                                                              |======================================================================| 100% ## Alpha 3 ##   |                                                                              |                                                                      |   0%  |                                                                              |======                                                                |   9%  |                                                                              |=============                                                         |  18%  |                                                                              |===================                                                   |  27%  |                                                                              |=========================                                             |  36%  |                                                                              |================================                                      |  45%  |                                                                              |======================================                                |  55%  |                                                                              |=============================================                         |  64%  |                                                                              |===================================================                   |  73%  |                                                                              |=========================================================             |  82%  |                                                                              |================================================================      |  91%  |                                                                              |======================================================================| 100% ## Result of the PhyloEM algorithm. ## Selected parameters by the default method: ## 2 dimensional scOU process with a random stationary root. ##  ## Root expectations: ##           A           B  ## -0.03037692 -0.16473636  ##  ## Root variance: ##            A          B ## A 0.16133807 0.08997021 ## B 0.08997021 0.17555865 ##  ## Process variance: ##           A         B ## A 0.9680284 0.5398213 ## B 0.5398213 1.0533519 ##  ## Process selection strength: ##   A B ## A 3 0 ## B 0 3 ##  ## Process root optimal values: ##           A           B  ## -0.03037692 -0.16473636  ##  ## Shifts positions on branches: 124, 81, 16  ## Shifts values: ##         124        81       16 ## A  4.840772 -4.044706 5.156022 ## B -2.837178 -4.843109 4.268610 ##  ##  ##  ## See help to see all plotting and handling functions. plot(res) plot_criterion(res) plot(res, params = params_process(res, method.selection = \"DDSE\")) plot(res, params = params_process(res, K = 3, alpha = 1)) params_process(res, K = 3, alpha = 1)$shifts ## $edges ## [1] 124  81  16 ##  ## $values ##        [,1]      [,2]     [,3] ## A  8.112461 -6.319463 9.170695 ## B -4.904349 -7.624018 7.856664 ##  ## $relativeTimes ## [1] 0 0 0 params_process(res, K = 3, alpha = 3)$shifts ## $edges ## [1] 124  81  16 ##  ## $values ##        [,1]      [,2]     [,3] ## A  4.840772 -4.044706 5.156022 ## B -2.837178 -4.843109 4.268610 ##  ## $relativeTimes ## [1] 0 0 0"},{"path":"/articles/tutorial.html","id":"equivalent-solutions","dir":"Articles","previous_headings":"","what":"Equivalent Solutions","title":"An Introduction to the PhylogeneticEM Package","text":"many shifts, solution might identifiable. instance , take (degenerate) solution 66 shifts, get warning: can plot equivalent shifts allocations:  default shows shifts values first trait.","code":"params_6 <- params_process(res, K = 6) ## Warning in params_process.PhyloEM(res, K = 6): There are several equivalent ## solutions for this shift position. plot(equivalent_shifts(tree, params_6))"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Paul Bastide. Author, maintainer. Mahendra Mariadassou. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Paul Bastide, Mahendra Mariadassou & Stephane Robin (2017). Detection adaptive shifts phylogenies using shifted stochastic processes tree. Journal Royal Statistical Society: Series B (Statistical Methodology). 79(4):1067-1093 doi:10.1111/rssb.12206.","code":"@Article{,   title = {{Detection of adaptive shifts on phylogenies by using shifted stochastic processes on a tree}},   author = {Paul Bastide and Mahendra Mariadassou and Stephane Robin},   journal = {Journal of the Royal Statistical Society: Series B (Statistical Methodology)},   month = {sep},   year = {2017},   volume = {79},   number = {4},   issn = {1467-9868},   pages = {1067--1093},   doi = {10.1111/rssb.12206},   url = {https://doi.org/10.1111/rssb.12206}, }"},{"path":"/index.html","id":"phylogeneticem","dir":"","previous_headings":"","what":"Automatic Shift Detection using a Phylogenetic EM","title":"Automatic Shift Detection using a Phylogenetic EM","text":"Implementation EM algorithm detection shifts phylogeny.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Automatic Shift Detection using a Phylogenetic EM","text":"Stable version CRAN. get latest (possibly unstable) version, can use devtools package:","code":"install.packages(\"devtools\") devtools::install_github(repo = \"pbastide/PhylogeneticEM\", ref = \"develop\")"},{"path":"/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Automatic Shift Detection using a Phylogenetic EM","text":"See package documentation (references vignettes) : http://pbastide.github.io/PhylogeneticEM/ (Built pkgdown).","code":""},{"path":"/index.html","id":"references","dir":"","previous_headings":"","what":"References:","title":"Automatic Shift Detection using a Phylogenetic EM","text":"Bastide, P., Mariadassou, M. Robin, S. (2017), Detection adaptive shifts phylogenies using shifted stochastic processes tree. Journal Royal Statistical Society: Series B (Statistical Methodology), 79(4):1067-1093, doi:10.1111/rssb.12206. Bastide, P., AnÃ©, C., Robin, S. Mariadassou, M. (2018), Inference Adaptive Shifts Multivariate Correlated Traits. Systematic Biology, 67(4), 662â680. doi:10.1093/sysbio/syy005.","code":""},{"path":"/reference/PhyloEM.html","id":null,"dir":"Reference","previous_headings":"","what":"Model Estimation with Detection of Shifts â PhyloEM","title":"Model Estimation with Detection of Shifts â PhyloEM","text":"PhyloEM main function package. uses maximum likelihood methods fit BM OU process several traits evolving along phylogenetic tree, automatic shift detection branches tree. function can handle missing data.","code":""},{"path":"/reference/PhyloEM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model Estimation with Detection of Shifts â PhyloEM","text":"","code":"PhyloEM(   phylo,   Y_data,   process = c(\"BM\", \"OU\", \"scOU\", \"rBM\"),   check_postorder = TRUE,   independent = FALSE,   K_max = max(floor(sqrt(length(phylo$tip.label))), 10),   use_previous = FALSE,   order = TRUE,   method.selection = c(\"LINselect\", \"DDSE\", \"Djump\"),   C.BM1 = 0.1,   C.BM2 = 2.5,   C.LINselect = 1.1,   method.variance = c(\"upward_downward\", \"simple\"),   method.init = \"lasso\",   method.init.alpha = \"estimation\",   method.init.alpha.estimation = c(\"regression\", \"regression.MM\", \"median\"),   methods.segmentation = c(\"lasso\", \"best_single_move\"),   alpha_grid = TRUE,   nbr_alpha = 10,   random.root = TRUE,   stationary.root = random.root,   alpha = NULL,   check.tips.names = TRUE,   progress.bar = TRUE,   estimates = NULL,   save_step = FALSE,   rescale_OU = TRUE,   parallel_alpha = FALSE,   Ncores = 3,   K_lag_init = 5,   light_result = TRUE,   tol_tree = .Machine$double.eps^0.5,   allow_negative = FALSE,   option_is.ultrametric = 1,   trait_correlation_threshold = 0.9,   ... )"},{"path":"/reference/PhyloEM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model Estimation with Detection of Shifts â PhyloEM","text":"phylo phylogenetic tree class phylo (package ape). Y_data Matrix data tips, size p x ntaxa. line trait, column tip. column names checked tip names tree. process model used fit. One \"BM\" (full BM model, univariate multivariate); \"OU\" (OU independent traits, univariate multivariate); \"scOU\" (\"scalar OU\" model, see details). check_postorder Re-order tree post-order. Upward-Downward algorithm used, tree need post-order. Default TRUE upward-downward used, otherwise automatically set FALSE. independent trait assumed independent one another? Default FALSE. OU multivariate setting works TRUE. K_max maximum number shifts considered. Default \\(max(|\\sqrt ntaxa|, 10)\\). use_previous initialization K+1 shifts use estimation $K$ shifts already obtained? Default FALSE. order estimations done K increasing (TRUE) K decreasing (FALSE)? use_previous=FALSE, influence, except one initialization fails. Default TRUE. method.selection Method selection used. Several ones can used time. One \"LINselect\" Baraud Giraud Huet LINselect method; \"DDSE\" Slope Heuristic \"Djump\" Jump Heuristic, last two based BirgÃ© Massart method. C.BM1 Multiplying constant used BigeMassart1 method. Need positive. Default 0.1. C.BM2 Multiplying constant used BigeMassart2 method. Default 2.5. C.LINselect Multiplying constant used LINselect method. Need greater 1. Default 1.1. method.variance Algorithm used moments computations E step. One \"simple\" naive method; \"upward_downward\" Upward Downward method (usually faster). Default \"upward_downward\". method.init initialization method. One \"lasso\" LASSO base initialization method; \"default\" user-specified initialization values. Default \"lasso\". method.init.alpha OU model, initialization method selection strength alpha. One \"estimation\" cherry-based initialization, using nlrob; \"default\" user-specified initialization values. Default \"estimation\". method.init.alpha.estimation method.init.alpha=\"estimation\", choice estimation(s) methods used. Choices among \"regression\", (method=\"M\" passed nlrob); \"regression.MM\" (method=\"MM\" passed nlrob) \"median\" (nlrob used, simple median taken). Default . methods.segmentation OU, method(s) used M step find new candidate shifts positions. Choices among \"lasso\" LASSO-based algorithm; \"best_single_move\" one-move time based heuristic. Default . Using \"lasso\" might speed function lot. alpha_grid whether use grid alpha values. Default TRUE. available method scOU. method available OU multivariate traits. OU univariate traits can take TRUE FALSE. TRUE, grid based branch length tree automatically computed, using function find_grid_alpha. nbr_alpha alpha_grid=TRUE, number alpha values grid. Default 10. random.root whether root assumed random (TRUE) fixed (FALSE). Default TRUE stationary.root whether root assumed stationary state. Default TRUE. alpha estimation done fixed alpha (either known, grid), possible value alpha. Default NULL. check.tips.names whether check tips names tree column names data. Default TRUE. progress.bar whether display progress bar computations. Default TRUE. estimates result previous run function. function can re-run model election method. Default NULL. save_step alpha_grid=TRUE, whether save intermediate results value alpha (temporary file). Useful long computations. Default FALSE. rescale_OU Univariate OU, tree re-scaled use BM ? can speed computations lot. However, can make harder EM explore space parameters, hence lead sub-optimal solution. Default TRUE. parallel_alpha alpha_grid=TRUE, whether run estimations different values alpha separate cores. Default FALSE. TRUE, log written temporary file. Ncores parallel_alpha=TRUE, number cores used. K_lag_init Number extra shifts considered initialization step. Increases accuracy, can make computations quite slow taken high. Default 5. light_result TRUE (default), object returned made light, without easily computable quantities. FALSE, object can heavy, subsequent manipulations can faster (especially plotting). tol_tree tolerance consider branch length significantly greater zero, two lineages lengths different, checking ultrametry. (Default .Machine$double.eps^0.5). See .ultrametric di2multi. allow_negative whether allow negative values alpha (Early Burst). See details. Default FALSE. option_is.ultrametric option .ultrametric check. Default 1. trait_correlation_threshold trait correlation threshold stop analysis. Default 0.9. ... arguments passed estimateEM, including tolerance parameters stopping criteria, maximal number iterations, etc.","code":""},{"path":"/reference/PhyloEM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model Estimation with Detection of Shifts â PhyloEM","text":"object class PhyloEM. Relevant quantities can extracted using helper functions params_process.PhyloEM, imputed_traits.PhyloEM","code":""},{"path":"/reference/PhyloEM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Model Estimation with Detection of Shifts â PhyloEM","text":"Several models can used: BM fixed root, univariate multivariate. OU fixed stationary root, univariate multivariate. OU multivariate setting, two assumptions can made: Independent traits. amounts diagonal rate selection matrices. \"Scalar OU\" (scOU): rate matrix can full, selection strength matrix assumed scalar, .e. traits supposed go optimum values speed. Note \"scalar OU\" model can also seen re-scaling tree. selection strength parameter alpha can interpreted measure \"phylogenetic signal\": alpha close 0, process similar BM original tree, signal strong. alpha large, re-scaled tree similar star-tree, signal weak. shifts, root taken constant, model actually equivalent AC model (Uyeda et al. 2015). interpretation mind, one might want explore negative values alpha, order fit DC (Early Burst) model. shift fixed root, proof shows scOU alpha negative equivalent DC model. two strong caveats . interpretation OU modeling dynamic trait undergoing stabilizing selection lost. case, scOU can seen re-scaling tree, similar Pagel's delta. values \"optimal values\", shifts , interpreted (process actually going away values, instead attracted). looking values, one use un-normalized values happening underlying BM. can extract using params_process function rBM = TRUE.","code":""},{"path":[]},{"path":"/reference/PhyloEM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model Estimation with Detection of Shifts â PhyloEM","text":"","code":"if (FALSE) { # \\dontrun{ ## Load Data data(monkeys) ## Run method # Note: use more alpha values for better results. res <- PhyloEM(Y_data = monkeys$dat,        ## data                phylo = monkeys$phy,         ## phylogeny                process = \"scOU\",            ## scalar OU                random.root = TRUE,          ## root is stationary                stationary.root = TRUE,                K_max = 10,                  ## maximal number of shifts                nbr_alpha = 4,               ## number of alpha values                parallel_alpha = TRUE,       ## parallelize on alpha values                Ncores = 2) ## Plot selected solution (LINselect) plot(res) # three shifts ## Plot selected solution (DDSE) plot(res, method.selection = \"DDSE\") # no shift ## Extract and solution with 5 shifts params_5 <- params_process(res, K = 5) plot(res, params = params_5) ## Show all equivalent solutions eq_sol <- equivalent_shifts(monkeys$phy, params_5) plot(eq_sol) } # }"},{"path":"/reference/add_complementary.html","id":null,"dir":"Reference","previous_headings":"","what":"Add several entries, when only one is not NA. â add_complementary","title":"Add several entries, when only one is not NA. â add_complementary","text":"add_complementary return non NA value given vector.","code":""},{"path":"/reference/add_complementary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add several entries, when only one is not NA. â add_complementary","text":"","code":"add_complementary(z)"},{"path":"/reference/add_complementary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add several entries, when only one is not NA. â add_complementary","text":"z vector containing one non-NA value.","code":""},{"path":"/reference/add_complementary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add several entries, when only one is not NA. â add_complementary","text":"row vector size entry matrix.","code":""},{"path":"/reference/add_complementary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add several entries, when only one is not NA. â add_complementary","text":"function used function merge_complementary_vectors","code":""},{"path":"/reference/allocate_regimes_from_shifts.html","id":null,"dir":"Reference","previous_headings":"","what":"Allocation of regimes to nodes. â allocate_regimes_from_shifts","title":"Allocation of regimes to nodes. â allocate_regimes_from_shifts","text":"allocate_regimes_from_shifts allocate number (0 number shifts) node, corresponding regime : nodes shift numbered .","code":""},{"path":"/reference/allocate_regimes_from_shifts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Allocation of regimes to nodes. â allocate_regimes_from_shifts","text":"","code":"allocate_regimes_from_shifts(phylo, shifts_edges)"},{"path":"/reference/allocate_regimes_from_shifts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Allocation of regimes to nodes. â allocate_regimes_from_shifts","text":"phylo phylogenetic tree, class phylo. shifts_edges edges shifts .","code":""},{"path":"/reference/allocate_regimes_from_shifts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Allocation of regimes to nodes. â allocate_regimes_from_shifts","text":"Vector size (ntaxa + Nnode) regimes node tip.","code":""},{"path":"/reference/allocate_shifts_from_regimes.html","id":null,"dir":"Reference","previous_headings":"","what":"Allocation of shifts to edges â allocate_shifts_from_regimes","title":"Allocation of shifts to edges â allocate_shifts_from_regimes","text":"allocate_shifts_from_regimes returns position shifts induced allocation regimes. works \"infinite site\" model.","code":""},{"path":"/reference/allocate_shifts_from_regimes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Allocation of shifts to edges â allocate_shifts_from_regimes","text":"","code":"allocate_shifts_from_regimes(phylo, regimes)"},{"path":"/reference/allocate_shifts_from_regimes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Allocation of shifts to edges â allocate_shifts_from_regimes","text":"phylo phylogenetic tree, class phylo. regimes : vector size (ntaxa + Nnode) regimes node tip.","code":""},{"path":"/reference/allocate_shifts_from_regimes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Allocation of shifts to edges â allocate_shifts_from_regimes","text":"Vector edges numbers shifts .","code":""},{"path":"/reference/allocate_subset_node.simulate.html","id":null,"dir":"Reference","previous_headings":"","what":"Iteration allocation â allocate_subset_node.simulate","title":"Iteration allocation â allocate_subset_node.simulate","text":"allocate_subset_node.simulate slice data correctly allocate right part. used function UpdateDown.","code":""},{"path":"/reference/allocate_subset_node.simulate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Iteration allocation â allocate_subset_node.simulate","text":"","code":"allocate_subset_node.simulate(node, array, value)"},{"path":"/reference/allocate_subset_node.simulate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Iteration allocation â allocate_subset_node.simulate","text":"node node slice array structure sliced value value attributed slice","code":""},{"path":"/reference/allocate_subset_node.simulate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Iteration allocation â allocate_subset_node.simulate","text":"array: array p x Nnode x 2 (BM), slice corresponding node filled value","code":""},{"path":"/reference/check.selection.strength.html","id":null,"dir":"Reference","previous_headings":"","what":"Check selection strength â check.selection.strength","title":"Check selection strength â check.selection.strength","text":"check.selection.strength checks, process OU, selection strength low, case process replaced BM.","code":""},{"path":"/reference/check.selection.strength.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check selection strength â check.selection.strength","text":"","code":"check.selection.strength(process, selection.strength = NA, eps = 10^(-6), ...)"},{"path":"/reference/check.selection.strength.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check selection strength â check.selection.strength","text":"process : \"BM\" \"OU\" selection.strength selection strength parameter (OU) eps tolerance selection strength","code":""},{"path":"/reference/check.selection.strength.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check selection strength â check.selection.strength","text":"character : \"BM\" \"OU\"","code":""},{"path":"/reference/check.selection.strength.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check selection strength â check.selection.strength","text":"function return process form character. entry process \"BM\", nothing done. \"OU\", verification selection strength done.","code":""},{"path":"/reference/check_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Test the format of data entry. â check_data","title":"Test the format of data entry. â check_data","text":"check_data tests data matrix right format, correctly ordered match tips names.","code":""},{"path":"/reference/check_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test the format of data entry. â check_data","text":"","code":"check_data(phylo, Y_data, check.tips.names)"},{"path":"/reference/check_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test the format of data entry. â check_data","text":"phylo phylogenetic tree, class phylo. Y_data matrix data tips (pxntaxa) check.tips.names (bool) whether check tips names ","code":""},{"path":"/reference/check_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test the format of data entry. â check_data","text":"Y_data re-ordered matrix data (necessary)","code":""},{"path":"/reference/check_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Check dimensions of the parameters â check_dimensions","title":"Check dimensions of the parameters â check_dimensions","text":"check_dimensions checks dimensions parameters. wrong, throw error.","code":""},{"path":"/reference/check_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check dimensions of the parameters â check_dimensions","text":"","code":"check_dimensions(   p,   root.state,   shifts,   variance,   selection.strength = NULL,   optimal.value = NULL )"},{"path":"/reference/check_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check dimensions of the parameters â check_dimensions","text":"p dimension trait simulated root.state (list) state root, : random : random state (TRUE) deterministic state (FALSE) value.root : deterministic, value character root exp.root : random, expectation character root var.root : random, variance character root shifts (list) position values shifts : edges : vector K id edges shifts values : matrix p x K values shifts edges (one column = one shift) relativeTimes : vector dimension K relative time shift parent node edges variance variance-covariance matrix size p x p selection.strength matrix selection strength size p x p (OU) optimal.value vector p optimal values root (OU)","code":""},{"path":"/reference/check_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check dimensions of the parameters â check_dimensions","text":"Nothing","code":""},{"path":"/reference/check_parsimony.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Parsimony, assuming no homoplasy â check_parsimony","title":"Check Parsimony, assuming no homoplasy â check_parsimony","text":"check_parsimony take vector shifts edges, check whether number groups tips induced allocation exactly number shifts plus one. equivalent parsimony homoplasy (.e. convergent regimes).","code":""},{"path":"/reference/check_parsimony.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Parsimony, assuming no homoplasy â check_parsimony","text":"","code":"check_parsimony(tree, edges, ...)"},{"path":"/reference/check_parsimony.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Parsimony, assuming no homoplasy â check_parsimony","text":"tree phylogenetic tree edges vector edges tree, shifts ... possibly, list giving descendant tips edge","code":""},{"path":"/reference/check_parsimony.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Parsimony, assuming no homoplasy â check_parsimony","text":"boolean : TRUE allocation parsimonious.","code":""},{"path":"/reference/check_parsimony.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check Parsimony, assuming no homoplasy â check_parsimony","text":"function computes explicitly clustering tips, using function clusters_from_shifts. default, function uses enumerate_tips_under_edges compute list tips edge, list can provided (avoid extra computation, many tests tree done).","code":""},{"path":"/reference/check_parsimony_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether an allocation of the shifts is parsimonious, in the ","title":"Check whether an allocation of the shifts is parsimonious, in the ","text":"check_parsimony_clusters takes vector clusters tips, checks whether number groups tips induced allocation exactly number shifts plus one.","code":""},{"path":"/reference/check_parsimony_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether an allocation of the shifts is parsimonious, in the ","text":"","code":"check_parsimony_clusters(tree, edges, clusters)"},{"path":"/reference/check_parsimony_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether an allocation of the shifts is parsimonious, in the ","text":"tree phylogenetic tree. clusters vector clusters tips tree (result function clusters_from_shifts).","code":""},{"path":"/reference/check_parsimony_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether an allocation of the shifts is parsimonious, in the ","text":"boolean : TRUE allocation parsimonious.","code":""},{"path":"/reference/check_parsimony_clusters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check whether an allocation of the shifts is parsimonious, in the ","text":"function computes explicitly clustering tips, using function check_parsimony. default, function uses enumerate_tips_under_edges compute list tips edge, list can provided (many tests done).","code":""},{"path":"/reference/check_range_alpha.html","id":null,"dir":"Reference","previous_headings":"","what":"Check range of alpha â check_range_alpha","title":"Check range of alpha â check_range_alpha","text":"Check chosen values alpha large small, order avoid numerical instabilities.","code":""},{"path":"/reference/check_range_alpha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check range of alpha â check_range_alpha","text":"","code":"check_range_alpha(alpha, h_tree)"},{"path":"/reference/check_range_alpha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check range of alpha â check_range_alpha","text":"alpha vector alpha values. h_tree total height tree.","code":""},{"path":"/reference/clusters_from_shifts.html","id":null,"dir":"Reference","previous_headings":"","what":"Clustering associated to a shift allocation, assuming no homoplasy. â clusters_from_shifts","title":"Clustering associated to a shift allocation, assuming no homoplasy. â clusters_from_shifts","text":"clusters_from_shifts take vector shifts edges, gives clustering tips induced , \"homoplasy\" model (.e. convergence allowed).","code":""},{"path":"/reference/clusters_from_shifts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clustering associated to a shift allocation, assuming no homoplasy. â clusters_from_shifts","text":"","code":"clusters_from_shifts(tree, edges, part.list = enumerate_tips_under_edges(tree))"},{"path":"/reference/clusters_from_shifts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clustering associated to a shift allocation, assuming no homoplasy. â clusters_from_shifts","text":"tree phylogenetic tree edges vector edges tree, shifts part.list list giving descendant tips edge","code":""},{"path":"/reference/clusters_from_shifts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clustering associated to a shift allocation, assuming no homoplasy. â clusters_from_shifts","text":"list size n+m-1, entry vector tips bellow edge .","code":""},{"path":"/reference/clusters_from_shifts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Clustering associated to a shift allocation, assuming no homoplasy. â clusters_from_shifts","text":"default, function uses enumerate_tips_under_edges compute list tips edge.","code":""},{"path":"/reference/compute_E.simple.html","id":null,"dir":"Reference","previous_headings":"","what":"E step â compute_E.simple","title":"E step â compute_E.simple","text":"compute_E.simple computes E step simple case invert matrix Sigma_YY_inv given","code":""},{"path":"/reference/compute_E.simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"E step â compute_E.simple","text":"","code":"compute_E.simple(   phylo,   times_shared,   distances_phylo,   process,   params_old,   masque_data = c(rep(TRUE, attr(params_old, \"p_dim\") * length(phylo$tip.label)),     rep(FALSE, attr(params_old, \"p_dim\") * phylo$Nnode)),   F_moments,   Y_data_vec_known,   miss = rep(FALSE, attr(params_old, \"p_dim\") * length(phylo$tip.label)),   Y_data,   U_tree,   ... )"},{"path":"/reference/compute_E.simple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"E step â compute_E.simple","text":"phylo Input tree.","code":""},{"path":"/reference/compute_E.simple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"E step â compute_E.simple","text":"conditional_law_X (list) : list conditional statistics :                   \"expectation\" : matrix size p x (ntaxa+Nnode), ntaxa first columns set Y_data (tips), ntaxa+1 conditional expectation nodes conditioned tips E[Z_j|Y]                   \"variances\" : array size p x p x (ntaxa+Nnode) ntaxa first matrices zeros (tips) conditional variance nodes conditioned tips Var[Z_j|Y]                  \"covariances\" : array size p x p x (ntaxa+Nnode) ntaxa first matrices zeros (tips) conditional covariance nodes parents conditioned tips Cov[Z_j,Z_pa(j)|Y], NA root.                   \"optimal.values\" : matrix size p x ntaxa+Nnode optimal values beta(t_j)","code":""},{"path":"/reference/compute_E.simple.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"E step â compute_E.simple","text":"function takes parameters sim, Sigma Sigma_YY_inv compute_mean_variance.simple. uses functions extract_variance_covariance, extract_covariance_parents,  extract_simulate_internal extract needed quantities objects.","code":""},{"path":"/reference/compute_actualization_matrix_ultrametric.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Matrix W of actualization (Ultrametric case) â compute_actualization_matrix_ultrametric","title":"Compute Matrix W of actualization (Ultrametric case) â compute_actualization_matrix_ultrametric","text":"compute_actualization_matrix_ultrametric computes squares  p*Nedge bloc diagonal matrix (I_p - exp(-* (h - t_pa(j))))_{j node}.","code":""},{"path":"/reference/compute_actualization_matrix_ultrametric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Matrix W of actualization (Ultrametric case) â compute_actualization_matrix_ultrametric","text":"","code":"compute_actualization_matrix_ultrametric(   tree,   selection.strength,   times_shared = compute_times_ca(tree) )"},{"path":"/reference/compute_actualization_matrix_ultrametric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Matrix W of actualization (Ultrametric case) â compute_actualization_matrix_ultrametric","text":"tree phylogenetic tree. selection.strength selection strength process. times_shared matrix, result function compute_times_ca.","code":""},{"path":"/reference/compute_actualization_matrix_ultrametric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Matrix W of actualization (Ultrametric case) â compute_actualization_matrix_ultrametric","text":"Matrix size p*Nedge","code":""},{"path":"/reference/compute_actualization_matrix_ultrametric.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Matrix W of actualization (Ultrametric case) â compute_actualization_matrix_ultrametric","text":"Careful: root taken account function.","code":""},{"path":"/reference/compute_betas_from_shifts.html","id":null,"dir":"Reference","previous_headings":"","what":"Computation of the optimal values at nodes and tips. â compute_betas_from_shifts","title":"Computation of the optimal values at nodes and tips. â compute_betas_from_shifts","text":"compute_betas_from_shifts computes optimal values nodes tips tree, given value root list shifts occurring tree. assumes OU model.","code":""},{"path":"/reference/compute_betas_from_shifts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computation of the optimal values at nodes and tips. â compute_betas_from_shifts","text":"","code":"compute_betas_from_shifts(phylo, optimal.value, shifts)"},{"path":"/reference/compute_betas_from_shifts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computation of the optimal values at nodes and tips. â compute_betas_from_shifts","text":"phylo phylogenetic tree, class phylo. optimal.value optimal value root tree. shifts position values shifts .","code":""},{"path":"/reference/compute_betas_from_shifts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computation of the optimal values at nodes and tips. â compute_betas_from_shifts","text":"Vector size (ntaxa + Nnode) optimal values tips tree.","code":""},{"path":"/reference/compute_betas_from_shifts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Computation of the optimal values at nodes and tips. â compute_betas_from_shifts","text":"Note intended internal function, used. general, use node_optimal_values get optimal values set parameters.","code":""},{"path":"/reference/compute_diff_exp.BM.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute differences of expectations between node and parent. â compute_diff_exp.BM","title":"Compute differences of expectations between node and parent. â compute_diff_exp.BM","text":"compute_diff_exp compute differences conditional expectations nodes parents.","code":""},{"path":"/reference/compute_diff_exp.BM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute differences of expectations between node and parent. â compute_diff_exp.BM","text":"","code":"compute_diff_exp.BM(phylo, conditional_law_X)"},{"path":"/reference/compute_diff_exp.BM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute differences of expectations between node and parent. â compute_diff_exp.BM","text":"phylo phylogenetic tree conditional_law_X result function compute_E","code":""},{"path":"/reference/compute_diff_exp.BM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute differences of expectations between node and parent. â compute_diff_exp.BM","text":"matrix p x Nedge containing, edge e finishing node , quantity E[Z_i|Y]-E[Z_pa()|Y].","code":""},{"path":"/reference/compute_dist_phy.html","id":null,"dir":"Reference","previous_headings":"","what":"Phylogenetic Distances â compute_dist_phy","title":"Phylogenetic Distances â compute_dist_phy","text":"compute_dist_phy computes phylogenetic distances d_ij tips , j.","code":""},{"path":"/reference/compute_dist_phy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Phylogenetic Distances â compute_dist_phy","text":"","code":"compute_dist_phy(phy)"},{"path":"/reference/compute_dist_phy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Phylogenetic Distances â compute_dist_phy","text":"phy phylogenetic tree class phylo.","code":""},{"path":"/reference/compute_dist_phy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Phylogenetic Distances â compute_dist_phy","text":"matrix phylogenetic distances, ordered tips tree. matrix type symmetricMatrix-class.","code":""},{"path":"/reference/compute_dist_phy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Phylogenetic Distances â compute_dist_phy","text":"function relies ape function dist.nodes.","code":""},{"path":"/reference/compute_expectations.BM.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the expected states of a BM â compute_expectations.BM","title":"Compute the expected states of a BM â compute_expectations.BM","text":"compute_expectations.BM use matrix formulation compute expected values nodes.","code":""},{"path":"/reference/compute_expectations.BM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the expected states of a BM â compute_expectations.BM","text":"","code":"compute_expectations.BM(phylo, root.state, shifts, U_tree = NULL)"},{"path":"/reference/compute_expectations.BM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the expected states of a BM â compute_expectations.BM","text":"phylo Input tree. root.state (list): state root, : random : random state (TRUE) deterministic state (FALSE) value.root : deterministic, value character root exp.root : random, expectation character root var.root : random, variance character root (pxp matrix) shifts (list) position values shifts : edges : vector K id edges shifts values : matrix p x K values shifts edges (one column = one shift) relativeTimes : vector dimension K relative time shift parent node edges","code":""},{"path":"/reference/compute_expectations.BM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the expected states of a BM â compute_expectations.BM","text":"paramSimu: array p x Nnode x 2 (BM). trait t, 1 <= t <= p,  paramSimu[t, , ] two columns, containing expected values  nodes.","code":""},{"path":"/reference/compute_expectations.scOU.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the expected states of a scOU â compute_expectations.scOU","title":"Compute the expected states of a scOU â compute_expectations.scOU","text":"compute_expectations.scOU use matrix formulation compute expected values nodes. Assumes stationary root.","code":""},{"path":"/reference/compute_expectations.scOU.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the expected states of a scOU â compute_expectations.scOU","text":"","code":"compute_expectations.scOU(   phylo,   root.state,   shifts,   alpha,   U_tree = NULL,   times_shared = NULL )"},{"path":"/reference/compute_expectations.scOU.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the expected states of a scOU â compute_expectations.scOU","text":"phylo Input tree. root.state (list): state root, : random : random state (TRUE) deterministic state (FALSE) value.root : deterministic, value character root exp.root : random, expectation character root var.root : random, variance character root (pxp matrix) shifts (list) position values shifts : edges : vector K id edges shifts values : matrix p x K values shifts edges (one column = one shift) relativeTimes : vector dimension K relative time shift parent node edges","code":""},{"path":"/reference/compute_expectations.scOU.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the expected states of a scOU â compute_expectations.scOU","text":"paramSimu: array p x Nnode x 2 (BM). trait t, 1 <= t <= p,  paramSimu[t, , ] two columns, containing expected values  nodes.","code":""},{"path":"/reference/compute_fixed_moments.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute fixed moments for E step. â compute_fixed_moments","title":"Compute fixed moments for E step. â compute_fixed_moments","text":"compute_fixed_moments compute fixed matrices used E step missing data.","code":""},{"path":"/reference/compute_fixed_moments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute fixed moments for E step. â compute_fixed_moments","text":"","code":"compute_fixed_moments(times_shared, ntaxa)"},{"path":"/reference/compute_fixed_moments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute fixed moments for E step. â compute_fixed_moments","text":"times_shared matrix tree, result function compute_times_ca","code":""},{"path":"/reference/compute_fixed_moments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute fixed moments for E step. â compute_fixed_moments","text":"F_means matrix use actualization means. F_vars matrix use actualization variances.","code":""},{"path":"/reference/compute_gauss_lasso.html","id":null,"dir":"Reference","previous_headings":"","what":"Do a lm on top of a lasso regression. â compute_gauss_lasso","title":"Do a lm on top of a lasso regression. â compute_gauss_lasso","text":"compute_gauss_lasso takes variables selected lasso procedure, uses simple linear least square regression. Function used lm non-transformed data (root = NULL), lm.fit transformed data (root = integer).","code":""},{"path":"/reference/compute_gauss_lasso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Do a lm on top of a lasso regression. â compute_gauss_lasso","text":"","code":"compute_gauss_lasso(   Ypt,   Xp,   delta,   root,   projection = which(rowSums(delta) != 0) )"},{"path":"/reference/compute_gauss_lasso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Do a lm on top of a lasso regression. â compute_gauss_lasso","text":"Ypt (transformed) data Xp (transformed) matrix regression delta regression coefficients obtained lasso regression root position root (intercept) delta","code":""},{"path":"/reference/compute_gauss_lasso.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Do a lm on top of a lasso regression. â compute_gauss_lasso","text":"Named list, \"E0.gauss\" intercept (value root); \"shifts.gauss\" list shifts found branches; \"residuals\" residuals regression","code":""},{"path":"/reference/compute_gauss_lasso.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Do a lm on top of a lasso regression. â compute_gauss_lasso","text":"Depending value root, behavior different. root null, fit linear regression intercept. root equal integer, \"intercept\" column matrix Xp (possibly trough multiplication Cholesky decomposition variance) included, rather intercept.","code":""},{"path":"/reference/compute_log_likelihood.simple.html","id":null,"dir":"Reference","previous_headings":"","what":"Log Likelihood â compute_log_likelihood.simple","title":"Log Likelihood â compute_log_likelihood.simple","text":"compute_log_likelihood.simple computes log-likelihood data simple case inverse variance matrix given.","code":""},{"path":"/reference/compute_log_likelihood.simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log Likelihood â compute_log_likelihood.simple","text":"","code":"compute_log_likelihood.simple(   phylo,   Y_data_vec,   sim,   Sigma,   Sigma_YY_chol_inv,   miss = rep(FALSE, dim(sim)[1] * length(phylo$tip.label)),   masque_data = c(rep(TRUE, dim(sim)[1] * length(phylo$tip.label)), rep(FALSE,     dim(sim)[1] * phylo$Nnode)),   ... )"},{"path":"/reference/compute_log_likelihood.simple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log Likelihood â compute_log_likelihood.simple","text":"phylo Input tree. Sigma : variance-covariance matrix, result function compute_variance_covariance","code":""},{"path":"/reference/compute_log_likelihood.simple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log Likelihood â compute_log_likelihood.simple","text":"log likelihood data","code":""},{"path":"/reference/compute_log_likelihood.simple.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log Likelihood â compute_log_likelihood.simple","text":"function takes parameters sim, Sigma Sigma_YY_inv compute_mean_variance.simple. uses functions extract_variance_covariance, extract_covariance_parents,  extract_simulate_internal extract needed quantities objects.","code":""},{"path":"/reference/compute_mahalanobis_distance.simple.html","id":null,"dir":"Reference","previous_headings":"","what":"Squared Mahalanobis Distance â compute_mahalanobis_distance.simple","title":"Squared Mahalanobis Distance â compute_mahalanobis_distance.simple","text":"compute_mahalanobis_distance.simple computes squared Mahalanobis distance data mean tips  data simple case inverse variance matrix given.","code":""},{"path":"/reference/compute_mahalanobis_distance.simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Squared Mahalanobis Distance â compute_mahalanobis_distance.simple","text":"","code":"compute_mahalanobis_distance.simple(   phylo,   Y_data_vec,   sim,   Sigma_YY_chol_inv,   miss = rep(FALSE, dim(sim)[1] * length(phylo$tip.label)),   ... )"},{"path":"/reference/compute_mahalanobis_distance.simple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Squared Mahalanobis Distance â compute_mahalanobis_distance.simple","text":"phylo Input tree. Y_data_vec : vector indicating data tips. sim (list) : result function simulate. Sigma_YY_chol_inv : invert cholesky variance-covariance matrix data.","code":""},{"path":"/reference/compute_mahalanobis_distance.simple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Squared Mahalanobis Distance â compute_mahalanobis_distance.simple","text":"squared Mahalanobis distance data mean tips.","code":""},{"path":"/reference/compute_mahalanobis_distance.simple.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Squared Mahalanobis Distance â compute_mahalanobis_distance.simple","text":"function takes parameters sim Sigma_YY_inv compute_mean_variance.simple. uses function extract_simulate_internal extract needed quantities objects.","code":""},{"path":"/reference/compute_mean_variance.simple.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute moments of params_old â compute_mean_variance.simple","title":"Compute moments of params_old â compute_mean_variance.simple","text":"compute_mean_variance.simple computes quantities needed compute mean variance matrix parameters params_old.","code":""},{"path":"/reference/compute_mean_variance.simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute moments of params_old â compute_mean_variance.simple","text":"","code":"compute_mean_variance.simple(   phylo,   times_shared,   distances_phylo,   process = c(\"BM\", \"OU\", \"rBM\", \"scOU\"),   params_old,   masque_data = c(rep(TRUE, attr(params_old, \"p_dim\") * length(phylo$tip.label)),     rep(FALSE, attr(params_old, \"p_dim\") * phylo$Nnode)),   sim = NULL,   U_tree = NULL,   ... )"},{"path":"/reference/compute_mean_variance.simple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute moments of params_old â compute_mean_variance.simple","text":"phylo Input tree. times_shared (matrix) : times shared ancestry, result function compute_times_ca distances_phylo (matrix) : phylogenetic distance, result function compute_dist_phy process two letter string indicating process consider params_old list parameters used computations","code":""},{"path":"/reference/compute_mean_variance.simple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute moments of params_old â compute_mean_variance.simple","text":"sim (list) : result function simulate appropriate  parameters Sigma matrix variance covariance, result function compute_variance_covariance Sigma_YY_chol_inv invert Cholesky matrix Sigma_YY:  (Sigma_YY)^(-1) = tcrossprod(Sigma_YY_chol_inv)","code":""},{"path":"/reference/compute_mean_variance.simple.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute moments of params_old â compute_mean_variance.simple","text":"function used functions compute_E.simple compute_log_likelihood.simple.","code":""},{"path":"/reference/compute_residuals.simple.html","id":null,"dir":"Reference","previous_headings":"","what":"Residuals â compute_residuals.simple","title":"Residuals â compute_residuals.simple","text":"compute_residuals.simple computes residuals fit data simple case inverse variance matrix given.","code":""},{"path":"/reference/compute_residuals.simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Residuals â compute_residuals.simple","text":"","code":"compute_residuals.simple(phylo, Y_data_vec, sim, Sigma_YY_chol_inv, miss)"},{"path":"/reference/compute_residuals.simple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Residuals â compute_residuals.simple","text":"phylo Input tree. Y_data_vec : vector indicating data tips. sim (list) : result function simulate. Sigma_YY_chol_inv : invert Cholesky variance-covariance matrix data.","code":""},{"path":"/reference/compute_residuals.simple.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Residuals â compute_residuals.simple","text":"function takes parameters sim Sigma_YY_inv compute_mean_variance.simple. uses function extract_simulate_internal extract needed quantities objects.","code":""},{"path":"/reference/compute_shifts_from_betas.html","id":null,"dir":"Reference","previous_headings":"","what":"Computation of shifts from the vector of optimal values â compute_shifts_from_betas","title":"Computation of shifts from the vector of optimal values â compute_shifts_from_betas","text":"compute_shifts_from_betas computes list shifts corresponding vector optimal values nodes.","code":""},{"path":"/reference/compute_shifts_from_betas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computation of shifts from the vector of optimal values â compute_shifts_from_betas","text":"","code":"compute_shifts_from_betas(phylo, betas)"},{"path":"/reference/compute_shifts_from_betas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computation of shifts from the vector of optimal values â compute_shifts_from_betas","text":"phylo phylogenetic tree, class phylo. betas vector size (ntaxa + Nnode) optimal values node tip.","code":""},{"path":"/reference/compute_shifts_from_betas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computation of shifts from the vector of optimal values â compute_shifts_from_betas","text":"vector shifts.","code":""},{"path":"/reference/compute_shifts_from_betas.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Computation of shifts from the vector of optimal values â compute_shifts_from_betas","text":"function uses function fun row matrix edges.","code":""},{"path":"/reference/compute_state_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"List of potential daughter states when parent is in state k. â compute_state_filter","title":"List of potential daughter states when parent is in state k. â compute_state_filter","text":"compute_state_filter compute admissible daughters states, .e. states realize minimum cost tree parent -> daughter -> subtree(daughter), parent node state k.","code":""},{"path":"/reference/compute_state_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of potential daughter states when parent is in state k. â compute_state_filter","text":"","code":"compute_state_filter(cost, k)"},{"path":"/reference/compute_state_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List of potential daughter states when parent is in state k. â compute_state_filter","text":"cost (ndaughters) x (nclus) matrix cost state daughters nodes. k parental state considered.","code":""},{"path":"/reference/compute_state_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List of potential daughter states when parent is in state k. â compute_state_filter","text":"(ndaughters) x (nclus) binary matrix indicating admissible states daughters node parent node state k.","code":""},{"path":"/reference/compute_state_filter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List of potential daughter states when parent is in state k. â compute_state_filter","text":"function used functions parsimonyNumber enumerate_parsimony.","code":""},{"path":"/reference/compute_stationary_variance.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the stationary variance matrix â compute_stationary_variance","title":"Compute the stationary variance matrix â compute_stationary_variance","text":"compute_stationary_variance computes stationary variance matrix OU process.","code":""},{"path":"/reference/compute_stationary_variance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the stationary variance matrix â compute_stationary_variance","text":"","code":"compute_stationary_variance(variance, selection.strength)"},{"path":"/reference/compute_stationary_variance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the stationary variance matrix â compute_stationary_variance","text":"variance variance (rate matrix) process. selection.strength selection strength (alpha) matrix process.","code":""},{"path":"/reference/compute_stationary_variance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the stationary variance matrix â compute_stationary_variance","text":"positive definite Matrix class dpoMatrix-class.","code":""},{"path":"/reference/compute_sum_var_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute weighted sum of var_diff â compute_sum_var_diff","title":"Compute weighted sum of var_diff â compute_sum_var_diff","text":"compute_sum_var_diff computes sum_{e edge} ell_j * Var[X_j - X_pa(j) | Y]","code":""},{"path":"/reference/compute_sum_var_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute weighted sum of var_diff â compute_sum_var_diff","text":"","code":"compute_sum_var_diff(phylo, var_diff)"},{"path":"/reference/compute_sum_var_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute weighted sum of var_diff â compute_sum_var_diff","text":"phylo phylogenetic tree var_diff result function compute_var_diff.BM","code":""},{"path":"/reference/compute_sum_var_diff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute weighted sum of var_diff â compute_sum_var_diff","text":"matrix p x p","code":""},{"path":"/reference/compute_times_ca.html","id":null,"dir":"Reference","previous_headings":"","what":"Common Ancestors Times â compute_times_ca","title":"Common Ancestors Times â compute_times_ca","text":"compute_times_ca computes times t_ij root common ancestor two tips , j.","code":""},{"path":"/reference/compute_times_ca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Common Ancestors Times â compute_times_ca","text":"","code":"compute_times_ca(phy)"},{"path":"/reference/compute_times_ca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Common Ancestors Times â compute_times_ca","text":"phy phylogenetic tree class phylo.","code":""},{"path":"/reference/compute_times_ca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Common Ancestors Times â compute_times_ca","text":"matrix times shared evolution, ordered tips tree. matrix type symmetricMatrix-class.","code":""},{"path":"/reference/compute_times_ca.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Common Ancestors Times â compute_times_ca","text":"function relies ape functions node.depth.edgelength mrca.","code":""},{"path":"/reference/compute_tree_correlations_matrix.BM.html","id":null,"dir":"Reference","previous_headings":"","what":"Matrix of tree-induced correlations for the BM â compute_tree_correlations_matrix.BM","title":"Matrix of tree-induced correlations for the BM â compute_tree_correlations_matrix.BM","text":"compute_tree_correlations_matrix.BM returns times_shared provided argument.","code":""},{"path":"/reference/compute_tree_correlations_matrix.BM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Matrix of tree-induced correlations for the BM â compute_tree_correlations_matrix.BM","text":"","code":"compute_tree_correlations_matrix.BM(times_shared, params_old, ...)"},{"path":"/reference/compute_tree_correlations_matrix.BM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Matrix of tree-induced correlations for the BM â compute_tree_correlations_matrix.BM","text":"times_shared times shared ancestry nodes tips, result function compute_times_ca","code":""},{"path":"/reference/compute_tree_correlations_matrix.BM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Matrix of tree-induced correlations for the BM â compute_tree_correlations_matrix.BM","text":"times_shared","code":""},{"path":"/reference/compute_tree_correlations_matrix.scOU.html","id":null,"dir":"Reference","previous_headings":"","what":"Matrix of tree-induced correlations for the scOU â compute_tree_correlations_matrix.scOU","title":"Matrix of tree-induced correlations for the scOU â compute_tree_correlations_matrix.scOU","text":"compute_tree_correlations_matrix.scOU computes (n+m)x(m+n) matrix correlations induced tree. takes two cases consideration: root fixed, root stationary state.","code":""},{"path":"/reference/compute_tree_correlations_matrix.scOU.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Matrix of tree-induced correlations for the scOU â compute_tree_correlations_matrix.scOU","text":"","code":"compute_tree_correlations_matrix.scOU(   times_shared,   distances_phylo,   params_old,   ... )"},{"path":"/reference/compute_tree_correlations_matrix.scOU.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Matrix of tree-induced correlations for the scOU â compute_tree_correlations_matrix.scOU","text":"times_shared times shared ancestry nodes tips, result function compute_times_ca distances_phylo (matrix) : phylogenetic distance, result function compute_dist_phy params_old (list) : old parameters used E step","code":""},{"path":"/reference/compute_tree_correlations_matrix.scOU.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Matrix of tree-induced correlations for the scOU â compute_tree_correlations_matrix.scOU","text":"matrix variance covariance scOU","code":""},{"path":"/reference/compute_var_M.BM.html","id":null,"dir":"Reference","previous_headings":"","what":"Computation of the variance. â compute_var_M.BM","title":"Computation of the variance. â compute_var_M.BM","text":"compute_var_M.BM finds variance maximum likelihood","code":""},{"path":"/reference/compute_var_M.BM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computation of the variance. â compute_var_M.BM","text":"","code":"compute_var_M.BM(phylo, var_diff, diff_exp, edges_max, random.root, mu)"},{"path":"/reference/compute_var_M.BM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computation of the variance. â compute_var_M.BM","text":"phylo Tree var_diff variances differences result function compute_var_diff.BM diff_exp differences expectations result function compute_diff_exp.BM edges_max Edges shifts occur result function segmentation.BM","code":""},{"path":"/reference/compute_var_M.BM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computation of the variance. â compute_var_M.BM","text":"p x p matrix : computed variance","code":""},{"path":"/reference/compute_var_M.BM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Computation of the variance. â compute_var_M.BM","text":"Given variances, costs0 edges shifts occurs, computation maximum likelihood variance simple.","code":""},{"path":"/reference/compute_var_diff.BM.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute variances of differences between nodes and parents. â compute_var_diff.BM","title":"Compute variances of differences between nodes and parents. â compute_var_diff.BM","text":"compute_var_diff computes variances differences nodes parents.","code":""},{"path":"/reference/compute_var_diff.BM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute variances of differences between nodes and parents. â compute_var_diff.BM","text":"","code":"compute_var_diff.BM(phylo, conditional_law_X)"},{"path":"/reference/compute_var_diff.BM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute variances of differences between nodes and parents. â compute_var_diff.BM","text":"phylo phylogenetic tree conditional_law_X result function compute_E","code":""},{"path":"/reference/compute_var_diff.BM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute variances of differences between nodes and parents. â compute_var_diff.BM","text":"array p x p x Nedge containing, edge e finishing node , quantity Var[Z_i-Z_pa()|Y].","code":""},{"path":"/reference/compute_variance_block_diagonal.BM.html","id":null,"dir":"Reference","previous_headings":"","what":"Tips Variances for the BM â compute_variance_block_diagonal.BM","title":"Tips Variances for the BM â compute_variance_block_diagonal.BM","text":"compute_variance_block_diagonal.BM computes n p*p variance matrices tip vector.","code":""},{"path":"/reference/compute_variance_block_diagonal.BM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tips Variances for the BM â compute_variance_block_diagonal.BM","text":"","code":"compute_variance_block_diagonal.BM(times_shared, params_old, ntaxa, ...)"},{"path":"/reference/compute_variance_block_diagonal.BM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tips Variances for the BM â compute_variance_block_diagonal.BM","text":"times_shared times shared ancestry nodes tips, result function compute_times_ca params_old (list) : old parameters used E step","code":""},{"path":"/reference/compute_variance_block_diagonal.BM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tips Variances for the BM â compute_variance_block_diagonal.BM","text":"p * p * ntaxa array ntaxa variance matrices","code":""},{"path":"/reference/compute_variance_block_diagonal.OU.html","id":null,"dir":"Reference","previous_headings":"","what":"Tips Variances for the OU â compute_variance_block_diagonal.OU","title":"Tips Variances for the OU â compute_variance_block_diagonal.OU","text":"compute_variance_block_diagonal.OU computes n p*p variance matrices tip vector.","code":""},{"path":"/reference/compute_variance_block_diagonal.OU.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tips Variances for the OU â compute_variance_block_diagonal.OU","text":"","code":"compute_variance_block_diagonal.OU(times_shared, params_old, ntaxa, ...)"},{"path":"/reference/compute_variance_block_diagonal.OU.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tips Variances for the OU â compute_variance_block_diagonal.OU","text":"times_shared times shared ancestry nodes tips, result function compute_times_ca params_old (list) : old parameters used E step","code":""},{"path":"/reference/compute_variance_block_diagonal.OU.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tips Variances for the OU â compute_variance_block_diagonal.OU","text":"p * p * ntaxa array ntaxa variance matrices","code":""},{"path":"/reference/compute_variance_covariance.BM.html","id":null,"dir":"Reference","previous_headings":"","what":"Complete variance covariance matrix for BM â compute_variance_covariance.BM","title":"Complete variance covariance matrix for BM â compute_variance_covariance.BM","text":"compute_variance_covariance.BM computes (n+m)*p squared variance covariance matrix vec(X).","code":""},{"path":"/reference/compute_variance_covariance.BM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complete variance covariance matrix for BM â compute_variance_covariance.BM","text":"","code":"compute_variance_covariance.BM(times_shared, params_old, ...)"},{"path":"/reference/compute_variance_covariance.BM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Complete variance covariance matrix for BM â compute_variance_covariance.BM","text":"times_shared times shared ancestry nodes tips, result function compute_times_ca params_old (list) : old parameters used E step","code":""},{"path":"/reference/compute_variance_covariance.BM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Complete variance covariance matrix for BM â compute_variance_covariance.BM","text":"matrix variance covariance BM","code":""},{"path":"/reference/compute_variance_covariance.OU.html","id":null,"dir":"Reference","previous_headings":"","what":"Complete variance covariance matrix for OU â compute_variance_covariance.OU","title":"Complete variance covariance matrix for OU â compute_variance_covariance.OU","text":"compute_variance_covariance.OU computes (n+m)*p squared variance covariance matrix vec(X).","code":""},{"path":"/reference/compute_variance_covariance.OU.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complete variance covariance matrix for OU â compute_variance_covariance.OU","text":"","code":"compute_variance_covariance.OU(times_shared, distances_phylo, params_old, ...)"},{"path":"/reference/compute_variance_covariance.OU.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Complete variance covariance matrix for OU â compute_variance_covariance.OU","text":"times_shared times shared ancestry nodes tips, result function compute_times_ca params_old (list) : old parameters used E step","code":""},{"path":"/reference/compute_variance_covariance.OU.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Complete variance covariance matrix for OU â compute_variance_covariance.OU","text":"matrix variance covariance OU","code":""},{"path":"/reference/compute_variance_covariance.OU.nonsym.html","id":null,"dir":"Reference","previous_headings":"","what":"Complete variance covariance matrix for OU â compute_variance_covariance.OU.nonsym","title":"Complete variance covariance matrix for OU â compute_variance_covariance.OU.nonsym","text":"compute_variance_covariance.OU computes (n+m)*p squared variance covariance matrix vec(X).","code":""},{"path":"/reference/compute_variance_covariance.OU.nonsym.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complete variance covariance matrix for OU â compute_variance_covariance.OU.nonsym","text":"","code":"compute_variance_covariance.OU.nonsym(   times_shared,   distances_phylo,   params_old,   ... )"},{"path":"/reference/compute_variance_covariance.OU.nonsym.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Complete variance covariance matrix for OU â compute_variance_covariance.OU.nonsym","text":"times_shared times shared ancestry nodes tips, result function compute_times_ca params_old (list) : old parameters used E step","code":""},{"path":"/reference/compute_variance_covariance.OU.nonsym.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Complete variance covariance matrix for OU â compute_variance_covariance.OU.nonsym","text":"matrix variance covariance OU","code":""},{"path":"/reference/compute_variance_covariance.scOU.html","id":null,"dir":"Reference","previous_headings":"","what":"Complete variance covariance matrix for scOU â compute_variance_covariance.scOU","title":"Complete variance covariance matrix for scOU â compute_variance_covariance.scOU","text":"compute_variance_covariance.scOU computes (n+m)*p squared variance covariance matrix vec(X).","code":""},{"path":"/reference/compute_variance_covariance.scOU.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complete variance covariance matrix for scOU â compute_variance_covariance.scOU","text":"","code":"compute_variance_covariance.scOU(   times_shared,   distances_phylo,   params_old,   ... )"},{"path":"/reference/compute_variance_covariance.scOU.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Complete variance covariance matrix for scOU â compute_variance_covariance.scOU","text":"times_shared times shared ancestry nodes tips, result function compute_times_ca distances_phylo (matrix) : phylogenetic distance, result function compute_dist_phy params_old (list) : old parameters used E step","code":""},{"path":"/reference/compute_variance_covariance.scOU.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Complete variance covariance matrix for scOU â compute_variance_covariance.scOU","text":"matrix variance covariance scOU","code":""},{"path":"/reference/correspondenceEdges.html","id":null,"dir":"Reference","previous_headings":"","what":"Correspondence between edges numbers â correspondenceEdges","title":"Correspondence between edges numbers â correspondenceEdges","text":"correspondenceEdges takes edges numbers input tree, gives back corresponding numbers output tree.","code":""},{"path":"/reference/correspondenceEdges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correspondence between edges numbers â correspondenceEdges","text":"","code":"correspondenceEdges(edges, from, to)"},{"path":"/reference/correspondenceEdges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correspondence between edges numbers â correspondenceEdges","text":"edges vector index edges tree \"\" initial input tree (format \"phylo\") aimed output tree (format \"phylo\")","code":""},{"path":"/reference/correspondenceEdges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correspondence between edges numbers â correspondenceEdges","text":"vector index edges tree \"\"","code":""},{"path":"/reference/enlight.html","id":null,"dir":"Reference","previous_headings":"","what":"Make the result lighter â enlight","title":"Make the result lighter â enlight","text":"enlight.PhyloEM takes object class PhyloEM, returns object, without saving quantities can easily re-computed using function imputed_traits.PhyloEM.","code":""},{"path":"/reference/enlight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make the result lighter â enlight","text":"","code":"enlight(x)  # S3 method for class 'PhyloEM' enlight(x)"},{"path":"/reference/enlight.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make the result lighter â enlight","text":"x object class PhyloEM.","code":""},{"path":"/reference/enlight.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make the result lighter â enlight","text":"entry, lighter.","code":""},{"path":"/reference/enlight.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make the result lighter â enlight","text":"resulting object can much lighter, saving lot memory space, call function imputed_traits.PhyloEM longer. function plot.PhyloEM relies function, makes plotting also longer. effect setting option \"light_result=TRUE\" call PhyloEM.","code":""},{"path":"/reference/enlight.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Make the result lighter â enlight","text":"enlight(PhyloEM): PhyloEM object","code":""},{"path":[]},{"path":"/reference/enumerate_parsimony.html","id":null,"dir":"Reference","previous_headings":"","what":"Enumerate all the possible regime allocations, given a clustering of the tips. â enumerate_parsimony","title":"Enumerate all the possible regime allocations, given a clustering of the tips. â enumerate_parsimony","text":"enumerate_parsimony enumerate equivalent allocation regimes tree, clustering tips given. number equivalent regimes given parsimonyNumber (faster).","code":""},{"path":"/reference/enumerate_parsimony.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enumerate all the possible regime allocations, given a clustering of the tips. â enumerate_parsimony","text":"","code":"enumerate_parsimony(phylo, clusters = rep(1, length(phylo$tip.label)))"},{"path":"/reference/enumerate_parsimony.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enumerate all the possible regime allocations, given a clustering of the tips. â enumerate_parsimony","text":"phylo phylogenetic tree, class phylo. clusters vector representing group tip. (Default one group tips.)","code":""},{"path":"/reference/enumerate_parsimony.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enumerate all the possible regime allocations, given a clustering of the tips. â enumerate_parsimony","text":"S3 object class \"enumerate_parsimony\", : nbrReconstructions object class \"parsimonyCost\", result function parsimonyCost. allocations list size Nnode + ntaxa. entry list represents solutions subtree starting node . list nclus entries, entry matrix. line kth matrix ith node one possible allocation shifts, starting regime k node . phylo entry phylogenetic tree","code":""},{"path":"/reference/enumerate_parsimony.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Enumerate all the possible regime allocations, given a clustering of the tips. â enumerate_parsimony","text":"Function extract.enumerate_parsimony furnishes result human readable form (subtree). Function plot.enumerate_parsimony plots solutions found tree.","code":""},{"path":[]},{"path":"/reference/enumerate_parsimony.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Enumerate all the possible regime allocations, given a clustering of the tips. â enumerate_parsimony","text":"","code":"tree <- read.tree(text=\"(((A,B),C),D);\") plot(tree)  clusters <- c(0, 1, 2, 2) sols <- enumerate_parsimony(tree, clusters) plot(sols)   ## Extract the parsimonious solutions from the root extract(sols) # each line is a solution, with states of each node #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] #> [1,]    0    1    2    2    2    2    0 #> [2,]    0    1    2    2    2    2    1 #> [3,]    0    1    2    2    2    2    2  ## Extract the number of solutions from the root extract(sols, what = \"number\") #> [1] 3 extract(parsimonyNumber(tree, clusters)) # same result, more efficient #> [1] 3  ## Extract the cost of the solutions from the root extract(sols, what = \"cost\") #> [1] 2 extract(parsimonyCost(tree, clusters)) # same result, more efficient: #> [1] 2  ## Extract for the sub-tree below node 7 extract(sols, 7) # NAs: non-existing nodes in the sub-tree #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] #> [1,]    0    1   NA   NA   NA   NA    0 #> [2,]    0    1   NA   NA   NA   NA    1"},{"path":"/reference/enumerate_tips_under_edges.html","id":null,"dir":"Reference","previous_headings":"","what":"Tips descendants of nodes. â enumerate_tips_under_edges","title":"Tips descendants of nodes. â enumerate_tips_under_edges","text":"enumerate_tips_under_edges gives, edge tree, labels tips edge ancestor.","code":""},{"path":"/reference/enumerate_tips_under_edges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tips descendants of nodes. â enumerate_tips_under_edges","text":"","code":"enumerate_tips_under_edges(tree)"},{"path":"/reference/enumerate_tips_under_edges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tips descendants of nodes. â enumerate_tips_under_edges","text":"tree phylogenetic tree, class phylo.","code":""},{"path":"/reference/enumerate_tips_under_edges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tips descendants of nodes. â enumerate_tips_under_edges","text":"list size Nedge, entry vector tips bellow edge .","code":""},{"path":"/reference/enumerate_tips_under_edges.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tips descendants of nodes. â enumerate_tips_under_edges","text":"function uses function prop.part package ape.","code":""},{"path":"/reference/equivalent_shifts.html","id":null,"dir":"Reference","previous_headings":"","what":"Find all equivalent shifts allocations and values. â equivalent_shifts","title":"Find all equivalent shifts allocations and values. â equivalent_shifts","text":"equivalent_shifts computes equivalent shifts positions corresponding values, assuming ultrametric tree.","code":""},{"path":"/reference/equivalent_shifts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find all equivalent shifts allocations and values. â equivalent_shifts","text":"","code":"equivalent_shifts(   phylo,   params,   T_tree = incidence.matrix(phylo),   part.list = enumerate_tips_under_edges(phylo),   times_shared = NULL )"},{"path":"/reference/equivalent_shifts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find all equivalent shifts allocations and values. â equivalent_shifts","text":"phylo phylogenetic tree, class phylo. params object class params_process, result inference function PhyloEM, constructed function params_process T_tree (optional) matrix incidence tree, result function incidence.matrix part.list (optional) list partition tree, result function enumerate_tips_under_edges. times_shared (optional) matrix, result function compute_times_ca.","code":""},{"path":"/reference/equivalent_shifts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find all equivalent shifts allocations and values. â equivalent_shifts","text":"object class equivalent_shifts, entries: eq_shifts_edges matrix equivalent shifts shifts_and_betas matrix corresponding shifts values phylo entry phylogenetic tree p dimension","code":""},{"path":"/reference/equivalent_shifts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find all equivalent shifts allocations and values. â equivalent_shifts","text":"function valid ultrametric trees, models: BM, OU fixed root stationary root. assumes homoplasies.","code":""},{"path":[]},{"path":"/reference/equivalent_shifts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find all equivalent shifts allocations and values. â equivalent_shifts","text":"","code":"if (requireNamespace(\"TreeSim\", quietly = TRUE)) {   ## Simualte a tree   set.seed(17920902)   ntaxa = 20   phylo <- TreeSim::sim.bd.taxa.age(n = ntaxa, numbsim = 1, lambda = 0.1,                                    mu = 0, age = 1, mrca = TRUE)[[1]]      ## Define parameters (BM, fixed root)   params <- params_BM(p = 4, edges = c(6, 17, 31),                      values = cbind(1:4, -(1:4), rep(1, 4)))   ## Find equivalent solutions and plot them   eq_shifts <- equivalent_shifts(phylo, params)   eq_shifts   plot(eq_shifts)   ## Extract the values   # Shifts values for trait 2, for the three shifts (rows), and three solutions (columns)   extract(eq_shifts, trait = 2, what = \"shifts_values\")   # Root values for trait 4, for the tree solutions (columns)   extract(eq_shifts, trait = 4, what = \"root_values\")   ## Define parameters (OU, stationary root   params <- params_OU(p = 4, edges = c(6, 17, 31),                      selection.strength = 0.1,                      values = cbind(1:4, -(1:4), rep(1, 4)),                      random = TRUE)   ## Find equivalent solutions and plot them   eq_shifts <- equivalent_shifts(phylo, params)   eq_shifts   plot(eq_shifts)   ## Extract the values   # Shifts values for trait 2, for the three shifts (rows), and three solutions (columns)   extract(eq_shifts, trait = 2, what = \"shifts_values\")   # Root values for trait 4, for the three solutions (columns)   extract(eq_shifts, trait = 4, what = \"root_values\") }   #>              [,1]         [,2] [,3] #> [1,] 1.241267e-17 2.482534e-17    0"},{"path":"/reference/equivalent_shifts_edges.html","id":null,"dir":"Reference","previous_headings":"","what":"Find all the equivalent shift edges allocations. â equivalent_shifts_edges","title":"Find all the equivalent shift edges allocations. â equivalent_shifts_edges","text":"equivalent_shifts_edges uses function enumerate_parsimony find shifts positions equivalent given one.","code":""},{"path":"/reference/equivalent_shifts_edges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find all the equivalent shift edges allocations. â equivalent_shifts_edges","text":"","code":"equivalent_shifts_edges(   phylo,   shifts_edges,   part.list = enumerate_tips_under_edges(phylo) )"},{"path":"/reference/equivalent_shifts_edges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find all the equivalent shift edges allocations. â equivalent_shifts_edges","text":"phylo phylogenetic tree, class phylo. shifts_edges vector shifts positions edges tree. part.list (optional) list partition tree, result function enumerate_tips_under_edges.","code":""},{"path":"/reference/equivalent_shifts_edges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find all the equivalent shift edges allocations. â equivalent_shifts_edges","text":"matrix many columns equivalent allocation, column  representing possible parsimonious allocation shifts tree.","code":""},{"path":"/reference/equivalent_shifts_edges.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find all the equivalent shift edges allocations. â equivalent_shifts_edges","text":"function uses functions enumerate_parsimony actual computation equivalent regimes, clusters_from_shifts clustering tips induced original set shifts given, allocate_shifts_from_regimes convert back parametrization term regimes parametrization term shifts.","code":""},{"path":[]},{"path":"/reference/equivalent_shifts_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Find values given edges. OU stationary case. Ultrametric tree. â equivalent_shifts_values","title":"Find values given edges. OU stationary case. Ultrametric tree. â equivalent_shifts_values","text":"equivalent_shifts_values computes values shifts given possible allocations computed function equivalent_shifts_edges.","code":""},{"path":"/reference/equivalent_shifts_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find values given edges. OU stationary case. Ultrametric tree. â equivalent_shifts_values","text":"","code":"equivalent_shifts_values(phylo, eq_shifts_edges, T_tree_ac, vect_Y, p)"},{"path":"/reference/equivalent_shifts_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find values given edges. OU stationary case. Ultrametric tree. â equivalent_shifts_values","text":"phylo phylogenetic tree, class phylo. eq_shifts_edges matrix (optional) result function equivalent_shifts_edges. T_tree_ac matrix incidence tree, result function incidence.matrix, actualized coefficients computed function incidence_matrix_actualization_factors.","code":""},{"path":"/reference/equivalent_shifts_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find values given edges. OU stationary case. Ultrametric tree. â equivalent_shifts_values","text":"Named list, \"shifts_values\" matrix shifts values corresponding shifts positions eq_shifts_edges; \"betas_0\" vector corresponding root optimal values.","code":""},{"path":"/reference/equivalent_shifts_values.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find values given edges. OU stationary case. Ultrametric tree. â equivalent_shifts_values","text":"function uses linear representation problem. fist compute mean tips given original shifts positions values, uses function qr.solve find back values shifts, given various positions, means tips. Function compute_actualization_factors used compute actualization factor multiplies shifts values tips. Careful, works ULTRAMETRIC trees.","code":""},{"path":"/reference/estimate.alpha.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to estimate alpha â estimate.alpha","title":"Function to estimate alpha â estimate.alpha","text":"optimize maximize conditional expectation log likelihood alpha. interval set [alpha_old/2, 2*alpha_old], supposing previous guess alpha_old far reality.","code":""},{"path":"/reference/estimate.alpha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to estimate alpha â estimate.alpha","text":"","code":"estimate.alpha(   phylo,   conditional_law_X,   sigma2,   mu,   shifts,   alpha_old,   max_selection.strength )"},{"path":"/reference/estimate.alpha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to estimate alpha â estimate.alpha","text":"phylo Input tree. conditional_law_X result function compute_E.OU sigma2 variance params mu mean root state shifts list shifts tree alpha_old previous estimation selection strength max_selection.strength maximal value alpha authorized user","code":""},{"path":"/reference/estimate.alpha.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to estimate alpha â estimate.alpha","text":"double : estimation alpha","code":""},{"path":"/reference/estimate.alpha.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function to estimate alpha â estimate.alpha","text":"function uses functions compute_var_diff.OU compute_diff_exp.OU process. Careful : works root stationary, shifts nodes.","code":""},{"path":"/reference/estimateEM.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform One EM â estimateEM","title":"Perform One EM â estimateEM","text":"EstimateEM performs one EM one given number shifts. called function PhyloEM. use mostly internal, user need .","code":""},{"path":"/reference/estimateEM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform One EM â estimateEM","text":"","code":"estimateEM(   phylo,   Y_data,   Y_data_imp = Y_data,   process = c(\"BM\", \"OU\", \"scOU\", \"rBM\"),   independent = FALSE,   tol_EM = list(variance = 10^(-2), value.root = 10^(-2), exp.root = 10^(-2), var.root =     10^(-2), selection.strength = 10^(-2), normalized_half_life = 10^(-2), log_likelihood     = 10^(-2)),   Nbr_It_Max = 500,   method.variance = c(\"simple\", \"upward_downward\"),   method.init = c(\"default\", \"lasso\"),   method.init.alpha = c(\"default\", \"estimation\"),   method.init.alpha.estimation = c(\"regression\", \"regression.MM\", \"median\"),   nbr_of_shifts = 0,   random.root = TRUE,   stationary.root = TRUE,   alpha_known = FALSE,   eps = 10^(-3),   known.selection.strength = 1,   init.selection.strength = 1,   max_selection.strength = 100,   use_sigma_for_lasso = TRUE,   max_triplet_number = 10000,   min_params = list(variance = 0, value.root = -10^(5), exp.root = -10^(5), var.root = 0,     selection.strength = 0),   max_params = list(variance = 10^(5), value.root = 10^(5), exp.root = 10^(5), var.root =     10^(5), selection.strength = 10^(5)),   var.init.root = diag(1, nrow(Y_data)),   variance.init = diag(1, nrow(Y_data), nrow(Y_data)),   methods.segmentation = c(\"lasso\", \"same_shifts\", \"best_single_move\"),   check.tips.names = FALSE,   times_shared = NULL,   distances_phylo = NULL,   subtree.list = NULL,   T_tree = NULL,   U_tree = NULL,   h_tree = NULL,   F_moments = NULL,   tol_half_life = TRUE,   warning_several_solutions = TRUE,   convergence_mode = c(\"relative\", \"absolute\"),   check_convergence_likelihood = TRUE,   sBM_variance = FALSE,   method.OUsun = c(\"rescale\", \"raw\"),   K_lag_init = 0,   allow_negative = FALSE,   trait_correlation_threshold = 0.9,   ... )"},{"path":"/reference/estimateEM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform One EM â estimateEM","text":"phylo phylogenetic tree class phylo (package ape). Y_data Matrix data tips, size p x ntaxa. line trait, column tip. column names checked tip names tree. Y_data_imp (optional) imputed data previously computed, format Y_data. Mostly internal calls. process model used fit. One \"BM\" (full BM model, univariate multivariate); \"OU\" (OU independent traits, univariate multivariate); \"scOU\" (\"scalar OU\" model, see details). independent trait assumed independent one another? Default FALSE. OU multivariate setting works TRUE. tol_EM tolerance convergence parameters. named list, items: variance default 10^(-2) value.root default 10^(-2) exp.root default 10^(-2) var.root default 10^(-2) selection.strength default 10^(-2) normalized_half_life default 10^(-2) log_likelihood default 10^(-2) Nbr_It_Max maximal number iterations EM allowed. Default 500 iterations. method.variance Algorithm used moments computations E step. One \"simple\" naive method; \"upward_downward\" Upward Downward method (usually faster). Default \"upward_downward\". method.init initialization method. One \"lasso\" LASSO base initialization method; \"default\" user-specified initialization values. Default \"lasso\". method.init.alpha OU model, initialization method selection strength alpha. One \"estimation\" cherry-based initialization, using nlrob; \"default\" user-specified initialization values. Default \"estimation\". method.init.alpha.estimation method.init.alpha=\"estimation\", choice estimation(s) methods used. Choices among \"regression\", (method=\"M\" passed nlrob); \"regression.MM\" (method=\"MM\" passed nlrob) \"median\" (nlrob used, simple median taken). Default . nbr_of_shifts number shifts allowed. random.root whether root assumed random (TRUE) fixed (FALSE). Default TRUE stationary.root whether root assumed stationary state. Default TRUE. alpha_known selection strength assumed known ? Default FALSE. eps tolerance selection strength value switching BM. Default 10^(-3). known.selection.strength alpha_known=TRUE, value known selection strength. init.selection.strength (optional) starting point selection strength value. max_selection.strength maximal value allowed selection strength. Default 100. use_sigma_for_lasso whether use first estimation variance matrix lasso regression. Default TRUE. max_triplet_number initialization selection strength value (estimated), maximal number triplets tips considered. min_params named list containing minimum allowed values parameters. estimation smaller, EM stops, considered divergent. Default values: variance default 0 value.root default -10^(5) exp.root default -10^(5) var.root default 0 selection.strength default 0 max_params named list containing maximum allowed values parameters. estimation larger, EM stops, considered divergent. Default values: variance default 10^(5) value.root default 10^(5) exp.root default 10^(5) var.root default 10^(5) selection.strength default 10^(5) var.init.root optional initialization value variance root. variance.init optional initialization value variance. methods.segmentation OU, method(s) used M step find new candidate shifts positions. Choices among \"lasso\" LASSO-based algorithm; \"best_single_move\" one-move time based heuristic. Default . Using \"lasso\" might speed function lot. check.tips.names whether check tips names tree column names data. Default TRUE. times_shared (optional) times shared ancestry nodes tips, result function compute_times_ca distances_phylo (optional) phylogenetic distances, result function compute_dist_phy. subtree.list (optional) tips descendants edges, result function enumerate_tips_under_edges. T_tree (optional) matrix incidence tree, result function incidence.matrix. U_tree (optional) full matrix incidence tree, result function incidence.matrix.full. h_tree (optional) total height tree. F_moments (optional, internal) tol_half_life tolerance criterion applied phylogenetic half life (TRUE, default) raw selection strength ? warning_several_solutions whether issue warning several equivalent solutions found (default TRUE). convergence_mode one \"relative\" (default) \"absolute\". tolerance applied raw parameters, renormalized ones ? check_convergence_likelihood likelihood taken consideration convergence assessment ? (default TRUE). sBM_variance root BM supposed random \"stationary\"? Used BM equivalent computations. Default FALSE. method.OUsun Method used univariate OU. One \"rescale\" (rescale tree fit BM) \"raw\" (directly use OU, available univariate processes). K_lag_init Number extra shifts considered initialization step. Increases accuracy, can make computations quite slow taken high. Default 5. allow_negative whether allow negative values alpha (Early Burst). See documentation PhyloEM details. Default FALSE. trait_correlation_threshold trait correlation threshold stop analysis. Default 0.9. ... arguments passed estimateEM, including tolerance parameters stopping criteria, maximal number iterations, etc.","code":""},{"path":"/reference/estimateEM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform One EM â estimateEM","text":"object class EstimateEM.","code":""},{"path":"/reference/estimateEM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform One EM â estimateEM","text":"See documentation PhyloEM details. parameters monitoring EM (like tol_EM, Nbr_It_Max, etc.) can called PhyloEM.","code":""},{"path":[]},{"path":"/reference/extract.enumerate_parsimony.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the result of enumerate_parsimony at a node. â extract.enumerate_parsimony","title":"Extract the result of enumerate_parsimony at a node. â extract.enumerate_parsimony","text":"extract.enumerate_parsimony returns matrix containing possible regime allocations nodes given subtree.","code":""},{"path":"/reference/extract.enumerate_parsimony.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the result of enumerate_parsimony at a node. â extract.enumerate_parsimony","text":"","code":"# S3 method for class 'enumerate_parsimony' extract(   x,   node = attr(x$allocations, \"ntaxa\") + 1,   what = c(\"solutions\", \"number\", \"cost\"),   ... )"},{"path":"/reference/extract.enumerate_parsimony.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the result of enumerate_parsimony at a node. â extract.enumerate_parsimony","text":"x object class \"enumerate_parsimony\", result function enumerate_parsimony. node node retrieve parsimony number. Default root tree. quantity retrieve. Either \"solutions\" full solutions, \"number\" number solutions, \"cost\" minimal cost solution. Default \"solutions\" ... unused","code":""},{"path":"/reference/extract.enumerate_parsimony.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the result of enumerate_parsimony at a node. â extract.enumerate_parsimony","text":"matrix ntaxa + Nnode columns, many rows number possible parsimonious reconstructions.","code":""},{"path":[]},{"path":"/reference/extract.equivalent_shifts.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the shifts values for one trait. â extract.equivalent_shifts","title":"Extract the shifts values for one trait. â extract.equivalent_shifts","text":"extract.equivalent_shifts takes object class equivalent_shifts, result function equivalent_shifts, returns shifts root values given trait.","code":""},{"path":"/reference/extract.equivalent_shifts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the shifts values for one trait. â extract.equivalent_shifts","text":"","code":"# S3 method for class 'equivalent_shifts' extract(x, trait = 1, what = c(\"shifts_values\", \"root_values\"), ...)"},{"path":"/reference/extract.equivalent_shifts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the shifts values for one trait. â extract.equivalent_shifts","text":"x object class equivalent_shifts, result function equivalent_shifts trait number trait extracted. Default 1. one \"shifts_values\" \"root_values\". ... unused.","code":""},{"path":"/reference/extract.equivalent_shifts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the shifts values for one trait. â extract.equivalent_shifts","text":"matrix values shifts (= \"shifts_values\") root (= \"root_values\") trait equivalent configuration. column one configuration.","code":""},{"path":[]},{"path":"/reference/extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extraction function â extract","title":"Extraction function â extract","text":"extract needed quantities S3 object.","code":""},{"path":"/reference/extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extraction function â extract","text":"","code":"extract(x, ...)"},{"path":"/reference/extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extraction function â extract","text":"x S3 object. ... arguments passed specific method.","code":""},{"path":"/reference/extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extraction function â extract","text":"integer giving number equivalent parsimonious solutions.","code":""},{"path":[]},{"path":"/reference/extract.parsimonyCost.html","id":null,"dir":"Reference","previous_headings":"","what":"Extraction of the actual number of solutions. â extract.parsimonyCost","title":"Extraction of the actual number of solutions. â extract.parsimonyCost","text":"extract.parsimonyCost takes object class \"parsimonyCost\", result function parsimonyCost, computes minimum cost given node.","code":""},{"path":"/reference/extract.parsimonyCost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extraction of the actual number of solutions. â extract.parsimonyCost","text":"","code":"# S3 method for class 'parsimonyCost' extract(x, node = attr(x, \"ntaxa\") + 1, ...)"},{"path":"/reference/extract.parsimonyCost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extraction of the actual number of solutions. â extract.parsimonyCost","text":"x object class \"parsimonyCost\", result function parsimonyCost. node root node subtree. default, root tree. ... unused","code":""},{"path":"/reference/extract.parsimonyCost.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extraction of the actual number of solutions. â extract.parsimonyCost","text":"integer giving minimum cost subtree.","code":""},{"path":[]},{"path":"/reference/extract.parsimonyNumber.html","id":null,"dir":"Reference","previous_headings":"","what":"Extraction of the actual number of solutions. â extract.parsimonyNumber","title":"Extraction of the actual number of solutions. â extract.parsimonyNumber","text":"extract.parsimonyNumber takes two matrices computed parsimonyNumber, compute actual number parsimonious solution subtree starting given node.","code":""},{"path":"/reference/extract.parsimonyNumber.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extraction of the actual number of solutions. â extract.parsimonyNumber","text":"","code":"# S3 method for class 'parsimonyNumber' extract(   x,   node = attr(x$nbrReconstructions, \"ntaxa\") + 1,   what = c(\"number\", \"cost\"),   ... )"},{"path":"/reference/extract.parsimonyNumber.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extraction of the actual number of solutions. â extract.parsimonyNumber","text":"x object class \"parsimonyNumber\", result function parsimonyNumber. node root node subtree. default, root tree. quantity retrieve. Either \"number\" number solutions, \"cost\" minimal cost solution. Default \"number\". ... unused","code":""},{"path":"/reference/extract.parsimonyNumber.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extraction of the actual number of solutions. â extract.parsimonyNumber","text":"integer giving number equivalent parsimonious solutions.","code":""},{"path":"/reference/extract.parsimonyNumber.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extraction of the actual number of solutions. â extract.parsimonyNumber","text":"parsimonious solutions one minimum number shifts (given matrix costReconstructions). function sums number solutions (given matrix nbrReconstructions) minimum number shifts.","code":""},{"path":[]},{"path":"/reference/extract.partitionsNumber.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract from object partitionsNumber â extract.partitionsNumber","title":"Extract from object partitionsNumber â extract.partitionsNumber","text":"extract.partitionsNumber extracts number partitions given sub-tree, either marked non-marked.","code":""},{"path":"/reference/extract.partitionsNumber.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract from object partitionsNumber â extract.partitionsNumber","text":"","code":"# S3 method for class 'partitionsNumber' extract(   x,   node = attr(x, \"ntaxa\") + 1,   npart = attr(x, \"npart\"),   marked = FALSE,   ... )"},{"path":"/reference/extract.partitionsNumber.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract from object partitionsNumber â extract.partitionsNumber","text":"x object class partitionsNumber, result function partitionsNumber. node root node subtree get result. Default root tree. npart number partitions (colors) allowed tips. Default value used call function partitionsNumber (maximum). marked whether extract marked (TRUE) un-marked (FALSE) partitions. number models number un-marked partitions. Default FALSE. ... unused.","code":""},{"path":"/reference/extract.partitionsNumber.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract from object partitionsNumber â extract.partitionsNumber","text":"number partitions npart colors, sub-tree starting node, marked .","code":""},{"path":[]},{"path":"/reference/extract.simul_process.html","id":null,"dir":"Reference","previous_headings":"","what":"Extraction of simulated traits â extract.simul_process","title":"Extraction of simulated traits â extract.simul_process","text":"extract.simul_process takes object class \"simul_process\", result function simul_process, extracts traits values, expectations optimal values tips internal nodes.","code":""},{"path":"/reference/extract.simul_process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extraction of simulated traits â extract.simul_process","text":"","code":"# S3 method for class 'simul_process' extract(   x,   where = c(\"tips\", \"nodes\"),   what = c(\"states\", \"expectations\", \"optimal.values\"),   ... )"},{"path":"/reference/extract.simul_process.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extraction of simulated traits â extract.simul_process","text":"x object class \"simul_process\", result function simul_process. one \"tips\" (default) \"nodes\". extract results. one \"states\" (default), \"expectation\", \"optimal.values\". ... unused","code":""},{"path":"/reference/extract.simul_process.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extraction of simulated traits â extract.simul_process","text":"matrix giving selected quantities selected nodes tips. tips nods labeled, colnames matrix set accordingly.","code":""},{"path":"/reference/extract.simul_process.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extraction of simulated traits â extract.simul_process","text":"##","code":""},{"path":[]},{"path":"/reference/extract_variance_covariance.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract sub-matrices of variance. â extract_variance_covariance","title":"Extract sub-matrices of variance. â extract_variance_covariance","text":"extract_variance_covariance return adequate sub-matrix.","code":""},{"path":"/reference/extract_variance_covariance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract sub-matrices of variance. â extract_variance_covariance","text":"","code":"extract_variance_covariance(   struct,   what = c(\"YY\", \"YZ\", \"ZZ\"),   masque_data = c(rep(TRUE, attr(struct, \"ntaxa\") * attr(struct, \"p_dim\")), rep(FALSE,     (dim(struct)[1] - attr(struct, \"ntaxa\")) * attr(struct, \"p_dim\"))) )"},{"path":"/reference/extract_variance_covariance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract sub-matrices of variance. â extract_variance_covariance","text":"struct structural matrix size (ntaxa+Nnode)*p, result function compute_variance_covariance sub-matrix extracted: \"YY\" : sub-matrix tips (p*ntaxa first lines columns) \"YZ\" : sub matrix tips x nodes (p*Nnode last rows p*ntaxa first columns) \"ZZ\" : sub matrix nodes (p*Nnode last rows columns) masque_data Mask missing data","code":""},{"path":"/reference/extract_variance_covariance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract sub-matrices of variance. â extract_variance_covariance","text":"sub-matrix variance covariance.","code":""},{"path":"/reference/find_grid_alpha.html","id":null,"dir":"Reference","previous_headings":"","what":"Find a reasonable grid for alpha â find_grid_alpha","title":"Find a reasonable grid for alpha â find_grid_alpha","text":"Grid 2*ln(2)*quantile(d_ij)/factor_up_alpha < t_1/2 < factor_down_alpha * ln(2) * h_tree, t_1/2 phylogenetic half life: t_1/2 = log(2)/alpha. Ensures alpha_min, almost BM, alpha_max, almost tips decorrelated.","code":""},{"path":"/reference/find_grid_alpha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find a reasonable grid for alpha â find_grid_alpha","text":"","code":"find_grid_alpha(   phy,   alpha = NULL,   nbr_alpha = 10,   factor_up_alpha = 2,   factor_down_alpha = 3,   quantile_low_distance = 1e-04,   log_transform = TRUE,   allow_negative = FALSE,   ... )"},{"path":"/reference/find_grid_alpha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find a reasonable grid for alpha â find_grid_alpha","text":"phy phylogenetic tree class \"phylo\" alpha fixed vector alpha values already known. Default NULL. nbr_alpha number elements grid factor_up_alpha factor scalability factor_down_alpha factor scalability quantile_low_distance quantile min distance log_transform whether take log scale spacing alpha values. Default TRUE. allow_negative whether allow negative values alpha (Early Burst). See documentation PhyloEM details. Default FALSE. ... used.","code":""},{"path":"/reference/find_grid_alpha.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find a reasonable grid for alpha â find_grid_alpha","text":"grid alpha values","code":""},{"path":"/reference/find_grid_alpha.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find a reasonable grid for alpha â find_grid_alpha","text":"quantile_low_distance=0, quantile(d_ij)=min(d_ij), , two tips ,j, correlation j bounded exp(-factor_up_alpha/2). values alpha used re-scaling tree, exponential term exp(2*alpha*h). function makes sure number maximal float allowed (equals .Machine$double.xmax).","code":""},{"path":[]},{"path":"/reference/find_independent_regression_vectors.glmnet_multivariate.html","id":null,"dir":"Reference","previous_headings":"","what":"Given a regularization path, find K selected independent variables. â find_independent_regression_vectors.glmnet_multivariate","title":"Given a regularization path, find K selected independent variables. â find_independent_regression_vectors.glmnet_multivariate","text":"find_independent_regression_vectors tries find situation K variables selected, selected columns matrix Xp independent.","code":""},{"path":"/reference/find_independent_regression_vectors.glmnet_multivariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Given a regularization path, find K selected independent variables. â find_independent_regression_vectors.glmnet_multivariate","text":"","code":"find_independent_regression_vectors.glmnet_multivariate(Xp, K, fit, root)"},{"path":"/reference/find_independent_regression_vectors.glmnet_multivariate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Given a regularization path, find K selected independent variables. â find_independent_regression_vectors.glmnet_multivariate","text":"Xp (transformed) matrix regression K number non-zero components allowed root integer, position root column (intercept) excluded fit. null root column.","code":""},{"path":"/reference/find_independent_regression_vectors.glmnet_multivariate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Given a regularization path, find K selected independent variables. â find_independent_regression_vectors.glmnet_multivariate","text":"delta vector regression K non-zero coefficients.","code":""},{"path":"/reference/find_independent_regression_vectors.glmnet_multivariate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Given a regularization path, find K selected independent variables. â find_independent_regression_vectors.glmnet_multivariate","text":", set selected independent, go back previous selected variables, forbid moves led non-independence rest path.","code":""},{"path":"/reference/find_rotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Test for rotation invariant datasets â find_rotation","title":"Test for rotation invariant datasets â find_rotation","text":"find_rotation takes two fits PhyloEM, test datasets equal rotation.","code":""},{"path":"/reference/find_rotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test for rotation invariant datasets â find_rotation","text":"","code":"find_rotation(res1, res2, tol = NULL)"},{"path":"/reference/find_rotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test for rotation invariant datasets â find_rotation","text":"res1 object class PhyloEM. res2 object class PhyloEM. tol relative numerical tolerance. Default .Machine$double.eps^(0.5).","code":""},{"path":"/reference/find_rotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test for rotation invariant datasets â find_rotation","text":"appropriate, rotation matrix rot dat1 = rot","code":""},{"path":"/reference/find_shift_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Find values given edges. OU stationary case. Ultrametric tree. â find_shift_values","title":"Find values given edges. OU stationary case. Ultrametric tree. â find_shift_values","text":"find_actualized_shift_values computes values shifts positions, mean values tips. Warning : function check consistency. Please make sure shifts positions mean values compatible.","code":""},{"path":"/reference/find_shift_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find values given edges. OU stationary case. Ultrametric tree. â find_shift_values","text":"","code":"find_shift_values(shifts_edges, T_tree_ac, vect_Y, p, ntaxa)"},{"path":"/reference/find_shift_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find values given edges. OU stationary case. Ultrametric tree. â find_shift_values","text":"shifts_edges vector positions shifts tree. T_tree_ac matrix incidence tree, result function incidence.matrix.","code":""},{"path":"/reference/find_shift_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find values given edges. OU stationary case. Ultrametric tree. â find_shift_values","text":"vector, first entry values root, entries values shifts.","code":""},{"path":"/reference/find_shift_values.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find values given edges. OU stationary case. Ultrametric tree. â find_shift_values","text":"function uses qr.solve rectangular linear system solving.","code":""},{"path":"/reference/format_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the EM for several values of K â format_output","title":"Run the EM for several values of K â format_output","text":"estimateEM_several_K.OUsr uses function estimateEM data, values K 0 K_max.","code":""},{"path":"/reference/format_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the EM for several values of K â format_output","text":"","code":"format_output(results_estim_EM, phylo, time = NA)"},{"path":"/reference/format_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the EM for several values of K â format_output","text":"results_estim_EM output function estimateEM time run function","code":""},{"path":"/reference/format_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the EM for several values of K â format_output","text":"summary data frame K_max lines, columns:    - alpha_estim estimated selection strength    - gamma_estim estimated root variance    - beta_0_estim estimated value root optimum    - EM_steps number iterations needed convergence    - DV_estim EM diverged ?    - CV_estim EM converged ?    - log_likelihood log likelihood data using estimated parameters    - mahalanobis_distance_data_mean Mahalanobis distance data estimated means tips    - least_squares Mahalanobis distance, renormalized gamma^2: mahalanobis_distance_data_mean * gamma_estim.    - mean_number_new_shifts mean number shifts changed iterations EM    - number_equivalent_solutions number equivalent solutions solution found.    - K_try number shifts allowed.    - complexity complexity K_try    - time CPU time needed. params list inferred parameters params_init list initial parameters alpha_0 initial values alpha gamma_0 initial values gamma Zhat reconstructed node states m_Y_estim reconstructed tip states edge.quality edge, relative number iterations  present.","code":""},{"path":"/reference/format_output.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run the EM for several values of K â format_output","text":"EM first launched K=0, alpha gamma estimated. estimated values alpha, gamma beta_0 found first EM used initialization parameters runs EM K. EMs parallelized thanks packages foreach doParallel. WARNING : code work OU stationary root, ultrametric tree.","code":""},{"path":"/reference/get_criterion.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Model Selection Criterion â get_criterion","title":"Get Model Selection Criterion â get_criterion","text":"function takes object class PhyloEM, result function PhyloEM, return values model selection criterion value K.","code":""},{"path":"/reference/get_criterion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Model Selection Criterion â get_criterion","text":"","code":"get_criterion(res, method.selection = NULL)"},{"path":"/reference/get_criterion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Model Selection Criterion â get_criterion","text":"res object class PhyloEM, result function PhyloEM. method.selection select parameters plot. One \"LINselect\", \"DDSE\", \"Djump\" \"likelihood\" (un-penalized likelihood). Default \"LINselect\". See params_process.PhyloEM.","code":""},{"path":"/reference/get_criterion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Model Selection Criterion â get_criterion","text":"named vector values criterion number shift K.","code":""},{"path":[]},{"path":"/reference/get_variance_node.html","id":null,"dir":"Reference","previous_headings":"","what":"Get variance matrix of a node â get_variance_node","title":"Get variance matrix of a node â get_variance_node","text":"get_variance_node returns conditional variance node, conditional covariance node parent.","code":""},{"path":"/reference/get_variance_node.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get variance matrix of a node â get_variance_node","text":"","code":"get_variance_node(node, vars)"},{"path":"/reference/get_variance_node.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get variance matrix of a node â get_variance_node","text":"node extract matrix. vars matrix size p x p*(ntaxa+Nnode) result function compute_E.simple, entry \"variances\" \"covariances\".","code":""},{"path":"/reference/get_variance_node.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get variance matrix of a node â get_variance_node","text":"sub-matrix variance node.","code":""},{"path":"/reference/go_back_to_original_process.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale the parameters back to the original process â go_back_to_original_process","title":"Scale the parameters back to the original process â go_back_to_original_process","text":"go_back_to_original_process takes inferred parameters BM rescaled tree, gives back equivalent parameters OU original process.","code":""},{"path":"/reference/go_back_to_original_process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale the parameters back to the original process â go_back_to_original_process","text":"","code":"go_back_to_original_process(   phy_original,   known.selection.strength,   sBM_variance,   params )"},{"path":"/reference/go_back_to_original_process.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale the parameters back to the original process â go_back_to_original_process","text":"phy_original original phylogenetic tree known.selection.strength known selection strength original OU. sBM_variance boolean. root random ? params inferred parameters BM re-scaled tree.","code":""},{"path":"/reference/go_back_to_original_process.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale the parameters back to the original process â go_back_to_original_process","text":"params_scOU equivalent parameters OU original tree.","code":""},{"path":"/reference/imputed_traits.html","id":null,"dir":"Reference","previous_headings":"","what":"Ancestral State Reconstruction â imputed_traits","title":"Ancestral State Reconstruction â imputed_traits","text":"imputed_traits.PhyloEM takes object class PhyloEM, returns imputed traits values, either internal nodes (ancestral state reconstruction) tips (data imputation)","code":""},{"path":"/reference/imputed_traits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ancestral State Reconstruction â imputed_traits","text":"","code":"imputed_traits(x, ...)  # S3 method for class 'PhyloEM' imputed_traits(   x,   trait = 1,   save_all = FALSE,   where = c(\"nodes\", \"tips\"),   what = c(\"imputed\", \"variances\", \"expectations\"),   params = NULL,   method.selection = NULL,   reconstructed_states = NULL,   ... )"},{"path":"/reference/imputed_traits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ancestral State Reconstruction â imputed_traits","text":"x object class PhyloEM. ... arguments passed params_process.PhyloEM trait integer giving trait extract. Default 1. save_all TRUE, arguments ignored, moments kept extraction function, specifying argument reconstructed_states. Default FALSE. either \"nodes\" ancestral state reconstruction, \"tips\" data imputation. quantity retrieve. Either imputed traits (default), conditional variances, simple expectations selected process. params (optional) user-specified parameters. Must class params_process. left blank, extracted using method.selection argument (see ). method.selection (optional) method selection used. One \"LINselect\", \"DDSE\", \"Djump\". Default \"LINselect\". reconstructed_states reconstructed states already computed (previous call function, save_all=TRUE), can passed (avoids multiple computations E step).","code":""},{"path":"/reference/imputed_traits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ancestral State Reconstruction â imputed_traits","text":"matrix array computed quantities.","code":""},{"path":"/reference/imputed_traits.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Ancestral State Reconstruction â imputed_traits","text":"imputed_traits(PhyloEM): PhyloEM object","code":""},{"path":[]},{"path":"/reference/incidence.matrix.full.html","id":null,"dir":"Reference","previous_headings":"","what":"Incidence matrix of a tree. â incidence.matrix.full","title":"Incidence matrix of a tree. â incidence.matrix.full","text":"incidence.matrix.full computes incidence matrix U tree : node branch b, U[,b]=1 b lineage , 0 otherwise.","code":""},{"path":"/reference/incidence.matrix.full.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Incidence matrix of a tree. â incidence.matrix.full","text":"","code":"incidence.matrix.full(phylo)"},{"path":"/reference/incidence.matrix.full.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Incidence matrix of a tree. â incidence.matrix.full","text":"phylo phylogenetic tree, class phylo.","code":""},{"path":"/reference/incidence.matrix.full.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Incidence matrix of a tree. â incidence.matrix.full","text":"Matrix incidence, size ntaxa + Nnode.","code":""},{"path":[]},{"path":"/reference/incidence.matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Incidence matrix of a tree. â incidence.matrix","title":"Incidence matrix of a tree. â incidence.matrix","text":"incidence.matrix computes incidence matrix T tree : lineage branch b, T[,b]=1 b lineage , 0 otherwise.","code":""},{"path":"/reference/incidence.matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Incidence matrix of a tree. â incidence.matrix","text":"","code":"incidence.matrix(phylo)"},{"path":"/reference/incidence.matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Incidence matrix of a tree. â incidence.matrix","text":"phylo phylogenetic tree, class phylo.","code":""},{"path":"/reference/incidence.matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Incidence matrix of a tree. â incidence.matrix","text":"Matrix incidence, size Nedge x ntaxa.","code":""},{"path":[]},{"path":"/reference/incidence_matrix_actualization_factors.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the actualization factors to apply to the incidence matrix. â incidence_matrix_actualization_factors","title":"Compute the actualization factors to apply to the incidence matrix. â incidence_matrix_actualization_factors","text":"incidence_matrix_actualization_factors computes ntaxa x Nedge matrix (1 - exp(-alpha * (t_i - t_pa(j) - nu_j * l_j)))_{tip, j node}. matrix multiplied incidence matrix outer product.","code":""},{"path":"/reference/incidence_matrix_actualization_factors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the actualization factors to apply to the incidence matrix. â incidence_matrix_actualization_factors","text":"","code":"incidence_matrix_actualization_factors(   tree,   selection.strength,   relativeTimes_tree = 0,   times_shared = compute_times_ca(tree) )"},{"path":"/reference/incidence_matrix_actualization_factors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the actualization factors to apply to the incidence matrix. â incidence_matrix_actualization_factors","text":"tree phylogenetic tree. selection.strength selection strength process. relativeTimes_tree Nedge vector relative times associated branches. times_shared matrix, result function compute_times_ca.","code":""},{"path":"/reference/incidence_matrix_actualization_factors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the actualization factors to apply to the incidence matrix. â incidence_matrix_actualization_factors","text":"Matrix size ntaxa x Nedge","code":""},{"path":"/reference/init.EM.lasso.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialization of the shifts using Lasso. â init.EM.lasso","title":"Initialization of the shifts using Lasso. â init.EM.lasso","text":"init.EM.lasso following regression : ||Y_data-T.delta||_(Sigma_YY^(-1)) + lambda |delta|_1 using function glmnet::glmnet package glmnet, function lasso_regression_K_fixed. T incidence matrix tree, delta vectorial representation shifts (see functions incidence.matrix shifts.list_to_vector details).","code":""},{"path":"/reference/init.EM.lasso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialization of the shifts using Lasso. â init.EM.lasso","text":"","code":"init.EM.lasso(   phylo,   Y_data,   Y_data_imp = Y_data,   Y_data_vec_known = as.vector(Y_data),   process,   times_shared = compute_times_ca(phylo),   distances_phylo,   nbr_of_shifts,   K_lag_init = 0,   use_sigma = TRUE,   params_sigma = NULL,   variance.init = diag(1, p, p),   random.init = FALSE,   value.root.init = rep(0, p),   exp.root.init = rep(1, p),   var.root.init = diag(1, p, p),   edges.init = NULL,   values.init = matrix(0, p, length(edges.init)),   relativeTimes.init = NULL,   selection.strength.init = 1,   optimal.value.init = rep(0, p),   T_tree = incidence.matrix(phylo),   subtree.list = NULL,   miss = FALSE,   sBM_variance = FALSE,   stationary.root.init = FALSE,   masque_data,   independent = FALSE,   ... )"},{"path":"/reference/init.EM.lasso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialization of the shifts using Lasso. â init.EM.lasso","text":"Y_data data tips. times_shared (matrix) : times shared ancestry, result function compute_times_ca. distances_phylo (matrix) : phylogenetic distance, result function compute_dist_phy nbr_of_shifts number shifts used EM algorithm","code":""},{"path":"/reference/init.EM.lasso.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialization of the shifts using Lasso. â init.EM.lasso","text":"params_init list initial parameters used, right  format.","code":""},{"path":"/reference/init.EM.lasso.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initialization of the shifts using Lasso. â init.EM.lasso","text":"Cholesky decomposition function Sigma_YY^(-1) used. lambda chosen delta right number non zero components.","code":""},{"path":"/reference/init.allocate_regimes_from_shifts.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialization for the allocation of shifts. â init.allocate_regimes_from_shifts","title":"Initialization for the allocation of shifts. â init.allocate_regimes_from_shifts","text":"init.allocate_regimes_from_shifts initialize vector regimes nodes tips, regime (0) root.","code":""},{"path":"/reference/init.allocate_regimes_from_shifts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialization for the allocation of shifts. â init.allocate_regimes_from_shifts","text":"","code":"init.allocate_regimes_from_shifts(phy, ...)"},{"path":"/reference/init.allocate_regimes_from_shifts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialization for the allocation of shifts. â init.allocate_regimes_from_shifts","text":"phy Input tree.","code":""},{"path":"/reference/init.allocate_regimes_from_shifts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialization for the allocation of shifts. â init.allocate_regimes_from_shifts","text":"Matrix size (Nnode + ntaxa)x1 NAs, 0 root.","code":""},{"path":"/reference/init.allocate_regimes_from_shifts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initialization for the allocation of shifts. â init.allocate_regimes_from_shifts","text":"function used function allocate_regimes_from_shifts designed furnish function update.allocate_regimes_from_shifts right structure data.","code":""},{"path":"/reference/init.alpha.gamma.estimation.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialization the selection strength alpha using robust estimation â init.alpha.gamma.estimation","title":"Initialization the selection strength alpha using robust estimation â init.alpha.gamma.estimation","text":"init.alpha.estimation fits (Y_i-Y_j)^2 ~ gamma^2(1-exp(-alpha*d_ij)) couples tips (,j) mean, .e separated shift. Shifts initialized thanks lasso (function init.EM.lasso).","code":""},{"path":"/reference/init.alpha.gamma.estimation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialization the selection strength alpha using robust estimation â init.alpha.gamma.estimation","text":"","code":"init.alpha.gamma.estimation(   phylo,   Y_data,   nbr_of_shifts,   times_shared,   distances_phylo,   T_tree,   subtree.list,   max_triplet_number,   alpha_known,   method.init.alpha.estimation,   tol_EM,   h_tree,   miss,   masque_data,   independent,   ... )"},{"path":"/reference/init.alpha.gamma.estimation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialization the selection strength alpha using robust estimation â init.alpha.gamma.estimation","text":"phylo phylogenetic tree, class phylo. Y_data data tips. nbr_of_shifts number shifts used EM algorithm distances_phylo (matrix) : phylogenetic distance, result function compute_dist_phy","code":""},{"path":"/reference/init.alpha.gamma.estimation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialization the selection strength alpha using robust estimation â init.alpha.gamma.estimation","text":"params_init list initial parameters used, right  format.","code":""},{"path":"/reference/init.alpha.gamma.estimation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initialization the selection strength alpha using robust estimation â init.alpha.gamma.estimation","text":"Function robustbase::nlrob used robust fit.","code":""},{"path":"/reference/init.compute_betas_from_shifts.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialization for the computation of the optimal values â init.compute_betas_from_shifts","title":"Initialization for the computation of the optimal values â init.compute_betas_from_shifts","text":"init.compute_betas_from_shifts initialize vector optimal values nodes tips, value root.","code":""},{"path":"/reference/init.compute_betas_from_shifts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialization for the computation of the optimal values â init.compute_betas_from_shifts","text":"","code":"init.compute_betas_from_shifts(phy, optimal.value, ...)"},{"path":"/reference/init.compute_betas_from_shifts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialization for the computation of the optimal values â init.compute_betas_from_shifts","text":"phy Input tree. optimal.value optimal value root tree","code":""},{"path":"/reference/init.compute_betas_from_shifts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialization for the computation of the optimal values â init.compute_betas_from_shifts","text":"Matrix size (Nnode + ntaxa)x1 NAs, optimal value  root.","code":""},{"path":"/reference/init.compute_betas_from_shifts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initialization for the computation of the optimal values â init.compute_betas_from_shifts","text":"function used function compute_betas_from_shifts designed furnish function update.compute_betas_from_shifts right structure data.","code":""},{"path":"/reference/init.enumerate_parsimony.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialization for the enumeration of parsimonious solutions. â init.enumerate_parsimony","title":"Initialization for the enumeration of parsimonious solutions. â init.enumerate_parsimony","text":"init.enumerate_parsimony used function enumerate_parsimony, initialize correct data structure.","code":""},{"path":"/reference/init.enumerate_parsimony.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialization for the enumeration of parsimonious solutions. â init.enumerate_parsimony","text":"","code":"init.enumerate_parsimony(phy, clusters, pos)"},{"path":"/reference/init.enumerate_parsimony.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialization for the enumeration of parsimonious solutions. â init.enumerate_parsimony","text":"phy Input tree. clusters vector representing group tip.","code":""},{"path":"/reference/init.enumerate_parsimony.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialization for the enumeration of parsimonious solutions. â init.enumerate_parsimony","text":"list size Nnode + ntaxa, described .","code":""},{"path":"/reference/init.enumerate_parsimony.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initialization for the enumeration of parsimonious solutions. â init.enumerate_parsimony","text":"function returns list Nnode + ntaxa entries. Entries corresponding tips initialized list nclus matrices. tip group k, matrices set NULL, except kth, set vector size Nnode + ntaxa, entry set k, others NA.","code":""},{"path":"/reference/init.incidence.matrix.full.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialization for incidence matrix (full tree) â init.incidence.matrix.full","title":"Initialization for incidence matrix (full tree) â init.incidence.matrix.full","text":"init.incidence.matrix.full initialize matrix updated update.incidence.matrix.full computation incidence  matrix full tree incidence.matrix.full.","code":""},{"path":"/reference/init.incidence.matrix.full.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialization for incidence matrix (full tree) â init.incidence.matrix.full","text":"","code":"init.incidence.matrix.full(phy)"},{"path":"/reference/init.incidence.matrix.full.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialization for incidence matrix (full tree) â init.incidence.matrix.full","text":"phy Input tree.","code":""},{"path":"/reference/init.incidence.matrix.full.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialization for incidence matrix (full tree) â init.incidence.matrix.full","text":"Matrix size ntaxa + Nnode.","code":""},{"path":"/reference/init.incidence.matrix.full.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initialization for incidence matrix (full tree) â init.incidence.matrix.full","text":"initialized matrix squared size ntaxa + Nnode. node represent parental branch. row corresponding tip initialized vector zeros, entry equal one. (Branch ending tip ^th lineage)","code":""},{"path":"/reference/init.incidence.matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialization for incidence matrix â init.incidence.matrix","title":"Initialization for incidence matrix â init.incidence.matrix","text":"init.incidence.matrix initialize matrix updated update.incidence.matrix computation incidence matrix incidence.matrix.","code":""},{"path":"/reference/init.incidence.matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialization for incidence matrix â init.incidence.matrix","text":"","code":"init.incidence.matrix(phy)"},{"path":"/reference/init.incidence.matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialization for incidence matrix â init.incidence.matrix","text":"phy Input tree.","code":""},{"path":"/reference/init.incidence.matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialization for incidence matrix â init.incidence.matrix","text":"Matrix Nnode rows ntaxa column.","code":""},{"path":"/reference/init.incidence.matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initialization for incidence matrix â init.incidence.matrix","text":"initialized matrix ntaxa column Nnode rows. node represent parental branch. row corresponding tip initialized vector zeros, entry equal one. (Branch ending tip ^th lineage)","code":""},{"path":"/reference/init.parsimonyCost.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialization for parsimonyCost. â init.parsimonyCost","title":"Initialization for parsimonyCost. â init.parsimonyCost","text":"init.parsimonyCost initialize (ntaxa + Nnode) x (nclus) matrix NAs everywhere, except tips.","code":""},{"path":"/reference/init.parsimonyCost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialization for parsimonyCost. â init.parsimonyCost","text":"","code":"init.parsimonyCost(phy, clusters)"},{"path":"/reference/init.parsimonyCost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialization for parsimonyCost. â init.parsimonyCost","text":"phy phylogenetic tree, class phylo. clusters vector clusters tips.","code":""},{"path":"/reference/init.parsimonyCost.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialization for parsimonyCost. â init.parsimonyCost","text":"(ntaxa + Nnode)x(nclus) matrix, ntaxa first lines initialized described.","code":""},{"path":"/reference/init.parsimonyCost.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initialization for parsimonyCost. â init.parsimonyCost","text":"tip state k, line-vector initialized follow : (1 - Ind(k=p)_{1<=p<=nclus})*Inf (Inf * 0 = 0)","code":""},{"path":"/reference/init.parsimonyNumber.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialization for parsimonyNumber. â init.parsimonyNumber","title":"Initialization for parsimonyNumber. â init.parsimonyNumber","text":"init.parsimonyNumber initialize (ntaxa + Nnode)x(nclus) matrix NAs everywhere, except tips.","code":""},{"path":"/reference/init.parsimonyNumber.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialization for parsimonyNumber. â init.parsimonyNumber","text":"","code":"init.parsimonyNumber(phy, clusters)"},{"path":"/reference/init.parsimonyNumber.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialization for parsimonyNumber. â init.parsimonyNumber","text":"phy phylogenetic tree. clusters vector clusters tips.","code":""},{"path":"/reference/init.parsimonyNumber.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialization for parsimonyNumber. â init.parsimonyNumber","text":"(ntaxa + Nnode)x(nclus) matrix, ntaxa first lines initialized described.","code":""},{"path":"/reference/init.parsimonyNumber.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initialization for parsimonyNumber. â init.parsimonyNumber","text":"tip state k, line-vector initialized follow : Ind(k=p)_{1<=p<=nclus}","code":""},{"path":"/reference/init.simulate.BM.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize BM â init.simulate.BM","title":"Initialize BM â init.simulate.BM","text":"Function used simulate BM initialization.","code":""},{"path":"/reference/init.simulate.BM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize BM â init.simulate.BM","text":"","code":"init.simulate.BM(phy, p, root.state, simulate_random, ...)"},{"path":"/reference/init.simulate.BM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize BM â init.simulate.BM","text":"phy Input tree. root.state (list) State root, : random : random state (TRUE) deterministic state (FALSE) value.root : deterministic, value character root exp.root : random, expectation character root var.root : random, variance character root (pxp matrix)","code":""},{"path":"/reference/init.simulate.BM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize BM â init.simulate.BM","text":"paramSimu Array p x Nnode x 2 (BM), filled NAs. Slice paramSimu[, ntaxa + 1, ] (array p x 2) initialized simulated states root expectations traits.","code":""},{"path":"/reference/init.simulate.OU.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize state and expectation matrices â init.simulate.OU","title":"Initialize state and expectation matrices â init.simulate.OU","text":"Function used simulate OU initialization.","code":""},{"path":"/reference/init.simulate.OU.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize state and expectation matrices â init.simulate.OU","text":"","code":"init.simulate.OU(phy, p, root.state, optimal.value, simulate_random, ...)"},{"path":"/reference/init.simulate.OU.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize state and expectation matrices â init.simulate.OU","text":"phy Input tree. p dimension trait simulated root.state (list): state root, : random : random state (TRUE) deterministic state (FALSE) value.root : deterministic, value character root exp.root : random, expectation character root var.root : random, variance character root (pxp matrix)","code":""},{"path":"/reference/init.simulate.OU.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize state and expectation matrices â init.simulate.OU","text":"paramSimu: array p x Nnode x 3, filled NAs. Slice paramSimu[, ntaxa + 1, ] (array p x 3) initialized simulated states, root expectations, optimal values traits.","code":""},{"path":"/reference/init.simulate.StateAndExp.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize state and expectation matrices â init.simulate.StateAndExp","title":"Initialize state and expectation matrices â init.simulate.StateAndExp","text":"Function used simulate BM/OU initializations.","code":""},{"path":"/reference/init.simulate.StateAndExp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize state and expectation matrices â init.simulate.StateAndExp","text":"","code":"init.simulate.StateAndExp(phy, p, root.state, simulate_random)"},{"path":"/reference/init.simulate.StateAndExp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize state and expectation matrices â init.simulate.StateAndExp","text":"phy Input tree. p dimension trait simulated root.state (list): state root, : random : random state (TRUE) deterministic state (FALSE) value.root : deterministic, value character root exp.root : random, expectation character root var.root : random, variance character root (pxp matrix)","code":""},{"path":"/reference/init.simulate.StateAndExp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize state and expectation matrices â init.simulate.StateAndExp","text":"paramSimu: array p x Nnode x 2 (BM), filled NAs. Slice paramSimu[, ntaxa + 1, ] (array p x 2) initialized simulated states root expectations traits.","code":""},{"path":"/reference/is.in.ranges.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether parameters are in ranges. â is.in.ranges","title":"Check whether parameters are in ranges. â is.in.ranges","text":"..ranges.params checks whether calculated parameters EM defined ranges.","code":""},{"path":"/reference/is.in.ranges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether parameters are in ranges. â is.in.ranges","text":"","code":"is.in.ranges(p, min, max)"},{"path":"/reference/is.in.ranges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether parameters are in ranges. â is.in.ranges","text":"p list parameters correct structure min list minimum values parameters max list maximum values parameters","code":""},{"path":"/reference/is.in.ranges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether parameters are in ranges. â is.in.ranges","text":"boolean","code":""},{"path":"/reference/is.in.ranges.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check whether parameters are in ranges. â is.in.ranges","text":"function used test convergence algorithm.","code":""},{"path":"/reference/lasso_regression_K_fixed.glmnet_multivariate.html","id":null,"dir":"Reference","previous_headings":"","what":"Do a lasso regression with the number of non-zero variables fixed. â lasso_regression_K_fixed.glmnet_multivariate","title":"Do a lasso regression with the number of non-zero variables fixed. â lasso_regression_K_fixed.glmnet_multivariate","text":"lasso_regression_K_fixed following regression : ||Yp-Xp.delta|| + lambda |delta|_1 using function glmnet::glmnet package glmnet, delta vector representing shifts occurring branches. Gauss lasso regression using function lm top . function used functions init.EM.lasso, segmentation.OU.specialCase.lasso, ...","code":""},{"path":"/reference/lasso_regression_K_fixed.glmnet_multivariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Do a lasso regression with the number of non-zero variables fixed. â lasso_regression_K_fixed.glmnet_multivariate","text":"","code":"lasso_regression_K_fixed.glmnet_multivariate(   Yp,   Xp,   K,   root = NULL,   penscale = rep(1, ncol(Xp)),   K_lag = 0 )"},{"path":"/reference/lasso_regression_K_fixed.glmnet_multivariate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Do a lasso regression with the number of non-zero variables fixed. â lasso_regression_K_fixed.glmnet_multivariate","text":"Yp (transformed) data Xp (transformed) matrix regression K number non-zero components allowed","code":""},{"path":"/reference/lasso_regression_K_fixed.glmnet_multivariate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Do a lasso regression with the number of non-zero variables fixed. â lasso_regression_K_fixed.glmnet_multivariate","text":"E0.gauss intercept (value root) shifts.gauss list shifts found branches","code":""},{"path":"/reference/lasso_regression_K_fixed.glmnet_multivariate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Do a lasso regression with the number of non-zero variables fixed. â lasso_regression_K_fixed.glmnet_multivariate","text":"lambda chosen delta right number non zero components. possible, either temporarily raise number shifts select shifts highest modulus, possible, throw error.","code":""},{"path":"/reference/log_likelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Log Likelihood of a fitted object â log_likelihood","title":"Log Likelihood of a fitted object â log_likelihood","text":"log_likelihood computes log likelihood parameters.","code":""},{"path":"/reference/log_likelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log Likelihood of a fitted object â log_likelihood","text":"","code":"log_likelihood(x, ...)  # S3 method for class 'params_process' log_likelihood(x, Y_data, phylo, ...)  # S3 method for class 'PhyloEM' log_likelihood(x, ...)"},{"path":"/reference/log_likelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log Likelihood of a fitted object â log_likelihood","text":"x object class params_process PhyloEM. ... PhyloEM object, arguments passed params_process.PhyloEM (choose parameters extract results, see documentation function). Y_data matrix data tips, size p x ntaxa. line trait, column tip. column names checked tip names tree. phylo phylogenetic tree, class phylo. incidence.matrix.full. Can specified avoid extra computations.","code":""},{"path":"/reference/log_likelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log Likelihood of a fitted object â log_likelihood","text":"log likelihood data provided parameters tree.","code":""},{"path":"/reference/log_likelihood.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Log Likelihood of a fitted object â log_likelihood","text":"log_likelihood(params_process): params_process object log_likelihood(PhyloEM): PhyloEM object","code":""},{"path":[]},{"path":"/reference/matrix_of_possibles.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute parent matrix from possibles daughter matrices. â matrix_of_possibles","title":"Compute parent matrix from possibles daughter matrices. â matrix_of_possibles","text":"matrix_of_possibles used function update.enumerate_parsimony compute, list possible matrices daughters, matrix node (group parent fixed).","code":""},{"path":"/reference/matrix_of_possibles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute parent matrix from possibles daughter matrices. â matrix_of_possibles","text":"","code":"matrix_of_possibles(matrices)"},{"path":"/reference/matrix_of_possibles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute parent matrix from possibles daughter matrices. â matrix_of_possibles","text":"matrices list matrices ndaughters entries.","code":""},{"path":"/reference/matrix_of_possibles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute parent matrix from possibles daughter matrices. â matrix_of_possibles","text":"Matrix possible regimes subtree bellow node parent.","code":""},{"path":"/reference/matrix_of_possibles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute parent matrix from possibles daughter matrices. â matrix_of_possibles","text":"function select possible combinations rows daughters, merge one using function merge_complementary_vectors.","code":""},{"path":"/reference/merge_alpha_grids.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge PhyloEM fits on various grids of alpha values â merge_alpha_grids","title":"Merge PhyloEM fits on various grids of alpha values â merge_alpha_grids","text":"merge_alpha_grids takes several fits PhyloEM, merge take account alpha values. can used break computations smaller chunks run independently.","code":""},{"path":"/reference/merge_alpha_grids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge PhyloEM fits on various grids of alpha values â merge_alpha_grids","text":"","code":"merge_alpha_grids(...)"},{"path":"/reference/merge_alpha_grids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge PhyloEM fits on various grids of alpha values â merge_alpha_grids","text":"... objects class PhyloEM fitted dataset parameters, different grids alpha values.","code":""},{"path":"/reference/merge_alpha_grids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge PhyloEM fits on various grids of alpha values â merge_alpha_grids","text":"object class PhyloEM, result merge.","code":""},{"path":"/reference/merge_alpha_grids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge PhyloEM fits on various grids of alpha values â merge_alpha_grids","text":"","code":"if (FALSE) { # \\dontrun{ ## Load Data data(monkeys) ## First fit with coarse grid res1 <- PhyloEM(Y_data = monkeys$dat,                 phylo = monkeys$phy,                 process = \"scOU\",                 random.root = TRUE,                 stationary.root = TRUE,                 K_max = 10,                 alpha = c(0.2, 0.3),                 parallel_alpha = TRUE,                 Ncores = 2) ## Second fit with finer grid res2 <- PhyloEM(Y_data = monkeys$dat,                 phylo = monkeys$phy,                 process = \"scOU\",                 random.root = TRUE,                 stationary.root = TRUE,                 K_max = 10,                 alpha = c(0.22, 0.24),                 parallel_alpha = TRUE,                 Ncores = 2) ## Thrid fit with redundancies res3 <- PhyloEM(Y_data = monkeys$dat,                 phylo = monkeys$phy,                 process = \"scOU\",                 random.root = TRUE,                 stationary.root = TRUE,                 K_max = 10,                 alpha = c(0.26, 0.3),                 parallel_alpha = TRUE,                 Ncores = 2)  ## Merge the three res_merge <- merge_alpha_grids(res1, res2, res3) ## Plot the selected result plot(res_merge) ## Plot the model selection criterion plot_criterion(res_merge) } # }"},{"path":"/reference/merge_complementary_vectors.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge several complementary vectors into one. â merge_complementary_vectors","title":"Merge several complementary vectors into one. â merge_complementary_vectors","text":"merge_complementary_vectors take several vectors complementary entries (.e, vector length, one vector non NA value entry), merge one.","code":""},{"path":"/reference/merge_complementary_vectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge several complementary vectors into one. â merge_complementary_vectors","text":"","code":"merge_complementary_vectors(comb, mat)"},{"path":"/reference/merge_complementary_vectors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge several complementary vectors into one. â merge_complementary_vectors","text":"comb vector giving rows kept. mat matrix containing vectors rows.","code":""},{"path":"/reference/merge_complementary_vectors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge several complementary vectors into one. â merge_complementary_vectors","text":"row vector size entry matrix.","code":""},{"path":"/reference/merge_complementary_vectors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Merge several complementary vectors into one. â merge_complementary_vectors","text":"vectors selected entry matrix comb. entry, vectors added using function add_complementary.","code":""},{"path":"/reference/merge_params_independent.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge a list of independent parameters into into one parameter â merge_params_independent","title":"Merge a list of independent parameters into into one parameter â merge_params_independent","text":"merge_params_independent merges list p params objects one param object dimension p reverse operation done split_params_independent","code":""},{"path":"/reference/merge_params_independent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge a list of independent parameters into into one parameter â merge_params_independent","text":"","code":"merge_params_independent(params_split)"},{"path":"/reference/merge_params_independent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge a list of independent parameters into into one parameter â merge_params_independent","text":"params_split list parameters","code":""},{"path":"/reference/merge_params_independent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge a list of independent parameters into into one parameter â merge_params_independent","text":"parameter object","code":""},{"path":"/reference/merge_rotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge fits from independent runs of PhyloEM. â merge_rotations","title":"Merge fits from independent runs of PhyloEM. â merge_rotations","text":"merge_rotations takes several fits PhyloEM, merge according best score (maximum likelihood least squares). number shifts, datasets needs equal rotation. tested thanks QR decomposition, see function find_rotation.","code":""},{"path":"/reference/merge_rotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge fits from independent runs of PhyloEM. â merge_rotations","text":"","code":"merge_rotations(..., method.selection = NULL, tol = NULL)"},{"path":"/reference/merge_rotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge fits from independent runs of PhyloEM. â merge_rotations","text":"... objects class PhyloEM fitted datasets equal rotation. method.selection (optional) selection method applied merged fit. See params_process.PhyloEM. tol (optional) relative numerical tolerance. See find_rotation.","code":""},{"path":"/reference/merge_rotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge fits from independent runs of PhyloEM. â merge_rotations","text":"object class PhyloEM, result merge.","code":""},{"path":"/reference/merge_rotations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge fits from independent runs of PhyloEM. â merge_rotations","text":"","code":"if (FALSE) { # \\dontrun{ ## Load Data data(monkeys) ## Run method # Note: use more alpha values for better results. res <- PhyloEM(Y_data = monkeys$dat,        ## data                phylo = monkeys$phy,         ## phylogeny                process = \"scOU\",            ## scalar OU                random.root = TRUE,          ## root is stationary                stationary.root = TRUE,                K_max = 10,                  ## maximal number of shifts                nbr_alpha = 4,               ## number of alpha values                parallel_alpha = TRUE,       ## parallelize on alpha values                Ncores = 2) ## Rotate dataset rot <- matrix(c(cos(pi/4), -sin(pi/4), sin(pi/4), cos(pi/4)), nrow= 2, ncol = 2) Yrot <- t(rot) %*% monkeys$dat rownames(Yrot) <- rownames(monkeys$dat) ## Fit rotated dataset # Note: use more alpha values for better results. res_rot <- PhyloEM(Y_data = Yrot,               ## rotated data                    phylo = monkeys$phy,                             process = \"scOU\",                                random.root = TRUE,                              stationary.root = TRUE,                    K_max = 10,                                      nbr_alpha = 4,                                   parallel_alpha = TRUE,                           Ncores = 2) ## Merge the two res_merge <- merge_rotations(res, res_rot) ## Plot the selected result plot(res_merge) ## Plot the model selection criterion plot_criterion(res_merge) } # }"},{"path":"/reference/model_selection.html","id":null,"dir":"Reference","previous_headings":"","what":"Model Selection of a fitted object â model_selection","title":"Model Selection of a fitted object â model_selection","text":"model_selection model selection fitted PhyloEM object, returns fitted object.","code":""},{"path":"/reference/model_selection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model Selection of a fitted object â model_selection","text":"","code":"model_selection(x, ...)  # S3 method for class 'PhyloEM' model_selection(   x,   method.selection = c(\"LINselect\", \"DDSE\", \"Djump\"),   C.BM1 = 0.1,   C.BM2 = 2.5,   C.LINselect = 1.1,   independent = FALSE,   ... )"},{"path":"/reference/model_selection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model Selection of a fitted object â model_selection","text":"x fitted PhyloEM object ... arguments passed estimateEM, including tolerance parameters stopping criteria, maximal number iterations, etc. method.selection Method selection used. Several ones can used time. One \"LINselect\" Baraud Giraud Huet LINselect method; \"DDSE\" Slope Heuristic \"Djump\" Jump Heuristic, last two based BirgÃ© Massart method. C.BM1 Multiplying constant used BigeMassart1 method. Need positive. Default 0.1. C.BM2 Multiplying constant used BigeMassart2 method. Default 2.5. C.LINselect Multiplying constant used LINselect method. Need greater 1. Default 1.1. independent trait assumed independent one another? Default FALSE. OU multivariate setting works TRUE.","code":""},{"path":"/reference/model_selection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model Selection of a fitted object â model_selection","text":"object, slot corresponding model selection used. See function params_process.PhyloEM retrieve selected parameters.","code":""},{"path":"/reference/model_selection.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Model Selection of a fitted object â model_selection","text":"model_selection(PhyloEM): PhyloEM object","code":""},{"path":[]},{"path":"/reference/monkeys.html","id":null,"dir":"Reference","previous_headings":"","what":"New World Monkeys dataset â monkeys","title":"New World Monkeys dataset â monkeys","text":"Morphometric dataset phylogeny brain shape variation 50 species New World monkeys (platyrrhine).","code":""},{"path":"/reference/monkeys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"New World Monkeys dataset â monkeys","text":"","code":"monkeys"},{"path":"/reference/monkeys.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"New World Monkeys dataset â monkeys","text":"list containing two objects: phy Phylogenetic tree platyrrhine species, pruned match   species morphometric dataset dat First two PC scores PCA species-averaged Procrustes   coordinates","code":""},{"path":"/reference/monkeys.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"New World Monkeys dataset â monkeys","text":"Aristide, L., dos Reis, S. F., Machado, . C., Lima, ., Lopes, R. T. & Perez, S. . (2016). Brain shape convergence adaptive radiation New World monkeys. Proceedings National Academy Sciences, 113(8), 2158â2163. http://doi.org/10.1073/pnas.1514473113","code":""},{"path":"/reference/node_optimal_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Computation of the optimal values at nodes and tips. â node_optimal_values","title":"Computation of the optimal values at nodes and tips. â node_optimal_values","text":"compute_betas_from_shifts computes optimal values nodes tips tree, given value root list shifts occurring tree. assumes OU model.","code":""},{"path":"/reference/node_optimal_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computation of the optimal values at nodes and tips. â node_optimal_values","text":"","code":"node_optimal_values(param, phylo)"},{"path":"/reference/node_optimal_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computation of the optimal values at nodes and tips. â node_optimal_values","text":"param object class params_process. phylo phylogenetic tree, class phylo.","code":""},{"path":"/reference/node_optimal_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computation of the optimal values at nodes and tips. â node_optimal_values","text":"Matrix size ntraits  x (ntaxa + Nnode) optimal values node tips tree. Column names correspond number node phylo object.","code":""},{"path":"/reference/node_optimal_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computation of the optimal values at nodes and tips. â node_optimal_values","text":"","code":"set.seed(1792) ntaxa = 10 tree <- rphylo(ntaxa, 1, 0.1) # parameters of the process par <- params_process(\"BM\",                             ## Process                       p = 2,                            ## Dimension                       variance = diag(0.5, 2, 2) + 0.5, ## Rate matrix                       edges = c(4, 10, 15),             ## Positions of the shifts                       values = cbind(c(5, 4),           ## Values of the shifts                                      c(-4, -5),                                      c(5, -3))) plot(par, phylo = tree, traits = 1, value_in_box = TRUE,      shifts_bg = \"white\", root_bg = \"white\", ancestral_as_shift = TRUE, root_adj = 5) nodelabels()  node_optimal_values(par, tree) #>       1 2  3  4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #> [1,] -4 0  5 -4 0 5 5 5 0  0  0  0  0  0 -4  5  0  0  5 #> [2,] -5 0 -3 -5 0 4 4 4 0  0  0  0  0  0 -5  4  0  0  4"},{"path":"/reference/params_BM.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an object params_process for a BM â params_BM","title":"Create an object params_process for a BM â params_BM","text":"params_BM creates coherent object params_process user provided values parameters. Non specified parameters set default values.","code":""},{"path":"/reference/params_BM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an object params_process for a BM â params_BM","text":"","code":"params_BM(   p = 1,   variance = diag(1, p, p),   random = FALSE,   value.root = rep(0, p),   exp.root = rep(0, p),   var.root = diag(1, p, p),   edges = NULL,   values = matrix(0, p, length(edges)),   relativeTimes = NULL,   nbr_of_shifts = length(edges),   phylo = NULL,   sBM_variance = FALSE,   trait_names = NULL,   ... )"},{"path":"/reference/params_BM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an object params_process for a BM â params_BM","text":"p dimension (number traits) parameters. Default 1. variance variance (rate matrix) BM. Default diag(1, p, p). random whether root BM random (TRUE) fixed (FALSE). Default FALSE. value.root random=FALSE, root value. Default 0. exp.root random=TRUE, root expectation. Default 0. var.root random=TRUE, root variance. Default diag(1, p, p). edges vector edges shifts occur. Default NULL (shift). values matrix shift values, p lines many columns number shifts. column p values one shift. Default matrix(0, p, length(edges)). relativeTimes (unused) relative position shift branch, 0 (beginning branch) 1 (end branch). Default 0. nbr_of_shifts number shifts use (randomly drawn). Use edges specified. case, phylogenetic tree must provided (allow random sampling edges). phylo phylogenetic tree class phylo. Needed shifts edges specified, sBM_variance=TRUE. Default NULL. sBM_variance=TRUE, must specified value root branch length (slot root.edge). sBM_variance root random, depend length root edge ? (equivalent purposes rescaled OU). Default FALSE. TRUE, phylogenetic tree root edge length must provided. trait_names vector trait names values. Must length p. ... unused.","code":""},{"path":"/reference/params_BM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an object params_process for a BM â params_BM","text":"object class params_process.","code":""},{"path":[]},{"path":"/reference/params_OU.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an object params_process for an OU â params_OU","title":"Create an object params_process for an OU â params_OU","text":"params_OU creates coherent object params_process user provided values parameters. Non specified parameters set default values.","code":""},{"path":"/reference/params_OU.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an object params_process for an OU â params_OU","text":"","code":"params_OU(   p = 1,   variance = diag(1, p, p),   selection.strength = diag(1, p, p),   optimal.value = rep(0, p),   random = TRUE,   stationary.root = TRUE,   value.root = rep(0, p),   exp.root = rep(0, p),   var.root = diag(1, p, p),   edges = NULL,   values = matrix(0, p, length(edges)),   relativeTimes = NULL,   nbr_of_shifts = length(edges),   phylo = NULL,   trait_names = NULL,   ... )"},{"path":"/reference/params_OU.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an object params_process for an OU â params_OU","text":"p dimension (number traits) parameters. Default 1. variance variance (rate matrix) BM. Default diag(1, p, p). selection.strength selection strength matrix. Default diag(1, p, p). optimal.value vector optimal values root. Default rep(0, p). random whether root OU random (TRUE) fixed (FALSE). Default TRUE. stationary.root whether root OU stationary (TRUE) . Default TRUE. value.root random=FALSE, root value. Default 0. exp.root random=TRUE, root expectation. Default 0. stationary.root=TRUE, default optimal.value. var.root random=TRUE, root variance. Default diag(1, p, p). stationary.root=TRUE, default stationary variance computed variance selection.strength, see function compute_stationary_variance. edges vector edges shifts occur. Default NULL (shift). values matrix shift values, p lines many columns number shifts. column p values one shift. Default matrix(0, p, length(edges)). relativeTimes (unused) relative position shift branch, 0 (beginning branch) 1 (end branch). Default 0. nbr_of_shifts number shifts use (randomly drawn). Use edges specified. case, phylogenetic tree must provided (allow random sampling edges). phylo phylogenetic tree class phylo. Needed shifts edges specified. trait_names vector trait names values. Must length p. ... unused.","code":""},{"path":"/reference/params_OU.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an object params_process for an OU â params_OU","text":"object class params_process.","code":""},{"path":[]},{"path":"/reference/params_process.PhyloEM.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter estimates â params_process.PhyloEM","title":"Parameter estimates â params_process.PhyloEM","text":"params takes object class PhyloEM, returns inferred parameters process.","code":""},{"path":"/reference/params_process.PhyloEM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter estimates â params_process.PhyloEM","text":"","code":"# S3 method for class 'PhyloEM' params_process(   x,   method.selection = NULL,   K = NULL,   alpha = NULL,   rBM = FALSE,   init = FALSE,   ... )"},{"path":"/reference/params_process.PhyloEM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter estimates â params_process.PhyloEM","text":"x object class PhyloEM method.selection (optional) method selection used. One \"LINselect\", \"DDSE\", \"Djump\". Default \"LINselect\". K (optional) integer giving number shifts retrieve parameters. Default NULL (automatically selected number shifts, see method.selection argument). alpha (optional) value alpha retrieve parameters. Can (un-ambiguous) estimation true value. specified, K must precised . Default NULL (automatically selected value, see method.selection argument). rBM (optional) TRUE, process \"scOU\", returns raw parameters BM re-scaled tree. Default FALSE, except selection strength negative (see doc PhyloEM explanation particular case). init (optional) TRUE, gives parameters initialization EM. Default FALSE. effect K specified. ... unused.","code":""},{"path":"/reference/params_process.PhyloEM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter estimates â params_process.PhyloEM","text":"object class params_process.","code":""},{"path":[]},{"path":"/reference/params_process.character.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an object params_process â params_process.character","title":"Create an object params_process â params_process.character","text":"params_process creates coherent object params_process user provided values parameters.","code":""},{"path":"/reference/params_process.character.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an object params_process â params_process.character","text":"","code":"# S3 method for class 'character' params_process(x, ...)"},{"path":"/reference/params_process.character.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an object params_process â params_process.character","text":"x one \"BM\" \"OU\" ... specified parameters, see functions params_BM params_OU details.","code":""},{"path":"/reference/params_process.character.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an object params_process â params_process.character","text":"object class params_process.","code":""},{"path":[]},{"path":"/reference/params_process.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an object params_process â params_process","title":"Create an object params_process â params_process","text":"params_process creates extracts set parameters class params_process.","code":""},{"path":"/reference/params_process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an object params_process â params_process","text":"","code":"params_process(x, ...)"},{"path":"/reference/params_process.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an object params_process â params_process","text":"x S3 object. ... arguments passed specific method.","code":""},{"path":"/reference/params_process.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an object params_process â params_process","text":"S3 object class params_process. essentially list containing following entries: process model used. One \"BM\" (full BM model, univariate multivariate); \"OU\" (full OU model, univariate multivariate); \"scOU\" (\"scalar OU\" model). p Dimension trait. root.state List describing state root, : random random state (TRUE) deterministic state (FALSE) value.root deterministic, value character root exp.root random, expectation character root var.root random, variance character root (pxp matrix) shifts List position values shifts: edges vector K id edges shifts values matrix p x K values shifts edges   (one column = one shift) relativeTimes vector dimension K relative time shift parent node edges variance Variance-covariance matrix size p x p. selection.strength Matrix selection strength size p x p (OU). optimal.value Vector p optimal values root (OU).","code":""},{"path":[]},{"path":"/reference/parsimonyCost.html","id":null,"dir":"Reference","previous_headings":"","what":"Minimal number of shifts needed to get a clustering. â parsimonyCost","title":"Minimal number of shifts needed to get a clustering. â parsimonyCost","text":"parsimonyCost implementation Sankoff algorithm, cost transition two state always one. used functions parsimonyNumber enumerate_parsimony count enumerate parsimonious solutions given one clustering tips.","code":""},{"path":"/reference/parsimonyCost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Minimal number of shifts needed to get a clustering. â parsimonyCost","text":"","code":"parsimonyCost(phylo, clusters = rep(1, length(phylo$tip.label)))"},{"path":"/reference/parsimonyCost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Minimal number of shifts needed to get a clustering. â parsimonyCost","text":"phylo phylogenetic tree, class phylo. clusters vector clusters tips. (Default tips single group).","code":""},{"path":"/reference/parsimonyCost.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Minimal number of shifts needed to get a clustering. â parsimonyCost","text":"S3 class \"parsimonyCost\" containing (ntaxa + Nnode) x (nclus) matrix total number shifts needed get clustering, starting node state k. cost can extract subtree function extract.parsimonyCost.","code":""},{"path":[]},{"path":"/reference/parsimonyCost.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Minimal number of shifts needed to get a clustering. â parsimonyCost","text":"","code":"tree <- read.tree(text=\"(((1,1),2),2);\") plot(tree); nodelabels()  clusters <- c(1, 1, 2, 2) costs <- parsimonyCost(tree, clusters) costs #>  #> Parsimony cost: 1. #>   ## Extract the parsimony cost at the root extract(costs) #> [1] 1  ## Extract the cost for the sub-tree below node 7 extract(costs, 7) #> [1] 0"},{"path":"/reference/parsimonyNumber.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of equivalent parsimonious allocations. â parsimonyNumber","title":"Number of equivalent parsimonious allocations. â parsimonyNumber","text":"parsimonyNumber aims finding number equivalent allocations shifts tree, .e allocations parsimonious compatible given clustering tips.","code":""},{"path":"/reference/parsimonyNumber.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of equivalent parsimonious allocations. â parsimonyNumber","text":"","code":"parsimonyNumber(phylo, clusters = rep(1, length(phylo$tip.label)))"},{"path":"/reference/parsimonyNumber.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of equivalent parsimonious allocations. â parsimonyNumber","text":"phylo phylogenetic tree, class phylo. clusters vector clusters tips. Default tips one single cluster.","code":""},{"path":"/reference/parsimonyNumber.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of equivalent parsimonious allocations. â parsimonyNumber","text":"object S3 class \"parsimonyNumber\" : nbrReconstructions (ntaxa + Nnode) x (nclus)  matrix locally parsimonious solutions starting cluster k  given node costReconstructions object class \"parsimonyCost\",  result function parsimonyCost.","code":""},{"path":"/reference/parsimonyNumber.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Number of equivalent parsimonious allocations. â parsimonyNumber","text":"function recursion tree. function extract.parsimonyNumber gives result sought subtree. matrix costs states (number shifts) also required, computed function parsimonyCost.","code":""},{"path":[]},{"path":"/reference/parsimonyNumber.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of equivalent parsimonious allocations. â parsimonyNumber","text":"","code":"tree <- read.tree(text=\"(((0,1),2),2);\") plot(tree); nodelabels()  clusters <- c(0, 1, 2, 2) n_sols <- parsimonyNumber(tree, clusters) n_sols #>  #> Number of parsimonious solutions: 3. #>   ## Extract the number of parsimonious solutions at the root extract(n_sols) #> [1] 3  ## Extract the cost of the solutions from the root extract(n_sols, what = \"cost\") #> [1] 2 extract(parsimonyCost(tree, clusters)) # same, more efficient #> [1] 2  ## Extract for the sub-tree below node 7 extract(n_sols, 7) # Result: 2 (the ancestral state is either \"0\" or \"1\").  #> [1] 2"},{"path":"/reference/partitionsNumber.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of different models â partitionsNumber","title":"Number of different models â partitionsNumber","text":"partitionsNumber computes number different models given number shifts K. also number colorings tips tree npart = K + 1 colors.","code":""},{"path":"/reference/partitionsNumber.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of different models â partitionsNumber","text":"","code":"partitionsNumber(phylo, npart)"},{"path":"/reference/partitionsNumber.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of different models â partitionsNumber","text":"phylo phylogenetic tree class phylo. npart numbers partitions (colors) allowed tips. number shifts plus one (npart = K + 1).","code":""},{"path":"/reference/partitionsNumber.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of different models â partitionsNumber","text":"object class partitionsNumber. made matrix (Nnode + ntaxa) rows (2*npart) columns. column contains two vectors: k=1:npart contains number partitions k groups compatible tree shift process; k=(npart+1):2*npart, contains number \"marked\" partitions (k-npart) groups compatible tree shift process. actual number can extracted function extract.partitionsNumber (see examples ).","code":""},{"path":[]},{"path":"/reference/partitionsNumber.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of different models â partitionsNumber","text":"","code":"if (requireNamespace(\"combinat\", quietly = TRUE)) {   npart <- 8 # number of colors at the tips allowed   tree <- read.tree(text=\"(A,(A,(A,A,A),A,A));\") # a tree with polytomies   plot(tree)   parts_num <- partitionsNumber(tree, npart)   parts_num      ## Number of possible colorings of the tips in npart colors   extract(parts_num)      ## Get all the solutions for colorings with 1 to nparts colors   extract(parts_num, npart = 1:npart)      ## Number of possible colorings of the tips in npart colors   ## For the sub-tree starting at node 17   extract(parts_num, node = 10)      ## Number of possible colorings of the tips in npart colors   ## with one marked color   extract(parts_num, marked = TRUE) }  #> [1] 0"},{"path":"/reference/penalty_BaraudGiraudHuet_likelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Penalty function type Baraud Giraud Huet. â penalty_BaraudGiraudHuet_likelihood","title":"Penalty function type Baraud Giraud Huet. â penalty_BaraudGiraudHuet_likelihood","text":"penalty_BaraudGiraudHuet_likelihood penalty defined : pen' = ntaxa * log(1 + pen/(ntaxa - K)) pen = C * (ntaxa - K)/(ntaxa - K - 1) * EDkhi[K + 1; ntaxa - K - 1; exp(-Delta_K)/(K + 1)] Delta = log(model_complexity) + log(K + 1) sum(exp(-Delta_K)) < infty.","code":""},{"path":"/reference/penalty_BaraudGiraudHuet_likelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Penalty function type Baraud Giraud Huet. â penalty_BaraudGiraudHuet_likelihood","text":"","code":"penalty_BaraudGiraudHuet_likelihood(K, model_complexity, ntaxa, C = 1.1)"},{"path":"/reference/penalty_BaraudGiraudHuet_likelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Penalty function type Baraud Giraud Huet. â penalty_BaraudGiraudHuet_likelihood","text":"K dimension model. model_complexity complexity set models dimension K. ntaxa number tips. C constant, C > 1. Default C = 1.1 (suggested Baraud Giraud Huet (2009))","code":""},{"path":"/reference/penalty_BaraudGiraudHuet_likelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Penalty function type Baraud Giraud Huet. â penalty_BaraudGiraudHuet_likelihood","text":"value penalty.","code":""},{"path":"/reference/penalty_BaraudGiraudHuet_likelihood.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Penalty function type Baraud Giraud Huet. â penalty_BaraudGiraudHuet_likelihood","text":"See Baraud Giraud Huet (2009, 2011). Must applied log-likelihood criterion. Function pen computed using function penalty package LINselect.","code":""},{"path":[]},{"path":"/reference/penalty_BirgeMassart_shape1.html","id":null,"dir":"Reference","previous_headings":"","what":"Penalty function type BirgÃ©-Massart 1 â penalty_BirgeMassart_shape1","title":"Penalty function type BirgÃ©-Massart 1 â penalty_BirgeMassart_shape1","text":"penalty_BirgeMassart_shape1 penalty shape defined : pen_shape = (sqrt(K) + sqrt(2 * K * L_K))^2 sum(exp(- K * L_K)) < infty : L_K = B + 1/K * log(model_complexity).","code":""},{"path":"/reference/penalty_BirgeMassart_shape1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Penalty function type BirgÃ©-Massart 1 â penalty_BirgeMassart_shape1","text":"","code":"penalty_BirgeMassart_shape1(K, p, model_complexity, B = 0.1)"},{"path":"/reference/penalty_BirgeMassart_shape1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Penalty function type BirgÃ©-Massart 1 â penalty_BirgeMassart_shape1","text":"K number shifts p dimension data model_complexity complexity set models dimension K B non-negative constant. Default 0.1 (suggested Cleynen & Lebarbier 2015)","code":""},{"path":"/reference/penalty_BirgeMassart_shape1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Penalty function type BirgÃ©-Massart 1 â penalty_BirgeMassart_shape1","text":"value penalty","code":""},{"path":"/reference/penalty_BirgeMassart_shape1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Penalty function type BirgÃ©-Massart 1 â penalty_BirgeMassart_shape1","text":"See BirgÃ© Massart (2001). Must applied least-square criterion. penalty calibrated using slope heuristic.","code":""},{"path":[]},{"path":"/reference/penalty_BirgeMassart_shape2.html","id":null,"dir":"Reference","previous_headings":"","what":"Penalty function type BirgÃ©-Massart 2 â penalty_BirgeMassart_shape2","title":"Penalty function type BirgÃ©-Massart 2 â penalty_BirgeMassart_shape2","text":"penalty_BirgeMassart_shape2 penalty shape defined : pen_shape = C*K_try + log(model_complexity). dominates penalty defined penalty_BirgeMassart_shape1.","code":""},{"path":"/reference/penalty_BirgeMassart_shape2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Penalty function type BirgÃ©-Massart 2 â penalty_BirgeMassart_shape2","text":"","code":"penalty_BirgeMassart_shape2(K, p, model_complexity, C = 2.5)"},{"path":"/reference/penalty_BirgeMassart_shape2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Penalty function type BirgÃ©-Massart 2 â penalty_BirgeMassart_shape2","text":"K number shifts p dimension data model_complexity complexity set models dimension K. C non-negative constant. Default 2.5 (suggested Lebarbier 2005)","code":""},{"path":"/reference/penalty_BirgeMassart_shape2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Penalty function type BirgÃ©-Massart 2 â penalty_BirgeMassart_shape2","text":"value penalty.","code":""},{"path":"/reference/penalty_BirgeMassart_shape2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Penalty function type BirgÃ©-Massart 2 â penalty_BirgeMassart_shape2","text":"See BirgÃ© Massart (2001). Must applied least-square criterion. penalty calibrated using slope heuristic.","code":""},{"path":[]},{"path":"/reference/penalty_pBIC.html","id":null,"dir":"Reference","previous_headings":"","what":"Penalty function type pBIC â penalty_pBIC","title":"Penalty function type pBIC â penalty_pBIC","text":"penalty_pBIC_scalarOU pBIC.","code":""},{"path":"/reference/penalty_pBIC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Penalty function type pBIC â penalty_pBIC","text":"","code":"penalty_pBIC(   all_params,   model_complexity,   independent,   tree,   times_shared,   distances_phylo,   T_tree,   p,   K,   ntaxa,   process )"},{"path":"/reference/penalty_pBIC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Penalty function type pBIC â penalty_pBIC","text":"model_complexity complexity set models dimension K. K dimension model. ntaxa number tips.","code":""},{"path":"/reference/penalty_pBIC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Penalty function type pBIC â penalty_pBIC","text":"value penalty.","code":""},{"path":[]},{"path":"/reference/plot.PhyloEM.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot for class PhyloEM â plot.PhyloEM","title":"Plot for class PhyloEM â plot.PhyloEM","text":"function takes object class PhyloEM, result function PhyloEM, plots result inference.","code":""},{"path":"/reference/plot.PhyloEM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot for class PhyloEM â plot.PhyloEM","text":"","code":"# S3 method for class 'PhyloEM' plot(   x,   traits = 1:(x$p),   params = NULL,   method.selection = NULL,   automatic_colors = TRUE,   color_characters = \"black\",   color_edges = \"black\",   plot_ancestral_states = FALSE,   name_trait = \"Trait Value\",   imposed_scale,   ancestral_cex = 2,   ancestral_pch = 19,   value_in_box = FALSE,   ancestral_as_shift = FALSE,   shifts_cex = 0.6,   shifts_bg = \"chocolate4\",   root_bg = \"chocolate4\",   shifts_adj = 0,   root_adj = 1,   color_shifts_regimes = FALSE,   regime_boxes = FALSE,   alpha_border = 70,   show.tip.label = FALSE,   label_cex = 0.5,   label_font = 1,   label_offset = 0,   axis_cex = 0.7,   axis_las = 0,   show_axis_traits = TRUE,   edge.width = 1,   margin_plot = NULL,   gray_scale = FALSE,   root.edge = TRUE,   ... )"},{"path":"/reference/plot.PhyloEM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot for class PhyloEM â plot.PhyloEM","text":"x object class PhyloEM, result function PhyloEM. traits vector integers giving numbers trait plotted. Default 1:p (traits). params (optional) user-specified parameters. Must class params_process. left blank, extracted using method.selection argument (see ). method.selection select parameters plot. One \"LINselect\", \"DDSE\", \"Djump\". Default \"LINselect\". See params_process.PhyloEM. automatic_colors whether color edges automatically according regimes. Default TRUE. FALSE, colors can manually specified arguments color_characters colro_edges (see ). color_characters automatic_colors=FALSE, vector colors tips tree. color_edges automatic_colors=FALSE, vector colors edges tree. plot_ancestral_states whether plot ancestral traits inferred internal nodes tree. available one trait plotted. Default FALSE. name_trait name trait scale bar ancestral states plotting. Default \"Trait Value\". imposed_scale plot_ancestral_states=TRUE, vector specifying imposed scale ancestral states plotting. Useful make comparisons. Default plotted trait. ancestral_cex plot_ancestral_states=TRUE, size ancestral states tree. Default 2. ancestral_pch plot_ancestral_states=TRUE, symbol used ancestral states. Default circles (pch=19). value_in_box whether plot value shift box edges. available one trait plotted. Can difficult read big trees. size text boxes controlled parameter. Default FALSE. ancestral_as_shift whether represent ancestral value root ancestral shift root edge. Default FALSE. shifts_cex (see ). shifts_cex value_in_box=TRUE, size text boxes. Default 0.8. shifts_bg value_in_box=TRUE, background color boxes. root_bg value_in_box=TRUE ancestral_as_shift=TRUE, background color ancestral box. shifts_adj adj parameter shifts position edges. Default 0 (beginning edge). root_adj ancestral_as_shift=TRUE, adj parameter ancestral value position root edge. Default 1. color_shifts_regimes whether color shift according regime (default color edge ). Default FALSE. regime_boxes whether draw box showing tips given. transparency border box controlled parameter alpha_border (see ). alpha_border regime_boxes=TRUE, alpha parameter border box. Default 70. show.tip.label whether show tip labels. Default FALSE. label_cex show.tip.label=TRUE, size labels. Default 0.5. label_font show.tip.label=TRUE, font labels (see par). label_offset show.tip.label=TRUE, size offset tree labels. Default 0. axis_cex cex label values plot. Default 0.7. axis_las las label values plot. Default 0 (see par). show_axis_traits control whether trait values axis plotted (default TRUE). edge.width width edge. Default 1. margin_plot vector giving margin around plot. Default c(0, 0, 0, 0). gray_scale TRUE, colors replaced gray scale. Default FALSE. root.edge logical indicating whether draw root edge (defaults TRUE) ... arguments passed plot.phylo.","code":""},{"path":[]},{"path":"/reference/plot.enumerate_parsimony.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot all the equivalent solutions. â plot.enumerate_parsimony","title":"Plot all the equivalent solutions. â plot.enumerate_parsimony","text":"plot.enumerate_parsimony plots representation equivalent solutions.","code":""},{"path":"/reference/plot.enumerate_parsimony.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot all the equivalent solutions. â plot.enumerate_parsimony","text":"","code":"# S3 method for class 'enumerate_parsimony' plot(x, numbering = FALSE, nbr_col = 3, ...)"},{"path":"/reference/plot.enumerate_parsimony.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot all the equivalent solutions. â plot.enumerate_parsimony","text":"x object class enumerate_parsimony, result function enumerate_parsimony numbering whether number solutions. Default FALSE. nbr_col number columns display plot. Default 3. ... arguments passed plot.phylo nodelabels.","code":""},{"path":"/reference/plot.enumerate_parsimony.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot all the equivalent solutions. â plot.enumerate_parsimony","text":"plot equivalent shifts allocations.","code":""},{"path":"/reference/plot.enumerate_parsimony.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot all the equivalent solutions. â plot.enumerate_parsimony","text":"function uses functions plot.phylo nodelabels actual plotting trees.","code":""},{"path":[]},{"path":"/reference/plot.equivalent_shifts.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot all the equivalent solutions. â plot.equivalent_shifts","title":"Plot all the equivalent solutions. â plot.equivalent_shifts","text":"plot.equivalent_shifts plots representation equivalent shifts allocations, representation shifts values, coloration branches term regimes.","code":""},{"path":"/reference/plot.equivalent_shifts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot all the equivalent solutions. â plot.equivalent_shifts","text":"","code":"# S3 method for class 'equivalent_shifts' plot(   x,   trait = 1,   show_shifts_values = TRUE,   numbering = FALSE,   colors_tips = NULL,   nbr_col = 3,   gray_scale = FALSE,   edge.width = 2,   shifts_cex = 1.2,   ... )"},{"path":"/reference/plot.equivalent_shifts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot all the equivalent solutions. â plot.equivalent_shifts","text":"x object class equivalent_shifts, result function equivalent_shifts trait (integer) trait plotted, multivariate. Default 1. show_shifts_values whether show equivalent shifts values . Default FALSE. numbering whether number solutions. Default FALSE. colors_tips user-provided colors tips tree. vector vector many colors tips. automatically computed provided. nbr_col number columns display plot. Default 3. gray_scale TRUE, colors replaced gray scale. Default FALSE. edge.width width edge. Default 1. shifts_cex value_in_box=TRUE, size text boxes. Default 0.8. ... arguments passed plot.phylo.","code":""},{"path":"/reference/plot.equivalent_shifts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot all the equivalent solutions. â plot.equivalent_shifts","text":"plot equivalent shifts allocations.","code":""},{"path":"/reference/plot.equivalent_shifts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot all the equivalent solutions. â plot.equivalent_shifts","text":"function uses function plot.phylo actual plotting trees.","code":""},{"path":[]},{"path":"/reference/plot.params_process.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot for class simul_process â plot.params_process","title":"Plot for class simul_process â plot.params_process","text":"function takes object class params_process, plots along data tips tree.","code":""},{"path":"/reference/plot.params_process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot for class simul_process â plot.params_process","text":"","code":"# S3 method for class 'params_process' plot(   x,   phylo,   data = NULL,   traits,   automatic_colors = TRUE,   color_characters = \"black\",   color_edges = \"black\",   plot_ancestral_states = FALSE,   ancestral_states = NULL,   imposed_scale,   ancestral_cex = 2,   ancestral_pch = 19,   value_in_box = FALSE,   ancestral_as_shift = FALSE,   shifts_cex = 0.6,   shifts_bg = \"chocolate4\",   root_bg = \"chocolate4\",   shifts_adj = 0,   root_adj = 1,   color_shifts_regimes = FALSE,   regime_boxes = FALSE,   alpha_border = 70,   show.tip.label = FALSE,   label_cex = 0.5,   label_offset = 0,   axis_cex = 0.7,   edge.width = 1,   margin_plot = NULL,   gray_scale = FALSE,   ... )"},{"path":"/reference/plot.params_process.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot for class simul_process â plot.params_process","text":"x object class params_process. phylo phylogenetic tree. data matrix data tips tree. Must p rows ntaxa columns. simulated, use extract.simul_process function. traits vector integers giving numbers trait plotted. Default 1:p (traits). automatic_colors whether color edges automatically according regimes. Default TRUE. FALSE, colors can manually specified arguments color_characters colro_edges (see ). color_characters automatic_colors=FALSE, vector colors tips tree. color_edges automatic_colors=FALSE, vector colors edges tree. plot_ancestral_states whether plot ancestral traits inferred internal nodes tree. available one trait plotted. Default FALSE. ancestral_states plot_ancestral_states=TRUE, ancestral states must specified. simulated, use extract.simul_process function. imposed_scale plot_ancestral_states=TRUE, vector specifying imposed scale ancestral states plotting. Useful make comparisons. Default plotted trait. ancestral_cex plot_ancestral_states=TRUE, size ancestral states tree. Default 2. ancestral_pch plot_ancestral_states=TRUE, symbol used ancestral states. Default circles (pch=19). value_in_box whether plot value shift box edges. available one trait plotted. Can difficult read big trees. size text boxes controlled parameter. Default FALSE. ancestral_as_shift whether represent ancestral value root ancestral shift root edge. Default FALSE. shifts_cex (see ). shifts_cex value_in_box=TRUE, size text boxes. Default 0.8. shifts_bg value_in_box=TRUE, background color boxes. root_bg value_in_box=TRUE ancestral_as_shift=TRUE, background color ancestral box. shifts_adj adj parameter shifts position edges. Default 0 (beginning edge). root_adj ancestral_as_shift=TRUE, adj parameter ancestral value position root edge. Default 1. color_shifts_regimes whether color shift according regime (default color edge ). Default FALSE. regime_boxes whether draw box showing tips given. transparency border box controlled parameter alpha_border (see ). alpha_border regime_boxes=TRUE, alpha parameter border box. Default 70. show.tip.label whether show tip labels. Default FALSE. label_cex show.tip.label=TRUE, size labels. Default 0.5. label_offset show.tip.label=TRUE, size offset tree labels. Default 0. axis_cex cex label values plot. Default 0.7. edge.width width edge. Default 1. margin_plot vector giving margin around plot. Default c(0, 0, 0, 0). gray_scale TRUE, colors replaced gray scale. Default FALSE. ... arguments passed plot.phylo.","code":""},{"path":[]},{"path":"/reference/plot_criterion.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Model Selection Criterion â plot_criterion","title":"Plot Model Selection Criterion â plot_criterion","text":"function takes object class PhyloEM, result function PhyloEM, plots model selection criterion.","code":""},{"path":"/reference/plot_criterion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Model Selection Criterion â plot_criterion","text":"","code":"plot_criterion(   res,   method.selection = NULL,   add = FALSE,   select.col = \"red\",   ... )"},{"path":"/reference/plot_criterion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Model Selection Criterion â plot_criterion","text":"res object class PhyloEM, result function PhyloEM. method.selection select parameters plot. One \"LINselect\", \"DDSE\", \"Djump\" \"likelihood\" (un-penalized likelihood). Default \"LINselect\". See params_process.PhyloEM. add boolean: points added current plot (default FALSE). select.col color point selected criterion. Default \"red\". ... argument passed base plot.","code":""},{"path":[]},{"path":"/reference/prod_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Product of elements of a matrix â prod_index","title":"Product of elements of a matrix â prod_index","text":"prod_index return product chosen elements matrix.","code":""},{"path":"/reference/prod_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Product of elements of a matrix â prod_index","text":"","code":"prod_index(X, Id)"},{"path":"/reference/prod_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Product of elements of a matrix â prod_index","text":"X matrix p rows K column. row contains number partition 1<=k<=K groups one p children given node Id vector length p, result function xsimplex.","code":""},{"path":"/reference/prod_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Product of elements of a matrix â prod_index","text":"double : result product.","code":""},{"path":"/reference/prod_index.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Product of elements of a matrix â prod_index","text":"function used sum_simplex applied elements given xsimplex. Performs product : X[1,Id[1]]*X[2,Id[2]]*...*X[p,Id[p]] elements Id positive. Otherwise, just return 0.","code":""},{"path":"/reference/qr_solve_exact.html","id":null,"dir":"Reference","previous_headings":"","what":"exact qr.solve â qr_solve_exact","title":"exact qr.solve â qr_solve_exact","text":"function qr.solve, throws error exact fit found (instead returning least square fitted value, default behavior qr.solve).","code":""},{"path":"/reference/qr_solve_exact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"exact qr.solve â qr_solve_exact","text":"","code":"qr_solve_exact(a, b, tol = 1e-07)"},{"path":"/reference/qr_solve_exact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"exact qr.solve â qr_solve_exact","text":"QR decomposition rectangular matrix. b vector matrix right-hand sides equations. incidence.matrix. tol tolerance detecting linear dependencies columns x. used LAPACK false x real.","code":""},{"path":"/reference/recursionDown.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic recursion down the tree. â recursionDown","title":"Generic recursion down the tree. â recursionDown","text":"recursionDown uses function updateDown compute daughters rows matrix param.","code":""},{"path":"/reference/recursionDown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic recursion down the tree. â recursionDown","text":"","code":"recursionDown(phy, params, updateDown, ...)"},{"path":"/reference/recursionDown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic recursion down the tree. â recursionDown","text":"phy Input tree, cladewise order. params Matrix parameters update recursion updateDown Function used update ... Arguments used function updateDown","code":""},{"path":"/reference/recursionDown.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic recursion down the tree. â recursionDown","text":"Matrix parameters updated.","code":""},{"path":"/reference/recursionDown.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generic recursion down the tree. â recursionDown","text":"function used complex function need update quantity root tips tree. Note input tree must cladewise order.","code":""},{"path":"/reference/residuals.PhyloEM.html","id":null,"dir":"Reference","previous_headings":"","what":"Residuals of a fitted object â residuals.PhyloEM","title":"Residuals of a fitted object â residuals.PhyloEM","text":"residuals computes residuals parameters.","code":""},{"path":"/reference/residuals.PhyloEM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Residuals of a fitted object â residuals.PhyloEM","text":"","code":"# S3 method for class 'PhyloEM' residuals(object, ...)"},{"path":"/reference/residuals.PhyloEM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Residuals of a fitted object â residuals.PhyloEM","text":"object object class params_process PhyloEM. trait, column tip. column names checked tip names tree. incidence.matrix.full. Can specified avoid extra computations. ... PhyloEM object, arguments passed params_process.PhyloEM (choose parameters extract results, see documentation function).","code":""},{"path":"/reference/residuals.PhyloEM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Residuals of a fitted object â residuals.PhyloEM","text":"log likelihood data provided parameters tree.","code":""},{"path":[]},{"path":"/reference/sample_edges_intervals.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample equally spaced edges. â sample_edges_intervals","title":"Sample equally spaced edges. â sample_edges_intervals","text":"sample_edges_intervals samples K shifts, one K intervals regularly spaced height tree.","code":""},{"path":"/reference/sample_edges_intervals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample equally spaced edges. â sample_edges_intervals","text":"","code":"sample_edges_intervals(tree, K)"},{"path":"/reference/sample_edges_intervals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample equally spaced edges. â sample_edges_intervals","text":"tree : input tree K : number edges sampled.","code":""},{"path":"/reference/sample_edges_intervals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample equally spaced edges. â sample_edges_intervals","text":"vector edges","code":""},{"path":"/reference/sample_edges_intervals.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample equally spaced edges. â sample_edges_intervals","text":"case tree ultrametric, \"height\" defined minimum tip height.","code":""},{"path":"/reference/sample_shifts_edges.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample shifts edges in a parsimonious way. â sample_shifts_edges","title":"Sample shifts edges in a parsimonious way. â sample_shifts_edges","text":"sample_shifts_edges attempts find K shifts tree allocations parsimonious. actual generation edges done function sample_edges_intervals.","code":""},{"path":"/reference/sample_shifts_edges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample shifts edges in a parsimonious way. â sample_shifts_edges","text":"","code":"sample_shifts_edges(tree, K, part.list = enumerate_tips_under_edges(tree))"},{"path":"/reference/sample_shifts_edges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample shifts edges in a parsimonious way. â sample_shifts_edges","text":"tree : input tree K : number edges sampled.","code":""},{"path":"/reference/sample_shifts_edges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample shifts edges in a parsimonious way. â sample_shifts_edges","text":"vector edges","code":""},{"path":"/reference/sample_shifts_edges.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample shifts edges in a parsimonious way. â sample_shifts_edges","text":"function uses function enumerate_tips_under_edges generate list tips edge, function check_parsimony check parsimony given solution, assumption \"infinite site model\".","code":""},{"path":"/reference/scale_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale variance and selection strength from a linear transform â scale_params","title":"Scale variance and selection strength from a linear transform â scale_params","text":"Used process equivalencies re-scaled trees.","code":""},{"path":"/reference/scale_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale variance and selection strength from a linear transform â scale_params","text":"","code":"scale_params(params, f)"},{"path":"/reference/scale_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale variance and selection strength from a linear transform â scale_params","text":"params Parameters list f Factor linear transform. t' = f * t, function takes parameters phylo' back phylo.","code":""},{"path":"/reference/scale_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale variance and selection strength from a linear transform â scale_params","text":"re-scaled parameters","code":""},{"path":"/reference/segmentation.BM.html","id":null,"dir":"Reference","previous_headings":"","what":"Segmentation in the BM case â segmentation.BM","title":"Segmentation in the BM case â segmentation.BM","text":"segmentation.BM performs segmentation algorithm described.","code":""},{"path":"/reference/segmentation.BM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Segmentation in the BM case â segmentation.BM","text":"","code":"segmentation.BM(nbr_of_shifts, costs0, diff_exp)"},{"path":"/reference/segmentation.BM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Segmentation in the BM case â segmentation.BM","text":"nbr_of_shifts Number shifts phylogeny allowed costs0 Cost edge diff_exp Difference expectations","code":""},{"path":"/reference/segmentation.BM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Segmentation in the BM case â segmentation.BM","text":"List containing : edges_max : array nbr_of_shifts edges costs0 maximal.                           shifts:list containing computed tau delta","code":""},{"path":"/reference/segmentation.BM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Segmentation in the BM case â segmentation.BM","text":"function takes largest values costs0, make null,  thanks delta tau.","code":""},{"path":"/reference/segmentation.OU.specialCase.lasso.html","id":null,"dir":"Reference","previous_headings":"","what":"Segmentation in the OU special case, using lasso regression â segmentation.OU.specialCase.lasso","title":"Segmentation in the OU special case, using lasso regression â segmentation.OU.specialCase.lasso","text":"segmentation.OU.specialCase.lasso performs segmentation using lasso regression select edges shifts added.","code":""},{"path":"/reference/segmentation.OU.specialCase.lasso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Segmentation in the OU special case, using lasso regression â segmentation.OU.specialCase.lasso","text":"","code":"segmentation.OU.specialCase.lasso(   phylo,   nbr_of_shifts,   D,   Xp,   penscale = rep(1, (nrow(phylo$edge) + 1)),   ... )"},{"path":"/reference/segmentation.OU.specialCase.lasso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Segmentation in the OU special case, using lasso regression â segmentation.OU.specialCase.lasso","text":"phylo phylogenetic tree nbr_of_shifts Number shifts phylogeny allowed","code":""},{"path":"/reference/segmentation.OU.specialCase.lasso.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Segmentation in the OU special case, using lasso regression â segmentation.OU.specialCase.lasso","text":"List containing : beta_0 : optimal value root                           shifts : list containing computed tau delta                           costs : vector costs","code":""},{"path":"/reference/segmentation.OU.specialCase.lasso.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Segmentation in the OU special case, using lasso regression â segmentation.OU.specialCase.lasso","text":"function re-write sum costs minimized least squares  regression problem, uses lasso regression solve . uses  functions incidence.matrix.full express problem  linear model.","code":""},{"path":"/reference/segmentation.OU.specialCase.same_shifts.html","id":null,"dir":"Reference","previous_headings":"","what":"Segmentation in the OU special case, conserving the same shifts position. â segmentation.OU.specialCase.same_shifts","title":"Segmentation in the OU special case, conserving the same shifts position. â segmentation.OU.specialCase.same_shifts","text":"segmentation.OU.specialCase.same_shifts keeps shifts position, optimize sum costs using function best_scenario","code":""},{"path":"/reference/segmentation.OU.specialCase.same_shifts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Segmentation in the OU special case, conserving the same shifts position. â segmentation.OU.specialCase.same_shifts","text":"","code":"segmentation.OU.specialCase.same_shifts(phylo, shifts_old, D, Xp, ...)"},{"path":"/reference/segmentation.OU.specialCase.same_shifts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Segmentation in the OU special case, conserving the same shifts position. â segmentation.OU.specialCase.same_shifts","text":"phylo phylogenetic tree shifts_old previous list shifts (position used)","code":""},{"path":"/reference/segmentation.OU.specialCase.same_shifts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Segmentation in the OU special case, conserving the same shifts position. â segmentation.OU.specialCase.same_shifts","text":"List containing : beta_0 : optimal value root                           shifts : list containing computed tau delta                           costs : vector costs","code":""},{"path":"/reference/segmentation.OU.specialCase.same_shifts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Segmentation in the OU special case, conserving the same shifts position. â segmentation.OU.specialCase.same_shifts","text":"best move keeping previous shifts positions.","code":""},{"path":"/reference/shifts.list_to_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the matrix of shifts. â shifts.list_to_matrix","title":"Compute the matrix of shifts. â shifts.list_to_matrix","text":"shifts.list_to_matrix takes list description shifts give matrix representation shifts : b th element lth line value shift character l occurring branch b","code":""},{"path":"/reference/shifts.list_to_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the matrix of shifts. â shifts.list_to_matrix","text":"","code":"shifts.list_to_matrix(phy, shifts, p = nrow(shifts$values))"},{"path":"/reference/shifts.list_to_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the matrix of shifts. â shifts.list_to_matrix","text":"phy Input tree. shifts list description shifts : shifts$edges, shifts$values. p number traits (optional, needed shifts = NULL).","code":""},{"path":"/reference/shifts.list_to_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the matrix of shifts. â shifts.list_to_matrix","text":"Matrix p x Nedge length nbranch.","code":""},{"path":[]},{"path":"/reference/shifts.list_to_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the vector of shifts. â shifts.list_to_vector","title":"Compute the vector of shifts. â shifts.list_to_vector","text":"shifts.list_to_vector takes list description shifts give vectorial representation shifts : b th element vector value shift occurring branch b.","code":""},{"path":"/reference/shifts.list_to_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the vector of shifts. â shifts.list_to_vector","text":"","code":"shifts.list_to_vector(phy, shifts)"},{"path":"/reference/shifts.list_to_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the vector of shifts. â shifts.list_to_vector","text":"phy Input tree. shifts : list description shifts : shifts$edges, shifts$values","code":""},{"path":"/reference/shifts.list_to_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the vector of shifts. â shifts.list_to_vector","text":"Vector length nbranch.","code":""},{"path":[]},{"path":"/reference/shifts.matrix_to_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the list of shifts. â shifts.matrix_to_list","title":"Compute the list of shifts. â shifts.matrix_to_list","text":"shifts.matrix_to_list takes vectorial description shifts create list description shifts.","code":""},{"path":"/reference/shifts.matrix_to_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the list of shifts. â shifts.matrix_to_list","text":"","code":"shifts.matrix_to_list(delta)"},{"path":"/reference/shifts.matrix_to_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the list of shifts. â shifts.matrix_to_list","text":"delta matrix description shift.","code":""},{"path":"/reference/shifts.matrix_to_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the list of shifts. â shifts.matrix_to_list","text":"List describing shifts.","code":""},{"path":[]},{"path":"/reference/shifts.vector_to_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the list of shifts. â shifts.vector_to_list","title":"Compute the list of shifts. â shifts.vector_to_list","text":"shifts.vector_to_list takes vectorial description shifts create list description shifts.","code":""},{"path":"/reference/shifts.vector_to_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the list of shifts. â shifts.vector_to_list","text":"","code":"shifts.vector_to_list(delta)"},{"path":"/reference/shifts.vector_to_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the list of shifts. â shifts.vector_to_list","text":"delta : vector description shift.","code":""},{"path":"/reference/shifts.vector_to_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the list of shifts. â shifts.vector_to_list","text":"Vector length nbranch.","code":""},{"path":[]},{"path":"/reference/shifts_to_simmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Simmap format mapping from list of edges â shifts_to_simmap","title":"Simmap format mapping from list of edges â shifts_to_simmap","text":"shifts_to_simmap takes vector edges shifts occur, return simmap formatted tree, mapped corresponding regimes.","code":""},{"path":"/reference/shifts_to_simmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simmap format mapping from list of edges â shifts_to_simmap","text":"","code":"shifts_to_simmap(tree, shifts_edges)"},{"path":"/reference/shifts_to_simmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simmap format mapping from list of edges â shifts_to_simmap","text":"tree input tree phylo format shifts_edges shifts positions edges","code":""},{"path":"/reference/shifts_to_simmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simmap format mapping from list of edges â shifts_to_simmap","text":"tree simmap object","code":""},{"path":"/reference/shifts_to_simmap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simmap format mapping from list of edges â shifts_to_simmap","text":"Ancestral state always 0, states consecutive integers.","code":""},{"path":"/reference/simul_process.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate a Stochastic Process on a tree â simul_process","title":"Simulate a Stochastic Process on a tree â simul_process","text":"simulate simulate stochastic process tree.","code":""},{"path":"/reference/simul_process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate a Stochastic Process on a tree â simul_process","text":"","code":"simul_process(x, ...)  # S3 method for class 'params_process' simul_process(   x,   phylo,   simulate_random = TRUE,   checks = TRUE,   U_tree = NULL,   times_shared = NULL,   ... )  # S3 method for class 'PhyloEM' simul_process(   x,   simulate_random = TRUE,   checks = TRUE,   U_tree = NULL,   times_shared = NULL,   ... )"},{"path":"/reference/simul_process.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate a Stochastic Process on a tree â simul_process","text":"x object class params_process PhyloEM. ... PhyloEM object, arguments passed params_process.PhyloEM (choose parameters extract results, see documentation function). phylo phylogenetic tree, class phylo. simulate_random set FALSE expected values needed (random sample). Default TRUE. checks whether check entry parameters consistency. Default TRUE. U_tree optional, full incidence matrix tree, result function incidence.matrix.full. Can specified avoid extra computations. times_shared optional, times shared ancestry nodes tips, result function compute_times_ca. Can specified avoid extra computations.","code":""},{"path":"/reference/simul_process.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate a Stochastic Process on a tree â simul_process","text":"S3 object class simul_process. contains: sim_traits array dimensions p x Nnode x 2 (BM)  p x Nnode x 3 (OU). trait t, 1 <= t <= p, sim_traits[t, , ]  tree columns, containing respectively simulated state,  expected value optimal value nodes. phylo phylogenetic tree used simulations (class phylo). params parameters used simulations  (class params_proces).","code":""},{"path":"/reference/simul_process.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Simulate a Stochastic Process on a tree â simul_process","text":"simul_process(params_process): params_process object simul_process(PhyloEM): PhyloEM object","code":""},{"path":[]},{"path":"/reference/simulate_internal.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate a Stochastic Process on a tree â simulate_internal","title":"Simulate a Stochastic Process on a tree â simulate_internal","text":"simulate_internal simulate stochastic process tree.","code":""},{"path":"/reference/simulate_internal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate a Stochastic Process on a tree â simulate_internal","text":"","code":"simulate_internal(   phylo,   process = c(\"BM\", \"OU\", \"scOU\", \"OUBM\", \"StudentOU\"),   p = 1,   root.state = list(random = FALSE, stationary.root = FALSE, value.root = NA, exp.root =     NA, var.root = NA),   shifts = list(edges = NULL, values = NULL, relativeTimes = NULL),   eps = 10^(-6),   selection.strength = NULL,   variance = NULL,   optimal.value = NULL,   checks = TRUE,   simulate_random = TRUE,   U_tree = NULL,   times_shared = NULL,   df = 1 )"},{"path":"/reference/simulate_internal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate a Stochastic Process on a tree â simulate_internal","text":"phylo phylogenetic tree, class phylo. process model used simulation. One \"BM\" (full BM model, univariate multivariate); \"OU\" (full OU model, univariate multivariate); \"scOU\" (\"scalar OU\" model). p Dimension simulated trait root.state List describing state root, : random random state (TRUE) deterministic state (FALSE) value.root deterministic, value character root exp.root random, expectation character root var.root random, variance character root (pxp matrix) shifts List position values shifts : edges vector K id edges shifts values matrix p x K values shifts edges   (one column = one shift) relativeTimes vector dimension K relative time shift parent node edges eps Tolerance value norm 1 selection strength matrix OU selection.strength Matrix selection strength size p x p (OU) variance Variance-covariance matrix size p x p optimal.value Vector p optimal values root (OU) checks whether check entry parameters consistency. Default TRUE. simulate_random set FALSE expected values needed (random sample). Default TRUE. U_tree optional, full incidence matrix tree, result function incidence.matrix.full. times_shared optional, times shared ancestry nodes tips, result function compute_times_ca. Can specified avoid extra computations. df process \"StudentOU\", number degree freedom chosen student law. default 1.","code":""},{"path":"/reference/simulate_internal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate a Stochastic Process on a tree â simulate_internal","text":"paramSimu array dimensions p x Nnode x 2 (BM)  p x Nnode x 3 (OU). trait t, 1 <= t <= p, paramSimu[t, , ]  tree columns, containing respectively simulated state,  expected value optimal value nodes.","code":""},{"path":"/reference/split_params_independent.html","id":null,"dir":"Reference","previous_headings":"","what":"Split independent parameters into a list of parameters â split_params_independent","title":"Split independent parameters into a list of parameters â split_params_independent","text":"split_params_independent split params object process p independent traits p params objects. reverse operation done merge_params_independent","code":""},{"path":"/reference/split_params_independent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split independent parameters into a list of parameters â split_params_independent","text":"","code":"split_params_independent(params)"},{"path":"/reference/split_params_independent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split independent parameters into a list of parameters â split_params_independent","text":"params parameters","code":""},{"path":"/reference/split_params_independent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split independent parameters into a list of parameters â split_params_independent","text":"list p parameters","code":""},{"path":"/reference/sum_partitions.cardFixed.html","id":null,"dir":"Reference","previous_headings":"","what":"Sum on subsets of a given cardinal. â sum_partitions.cardFixed","title":"Sum on subsets of a given cardinal. â sum_partitions.cardFixed","text":"sum_partitions.cardFixed returns sum subset [1,p], || fixed, sums computed sum_prod.comb.","code":""},{"path":"/reference/sum_partitions.cardFixed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sum on subsets of a given cardinal. â sum_partitions.cardFixed","text":"","code":"sum_partitions.cardFixed(A, N, K, p, cardI)"},{"path":"/reference/sum_partitions.cardFixed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sum on subsets of a given cardinal. â sum_partitions.cardFixed","text":"matrix p rows K column. row contains number marked partition 1<=k<=K groups one p children given node. N matrix p rows K column. row contains number partition 1<=k<=K groups one p children given node K integer. number groups wanted. p integer. number daughters node. cardI integer. cardinal subset wanted.","code":""},{"path":"/reference/sum_partitions.cardFixed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sum on subsets of a given cardinal. â sum_partitions.cardFixed","text":"double : result sum.","code":""},{"path":"/reference/sum_partitions.cardFixed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sum on subsets of a given cardinal. â sum_partitions.cardFixed","text":"function uses combn enumerate subsets [1,p] given cardinal, performs wanted sum subsets.","code":""},{"path":"/reference/sum_partitions.html","id":null,"dir":"Reference","previous_headings":"","what":"Sum on all subsets. â sum_partitions","title":"Sum on all subsets. â sum_partitions","text":"sum_partitions returns sum subset [1,p], ||>m.","code":""},{"path":"/reference/sum_partitions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sum on all subsets. â sum_partitions","text":"","code":"sum_partitions(A, N, K, p, m)"},{"path":"/reference/sum_partitions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sum on all subsets. â sum_partitions","text":"matrix p rows K column. row contains number marked partition 1<=k<=K groups one p children given node. N matrix p rows K column. row contains number partition 1<=k<=K groups one p children given node K integer. number groups wanted. p integer. number daughters node. m integer. minimum cardinal subset allowed.","code":""},{"path":"/reference/sum_partitions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sum on all subsets. â sum_partitions","text":"double : result sum.","code":""},{"path":"/reference/sum_partitions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sum on all subsets. â sum_partitions","text":"function applies sum_partitions.cardFixed integer m p, sum results.","code":""},{"path":"/reference/sum_prod.comb.html","id":null,"dir":"Reference","previous_headings":"","what":"Sum on a simplex â sum_prod.comb","title":"Sum on a simplex â sum_prod.comb","text":"sum_prod.comb returns sum k_1+...+k_p=K+||-1, k_i>0 products prod([,k_i], )*prod(N[,k_i], ).","code":""},{"path":"/reference/sum_prod.comb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sum on a simplex â sum_prod.comb","text":"","code":"sum_prod.comb(I, A, N, K, p)"},{"path":"/reference/sum_prod.comb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sum on a simplex â sum_prod.comb","text":"vector integers representing subset [1,p] matrix p rows K column. row contains number marked partition 1<=k<=K groups one p children given node. N matrix p rows K column. row contains number partition 1<=k<=K groups one p children given node K integer. number groups wanted. p integer. number daughters node.","code":""},{"path":"/reference/sum_prod.comb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sum on a simplex â sum_prod.comb","text":"double : result sum.","code":""},{"path":"/reference/sum_prod.comb.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sum on a simplex â sum_prod.comb","text":"function uses sum_simplex perform wanted sum ad-hoc matrix, combination rows N.","code":""},{"path":"/reference/sum_simplex.html","id":null,"dir":"Reference","previous_headings":"","what":"Sum on a simplex â sum_simplex","title":"Sum on a simplex â sum_simplex","text":"sum_simplex returns sum k_1+...+k_p=K, k_i>0 products NN[,k_i].","code":""},{"path":"/reference/sum_simplex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sum on a simplex â sum_simplex","text":"","code":"sum_simplex(NN, K, p)"},{"path":"/reference/sum_simplex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sum on a simplex â sum_simplex","text":"NN matrix p rows K column. row contains number partition 1<=k<=K groups one p children given node K integer. number groups wanted. p integer. number daughters node.","code":""},{"path":"/reference/sum_simplex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sum on a simplex â sum_simplex","text":"double : result sum.","code":""},{"path":"/reference/sum_simplex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sum on a simplex â sum_simplex","text":"function uses xsimplex perform product NN[,k_i] combination k_i k_1+...+k_p=K, k_i>0, using function prod_index. sum products.","code":""},{"path":"/reference/test.root.state.html","id":null,"dir":"Reference","previous_headings":"","what":"Test state of root. â test.root.state","title":"Test state of root. â test.root.state","text":"test.root.state test whether parameters root.state given user coherent. , returns new corrected list define root.state.","code":""},{"path":"/reference/test.root.state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test state of root. â test.root.state","text":"","code":"test.root.state(root.state, process = c(\"BM\", \"OU\", \"scOU\", \"OUBM\"), ...)"},{"path":"/reference/test.root.state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test state of root. â test.root.state","text":"root.state list giving root state process \"BM\", \"OU\" \"scOU\" ... parameters process (OU)","code":""},{"path":"/reference/test.root.state.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test state of root. â test.root.state","text":"Coherent list root.state.","code":""},{"path":"/reference/test.root.state.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Test state of root. â test.root.state","text":"test coherence, following priorities applied:  random > stationary.root > values.root = exp.root = var.root","code":""},{"path":"/reference/transform_branch_length.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform branch length for a re-scaled BM â transform_branch_length","title":"Transform branch length for a re-scaled BM â transform_branch_length","text":"Re-scale branch length tree BM running new tree produces observations tips OU parameter alpha.","code":""},{"path":"/reference/transform_branch_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform branch length for a re-scaled BM â transform_branch_length","text":"","code":"transform_branch_length(phylo, alp)"},{"path":"/reference/transform_branch_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform branch length for a re-scaled BM â transform_branch_length","text":"phylo phylogenetic tree class phylo, branch lengths. alp Value selection strength.","code":""},{"path":"/reference/transform_branch_length.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform branch length for a re-scaled BM â transform_branch_length","text":"phylo phylogenetic tree, transformed branch lengths.","code":""},{"path":"/reference/transform_shifts_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform the shift values â transform_shifts_values","title":"Transform the shift values â transform_shifts_values","text":"transform_shifts_values takes shifts generating given expectation structure given OU alpha = , gives back equivalent shifts values produce structure OU alpha = . 0, process supposed BM.","code":""},{"path":"/reference/transform_shifts_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform the shift values â transform_shifts_values","text":"","code":"transform_shifts_values(shifts, from = 0, to, phylo)"},{"path":"/reference/transform_shifts_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform the shift values â transform_shifts_values","text":"shifts shifts original process alpha value original process. equals 0, original process taken BM. alpha value destination process phylo phylogenetic tree (un-scaled)","code":""},{"path":"/reference/update.allocate_regimes_from_shifts.html","id":null,"dir":"Reference","previous_headings":"","what":"Update function for regime allocation. â update.allocate_regimes_from_shifts","title":"Update function for regime allocation. â update.allocate_regimes_from_shifts","text":"update.allocate_regimes_from_shifts computes regime daughter node, knowing regime parent node vector shifts positions","code":""},{"path":"/reference/update.allocate_regimes_from_shifts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update function for regime allocation. â update.allocate_regimes_from_shifts","text":"","code":"update.allocate_regimes_from_shifts(edgeNbr, ancestral, shifts_edges, ...)"},{"path":"/reference/update.allocate_regimes_from_shifts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update function for regime allocation. â update.allocate_regimes_from_shifts","text":"edgeNbr : Number edge considered ancestral : regime parent node shifts_edges positions edges","code":""},{"path":"/reference/update.allocate_regimes_from_shifts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update function for regime allocation. â update.allocate_regimes_from_shifts","text":"regime daughter node.","code":""},{"path":"/reference/update.allocate_regimes_from_shifts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update function for regime allocation. â update.allocate_regimes_from_shifts","text":"function used function allocate_regimes_from_shifts designed furnish function recursionDown right structure  data.","code":""},{"path":"/reference/update.compute_betas_from_shifts.html","id":null,"dir":"Reference","previous_headings":"","what":"Update function for optimal value computation â update.compute_betas_from_shifts","title":"Update function for optimal value computation â update.compute_betas_from_shifts","text":"update.compute_betas_from_shifts computes optimal value daughter node, knowing optimal value parent node vector shifts.","code":""},{"path":"/reference/update.compute_betas_from_shifts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update function for optimal value computation â update.compute_betas_from_shifts","text":"","code":"update.compute_betas_from_shifts(edgeNbr, ancestral, shifts, ...)"},{"path":"/reference/update.compute_betas_from_shifts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update function for optimal value computation â update.compute_betas_from_shifts","text":"edgeNbr : Number edge considered ancestral : Computed vector parental node shifts position values shifts","code":""},{"path":"/reference/update.compute_betas_from_shifts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update function for optimal value computation â update.compute_betas_from_shifts","text":"Updated matrix size (Nnode + ntaxa)x1.","code":""},{"path":"/reference/update.compute_betas_from_shifts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update function for optimal value computation â update.compute_betas_from_shifts","text":"function used function compute_betas_from_shifts designed furnish function recursionDown right structure data.","code":""},{"path":"/reference/update.enumerate_parsimony.html","id":null,"dir":"Reference","previous_headings":"","what":"Actualization of the enumeration. â update.enumerate_parsimony","title":"Actualization of the enumeration. â update.enumerate_parsimony","text":"update.enumerate_parsimony used function enumerate_parsimony, compute solution parent node, given children.","code":""},{"path":"/reference/update.enumerate_parsimony.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Actualization of the enumeration. â update.enumerate_parsimony","text":"","code":"update.enumerate_parsimony(   daughters,   daughtersParams,   parent,   cost,   clus,   pos,   ... )"},{"path":"/reference/update.enumerate_parsimony.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Actualization of the enumeration. â update.enumerate_parsimony","text":"daughters vector daughters nodes. daughtersParams list length(daughters) entries, entry list k matrices representing possible allocations starting daughter. parent parent node.","code":""},{"path":"/reference/update.enumerate_parsimony.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Actualization of the enumeration. â update.enumerate_parsimony","text":"list size nclus, entry matrix representing possible allocations starting node parent state k.","code":""},{"path":"/reference/update.enumerate_parsimony.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Actualization of the enumeration. â update.enumerate_parsimony","text":"function takes list L entries corresponding children node, compute, regimes, possible allocations starting parent node regime. uses functions select.matrices select possible states children, matrix_of_possibles find possible states.","code":""},{"path":"/reference/update.incidence.matrix.full.html","id":null,"dir":"Reference","previous_headings":"","what":"Update function for incidence matrix â update.incidence.matrix.full","title":"Update function for incidence matrix â update.incidence.matrix.full","text":"update.incidence.matrix.full updates matrix initialized init.incidence.matrix.full computation incidence matrix incidence.matrix.full.","code":""},{"path":"/reference/update.incidence.matrix.full.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update function for incidence matrix â update.incidence.matrix.full","text":"","code":"update.incidence.matrix.full(daughtersParams, parent, ...)"},{"path":"/reference/update.incidence.matrix.full.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update function for incidence matrix â update.incidence.matrix.full","text":"daughtersParams : rows updated matrix corresponding daughters current node.","code":""},{"path":"/reference/update.incidence.matrix.full.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update function for incidence matrix â update.incidence.matrix.full","text":"Vector length ntaxa + Nnode, indicating lineages branch current node belongs .","code":""},{"path":"/reference/update.incidence.matrix.full.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update function for incidence matrix â update.incidence.matrix.full","text":"node belongs lineages daughters.","code":""},{"path":"/reference/update.incidence.matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Update function for incidence matrix â update.incidence.matrix","title":"Update function for incidence matrix â update.incidence.matrix","text":"update.incidence.matrix updates matrix initialized init.incidence.matrix computation incidence matrix incidence.matrix.","code":""},{"path":"/reference/update.incidence.matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update function for incidence matrix â update.incidence.matrix","text":"","code":"update.incidence.matrix(daughtersParams, ...)"},{"path":"/reference/update.incidence.matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update function for incidence matrix â update.incidence.matrix","text":"daughtersParams : rows updated matrix corresponding daughters current node.","code":""},{"path":"/reference/update.incidence.matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update function for incidence matrix â update.incidence.matrix","text":"Vector length ntaxa, indicating lineages branch current node belongs .","code":""},{"path":"/reference/update.incidence.matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update function for incidence matrix â update.incidence.matrix","text":"node belongs lineages daughters.","code":""},{"path":"/reference/update.parsimonyCost.html","id":null,"dir":"Reference","previous_headings":"","what":"Actualization for parsimonyCost. â update.parsimonyCost","title":"Actualization for parsimonyCost. â update.parsimonyCost","text":"update.parsimonyCost compute line vector parent node, given vectors daughters.","code":""},{"path":"/reference/update.parsimonyCost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Actualization for parsimonyCost. â update.parsimonyCost","text":"","code":"update.parsimonyCost(daughtersParams, ...)"},{"path":"/reference/update.parsimonyCost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Actualization for parsimonyCost. â update.parsimonyCost","text":"daughtersParams (ndaughters) x (nclus) matrix line vectors cost daughters node.","code":""},{"path":"/reference/update.parsimonyCost.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Actualization for parsimonyCost. â update.parsimonyCost","text":"line vector corresponding parent node.","code":""},{"path":"/reference/update.parsimonyCost.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Actualization for parsimonyCost. â update.parsimonyCost","text":"function computes cost putting parent state k, minimum number shifts needed get given clustering trees bellow parental node.","code":""},{"path":"/reference/update.parsimonyNumber.html","id":null,"dir":"Reference","previous_headings":"","what":"Actualization for parsimonyNumber. â update.parsimonyNumber","title":"Actualization for parsimonyNumber. â update.parsimonyNumber","text":"update.parsimonyNumber compute line vector parent node, given vectors daughters.","code":""},{"path":"/reference/update.parsimonyNumber.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Actualization for parsimonyNumber. â update.parsimonyNumber","text":"","code":"update.parsimonyNumber(daughters, daughtersParams, cost, ...)"},{"path":"/reference/update.parsimonyNumber.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Actualization for parsimonyNumber. â update.parsimonyNumber","text":"daughters identifiers daughters nodes. daughtersParams ndaughters x (nclus) matrix line vectors number solutions daughters nodes. cost (ntaxa + Nnode) x nclus matrix costs (computed parsimonyCost).","code":""},{"path":"/reference/update.parsimonyNumber.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Actualization for parsimonyNumber. â update.parsimonyNumber","text":"line vector corresponding parent node.","code":""},{"path":"/reference/update.parsimonyNumber.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Actualization for parsimonyNumber. â update.parsimonyNumber","text":"function uses function compute_state_filter find admissible states daughters, given starting state parent.","code":""},{"path":"/reference/update.partitionsNumber.gen.html","id":null,"dir":"Reference","previous_headings":"","what":"Update formula in the general case â update.partitionsNumber.gen","title":"Update formula in the general case â update.partitionsNumber.gen","text":"update.partitionsNumber.gen apply actualization formula get Nk Ak node given daughters.","code":""},{"path":"/reference/update.partitionsNumber.gen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update formula in the general case â update.partitionsNumber.gen","text":"","code":"update.partitionsNumber.gen(daughtersParams, ...)"},{"path":"/reference/update.partitionsNumber.gen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update formula in the general case â update.partitionsNumber.gen","text":"daughtersParams : matrix 2*npart columns. row contains result partitionsNumber children given node","code":""},{"path":"/reference/update.partitionsNumber.gen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update formula in the general case â update.partitionsNumber.gen","text":"vector size 2*npart. k=1:npart contains number partitions k groups compatible sub tree starting current node ; k=(npart+1):2*npart, contains number \"marked\" partitions (k-npart) groups compatible sub tree starting current node.","code":""},{"path":"/reference/update.partitionsNumber.gen.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update formula in the general case â update.partitionsNumber.gen","text":"Uses functions sum_partitions sum_simplex compute needed sums.","code":""},{"path":"/reference/wrapper_E_step.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for E step in EM â wrapper_E_step","title":"Wrapper for E step in EM â wrapper_E_step","text":"wrapper_E_step used EM algorithm. calls recursively case independent parameters.","code":""},{"path":"/reference/wrapper_E_step.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for E step in EM â wrapper_E_step","text":"","code":"wrapper_E_step(   phylo,   times_shared,   distances_phylo,   process,   params_old,   masque_data,   F_moments,   independent,   Y_data_vec_known,   miss,   Y_data,   U_tree,   compute_E )"},{"path":"/news/index.html","id":"phylogeneticem-181","dir":"Changelog","previous_headings":"","what":"PhylogeneticEM 1.8.1","title":"PhylogeneticEM 1.8.1","text":"CRAN release: 2025-09-23 change arma::is_finite(val) std::isfinite(val)","code":""},{"path":"/news/index.html","id":"phylogeneticem-180","dir":"Changelog","previous_headings":"","what":"PhylogeneticEM 1.8.0","title":"PhylogeneticEM 1.8.0","text":"CRAN release: 2025-02-14 merge_rotation now works trait 2 dimensions. Fix documentation notes CRAN checks. Function merge_alpha_grids merge PhyloEM runs data set separate grids alpha values.","code":""},{"path":"/news/index.html","id":"phylogeneticem-170","dir":"Changelog","previous_headings":"","what":"PhylogeneticEM 1.7.0","title":"PhylogeneticEM 1.7.0","text":"CRAN release: 2024-01-31 Fix documentation notes CRAN checks. Function node_optimal_values optimal values computation nodes. Trait names now inherited params_process objects.","code":""},{"path":"/news/index.html","id":"phylogeneticem-160","dir":"Changelog","previous_headings":"","what":"PhylogeneticEM 1.6.0","title":"PhylogeneticEM 1.6.0","text":"CRAN release: 2022-08-31 Update code comply Matrix 1.4-2 new coding standards. Function compute_stationary_variance now always return dpoMatrix, using Matrix::nearPD needed. change impacts computations full variance selection strength matrices, never used typical PhyloEM analysis, impact direct calls function simulations complex scenarios. plot.equivalent_shifts make sure colors regimes consistent equivalent solutions.","code":""},{"path":"/news/index.html","id":"phylogeneticem-150","dir":"Changelog","previous_headings":"","what":"PhylogeneticEM 1.5.0","title":"PhylogeneticEM 1.5.0","text":"CRAN release: 2021-09-16 merge_rotations now accepts datasets entire species missing, throws error missing data pattern compatible rotation. function now throws warning two traits highly correlated. Replace Travis Github Actions. Build doc automatically GHA.","code":""},{"path":"/news/index.html","id":"phylogeneticem-140","dir":"Changelog","previous_headings":"","what":"PhylogeneticEM 1.4.0","title":"PhylogeneticEM 1.4.0","text":"CRAN release: 2020-02-11 Add option âshow_axis_traitsâ control trait axis plot. Function simul_process can now handle âOU/BMâ process (.e.Â OU eigen values equal zero). Documented arguments usage documentation object equivalent_shifts. Check âR_CHECK_FORCE_SUGGESTS=FALSEâ now runs.","code":""},{"path":"/news/index.html","id":"phylogeneticem-130","dir":"Changelog","previous_headings":"","what":"PhylogeneticEM 1.3.0","title":"PhylogeneticEM 1.3.0","text":"CRAN release: 2019-10-03 Bug fix plot function univariate result. Tree need ultrametric BM Change tol tol_EM estimateEM actual binding Bug fixes plot function displaying traits. Add option âname_traitâ plot function ancestral state reconstruction. univariate trait, BM re-scaling now applied default. Update ape, replace .binary.tree .binary. Remove dependency Rphylopars (longer CRAN).","code":""},{"path":"/news/index.html","id":"phylogeneticem-121","dir":"Changelog","previous_headings":"","what":"PhylogeneticEM 1.2.1","title":"PhylogeneticEM 1.2.1","text":"CRAN release: 2018-09-11 Added references Description Reduce checking vignette building time","code":""},{"path":"/news/index.html","id":"phylogeneticem-120","dir":"Changelog","previous_headings":"","what":"PhylogeneticEM 1.2.0","title":"PhylogeneticEM 1.2.0","text":"option_is.ultrametric control ape::.ultrametric check. Go back updated version gglasso (faster grplasso). change results PhylogeneticEM. Functions find_rotation merge_rotations deal datasets equal rotation. Functions get_criterion plot_criterion get plot criterion used model selection easily. Function PhyloEM can now allow negative values alpha, fit EB model. function plot, fixed bug led wrong parameters selected ancestral trait reconstruction.","code":""},{"path":"/news/index.html","id":"phylogeneticem-110","dir":"Changelog","previous_headings":"","what":"PhylogeneticEM 1.1.0","title":"PhylogeneticEM 1.1.0","text":"CRAN release: 2017-09-08 Remove dependency gglasso (replaced grplasso). change results PhylogeneticEM. Issue error message tree zero-length branches. Added options plot.equivalent_shifts.","code":""},{"path":"/news/index.html","id":"phylogeneticem-101","dir":"Changelog","previous_headings":"","what":"PhylogeneticEM 1.0.1","title":"PhylogeneticEM 1.0.1","text":"CRAN release: 2017-05-01 Impose maximum value alpha find_grid_alpha respect machine max double. added argument label_font plot function control label font. added argument axis_las plot function control axis las. Plotting missing values correctly plot.PhyloEM. Bug fixes plotting PhyloEM object p = 1. p=1 nbr_alpha missing, switch estimated mode alpha. registration c++ code comply R 3.4 new standards.","code":""},{"path":"/news/index.html","id":"phylogeneticem-100","dir":"Changelog","previous_headings":"","what":"PhylogeneticEM 1.0.0","title":"PhylogeneticEM 1.0.0","text":"CRAN release: 2017-01-31 Initial Release.","code":""}]
